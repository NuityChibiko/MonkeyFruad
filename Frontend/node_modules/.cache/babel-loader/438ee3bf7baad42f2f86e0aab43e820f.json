{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar getAsyncIteratorMethod = require('../internals/get-async-iterator-method');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\n  var state = this;\n  var mapper = state.mapper;\n  var innerIterator, iteratorMethod;\n  return new Promise(function (resolve, reject) {\n    var outerLoop = function () {\n      try {\n        Promise.resolve(anObject(state.next.call(state.iterator, arg))).then(function (step) {\n          try {\n            if (anObject(step).done) {\n              state.done = true;\n              resolve({\n                done: true,\n                value: undefined\n              });\n            } else {\n              Promise.resolve(mapper(step.value)).then(function (mapped) {\n                try {\n                  iteratorMethod = getAsyncIteratorMethod(mapped);\n\n                  if (iteratorMethod !== undefined) {\n                    state.innerIterator = innerIterator = anObject(iteratorMethod.call(mapped));\n                    state.innerNext = aFunction(innerIterator.next);\n                    return innerLoop();\n                  }\n\n                  reject(TypeError('.flatMap callback should return an iterable object'));\n                } catch (error2) {\n                  reject(error2);\n                }\n              }, reject);\n            }\n          } catch (error1) {\n            reject(error1);\n          }\n        }, reject);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    var innerLoop = function () {\n      if (innerIterator = state.innerIterator) {\n        try {\n          Promise.resolve(anObject(state.innerNext.call(innerIterator))).then(function (result) {\n            try {\n              if (anObject(result).done) {\n                state.innerIterator = state.innerNext = null;\n                outerLoop();\n              } else resolve({\n                done: false,\n                value: result.value\n              });\n            } catch (error1) {\n              reject(error1);\n            }\n          }, reject);\n        } catch (error) {\n          reject(error);\n        }\n      } else outerLoop();\n    };\n\n    innerLoop();\n  });\n});\n$({\n  target: 'AsyncIterator',\n  proto: true,\n  real: true\n}, {\n  flatMap: function flatMap(mapper) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      mapper: aFunction(mapper),\n      innerIterator: null,\n      innerNext: null\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.async-iterator.flat-map.js"],"names":["$","require","aFunction","anObject","createAsyncIteratorProxy","getAsyncIteratorMethod","AsyncIteratorProxy","arg","Promise","state","mapper","innerIterator","iteratorMethod","resolve","reject","outerLoop","next","call","iterator","then","step","done","value","undefined","mapped","innerNext","innerLoop","TypeError","error2","error1","error","result","target","proto","real","flatMap"],"mappings":"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","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar $ = require('../internals/export');\r\nvar aFunction = require('../internals/a-function');\r\nvar anObject = require('../internals/an-object');\r\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\r\nvar getAsyncIteratorMethod = require('../internals/get-async-iterator-method');\r\n\r\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\r\n  var state = this;\r\n  var mapper = state.mapper;\r\n  var innerIterator, iteratorMethod;\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    var outerLoop = function () {\r\n      try {\r\n        Promise.resolve(anObject(state.next.call(state.iterator, arg))).then(function (step) {\r\n          try {\r\n            if (anObject(step).done) {\r\n              state.done = true;\r\n              resolve({ done: true, value: undefined });\r\n            } else {\r\n              Promise.resolve(mapper(step.value)).then(function (mapped) {\r\n                try {\r\n                  iteratorMethod = getAsyncIteratorMethod(mapped);\r\n                  if (iteratorMethod !== undefined) {\r\n                    state.innerIterator = innerIterator = anObject(iteratorMethod.call(mapped));\r\n                    state.innerNext = aFunction(innerIterator.next);\r\n                    return innerLoop();\r\n                  } reject(TypeError('.flatMap callback should return an iterable object'));\r\n                } catch (error2) { reject(error2); }\r\n              }, reject);\r\n            }\r\n          } catch (error1) { reject(error1); }\r\n        }, reject);\r\n      } catch (error) { reject(error); }\r\n    };\r\n\r\n    var innerLoop = function () {\r\n      if (innerIterator = state.innerIterator) {\r\n        try {\r\n          Promise.resolve(anObject(state.innerNext.call(innerIterator))).then(function (result) {\r\n            try {\r\n              if (anObject(result).done) {\r\n                state.innerIterator = state.innerNext = null;\r\n                outerLoop();\r\n              } else resolve({ done: false, value: result.value });\r\n            } catch (error1) { reject(error1); }\r\n          }, reject);\r\n        } catch (error) { reject(error); }\r\n      } else outerLoop();\r\n    };\r\n\r\n    innerLoop();\r\n  });\r\n});\r\n\r\n$({ target: 'AsyncIterator', proto: true, real: true }, {\r\n  flatMap: function flatMap(mapper) {\r\n    return new AsyncIteratorProxy({\r\n      iterator: anObject(this),\r\n      mapper: aFunction(mapper),\r\n      innerIterator: null,\r\n      innerNext: null\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}