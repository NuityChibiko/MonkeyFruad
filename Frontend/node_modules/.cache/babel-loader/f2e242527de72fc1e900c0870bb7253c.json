{"ast":null,"code":"'use strict';\n\nvar anObject = require('../internals/an-object'); // `Map.prototype.upsert` method\n// https://github.com/thumbsupep/proposal-upsert\n\n\nmodule.exports = function upsert(key, updateFn\n/* , insertFn */\n) {\n  var map = anObject(this);\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\n  var value;\n\n  if (typeof updateFn != 'function' && typeof insertFn != 'function') {\n    throw TypeError('At least one callback required');\n  }\n\n  if (map.has(key)) {\n    value = map.get(key);\n\n    if (typeof updateFn == 'function') {\n      value = updateFn(value);\n      map.set(key, value);\n    }\n  } else if (typeof insertFn == 'function') {\n    value = insertFn();\n    map.set(key, value);\n  }\n\n  return value;\n};","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/cloudinary/node_modules/core-js/internals/map-upsert.js"],"names":["anObject","require","module","exports","upsert","key","updateFn","map","insertFn","arguments","length","undefined","value","TypeError","has","get","set"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB,C,CAEA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC;AAAS;AAA9B,EAAgD;AAC/D,MAAIC,GAAG,GAAGP,QAAQ,CAAC,IAAD,CAAlB;AACA,MAAIQ,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAArD;AACA,MAAIC,KAAJ;;AACA,MAAI,OAAON,QAAP,IAAmB,UAAnB,IAAiC,OAAOE,QAAP,IAAmB,UAAxD,EAAoE;AAClE,UAAMK,SAAS,CAAC,gCAAD,CAAf;AACD;;AACD,MAAIN,GAAG,CAACO,GAAJ,CAAQT,GAAR,CAAJ,EAAkB;AAChBO,IAAAA,KAAK,GAAGL,GAAG,CAACQ,GAAJ,CAAQV,GAAR,CAAR;;AACA,QAAI,OAAOC,QAAP,IAAmB,UAAvB,EAAmC;AACjCM,MAAAA,KAAK,GAAGN,QAAQ,CAACM,KAAD,CAAhB;AACAL,MAAAA,GAAG,CAACS,GAAJ,CAAQX,GAAR,EAAaO,KAAb;AACD;AACF,GAND,MAMO,IAAI,OAAOJ,QAAP,IAAmB,UAAvB,EAAmC;AACxCI,IAAAA,KAAK,GAAGJ,QAAQ,EAAhB;AACAD,IAAAA,GAAG,CAACS,GAAJ,CAAQX,GAAR,EAAaO,KAAb;AACD;;AAAC,SAAOA,KAAP;AACH,CAjBD","sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `Map.prototype.upsert` method\n// https://github.com/thumbsupep/proposal-upsert\nmodule.exports = function upsert(key, updateFn /* , insertFn */) {\n  var map = anObject(this);\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\n  var value;\n  if (typeof updateFn != 'function' && typeof insertFn != 'function') {\n    throw TypeError('At least one callback required');\n  }\n  if (map.has(key)) {\n    value = map.get(key);\n    if (typeof updateFn == 'function') {\n      value = updateFn(value);\n      map.set(key, value);\n    }\n  } else if (typeof insertFn == 'function') {\n    value = insertFn();\n    map.set(key, value);\n  } return value;\n};\n"]},"metadata":{},"sourceType":"script"}