{"ast":null,"code":"var DESCRIPTORS = require('../internals/descriptors');\n\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar getInternalState = require('../internals/internal-state').get;\n\nvar RegExpPrototype = RegExp.prototype; // `RegExp.prototype.sticky` getter\n\nif (DESCRIPTORS && UNSUPPORTED_Y) {\n  defineProperty(RegExp.prototype, 'sticky', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined; // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n\n      if (this instanceof RegExp) {\n        return !!getInternalState(this).sticky;\n      }\n\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/cloudinary/node_modules/core-js/modules/es.regexp.sticky.js"],"names":["DESCRIPTORS","require","UNSUPPORTED_Y","defineProperty","f","getInternalState","get","RegExpPrototype","RegExp","prototype","configurable","undefined","sticky","TypeError"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,0BAAD,CAAzB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,oCAAD,CAAP,CAA8CC,aAAlE;;AACA,IAAIC,cAAc,GAAGF,OAAO,CAAC,qCAAD,CAAP,CAA+CG,CAApE;;AACA,IAAIC,gBAAgB,GAAGJ,OAAO,CAAC,6BAAD,CAAP,CAAuCK,GAA9D;;AACA,IAAIC,eAAe,GAAGC,MAAM,CAACC,SAA7B,C,CAEA;;AACA,IAAIT,WAAW,IAAIE,aAAnB,EAAkC;AAChCC,EAAAA,cAAc,CAACK,MAAM,CAACC,SAAR,EAAmB,QAAnB,EAA6B;AACzCC,IAAAA,YAAY,EAAE,IAD2B;AAEzCJ,IAAAA,GAAG,EAAE,YAAY;AACf,UAAI,SAASC,eAAb,EAA8B,OAAOI,SAAP,CADf,CAEf;AACA;;AACA,UAAI,gBAAgBH,MAApB,EAA4B;AAC1B,eAAO,CAAC,CAACH,gBAAgB,CAAC,IAAD,CAAhB,CAAuBO,MAAhC;AACD;;AACD,YAAMC,SAAS,CAAC,wCAAD,CAAf;AACD;AAVwC,GAA7B,CAAd;AAYD","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\nvar defineProperty = require('../internals/object-define-property').f;\nvar getInternalState = require('../internals/internal-state').get;\nvar RegExpPrototype = RegExp.prototype;\n\n// `RegExp.prototype.sticky` getter\nif (DESCRIPTORS && UNSUPPORTED_Y) {\n  defineProperty(RegExp.prototype, 'sticky', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined;\n      // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n      if (this instanceof RegExp) {\n        return !!getInternalState(this).sticky;\n      }\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}