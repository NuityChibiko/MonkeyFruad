{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\commentitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./commentitem.css\";\nimport usercontext from \"../context/usercontext\";\n\nconst Commentitem = ({\n  postid\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [commentid, Setcommentid] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n    // console.log( getcomment.data.item);\n    // Setallcomment( getcomment.data.item);\n\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      textcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      // Settextcomment(commentid.textcomment)\n      // Setcomment(commentid)\n      const editcomment = await Axios.post(`http://localhost:7000/post/comment`, {\n        postid\n      });\n      Setcommentid(editcomment.data.item);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  console.log(commentid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mypostcommentrow\",\n    children: commentid ? commentid.map(commentid => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this) //     <div>\n  //       {comment ? comment.map(doc =>{\n  //         return (<div>\n  //            <div className=\"row mypostcommentrow\">\n  // <div className=\"column1 mypostcommentrow1\">\n  //   <div class=\"vl\"></div>\n  //   <div className=\"mypost-comment-img1\">\n  //     <img className=\"img-circle1\" src=\"/img/profile.png\" />\n  //     <div className=\"mypost-comment-name1\">\n  //      {doc ? \"@\" : null}{doc.username}\n  //       <span className=\"mypost-comment-time1\"> {doc.datetime} </span>\n  //     </div>\n  //     <br />\n  //    {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(doc.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\n  //       <div className=\"mypostcomment1\">{doc.textcomment}</div> \n  //     </div>  \n  //    } \n  //   </div> \n  //  </div> \n  //  {user && doc.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\n  //   <div className=\"menu-containermypostcommentsetting\">\n  //     <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\n  //       <img \n  //         className=\"mypostcommentimg-setting\"\n  //         src=\"/img/setting.png\"\n  //         alt=\"avatar\"\n  //       ></img> \n  //  </div>\n  //     <div\n  //       className={`mypostcommentmenusetting ${\n  //         isActive ? \"active\" : \"inactive\"\n  //       }`}\n  //     >\n  //       <ul className=\"ul-mypostcommentmenusetting\">\n  //      <li className=\"li-mypostcommentmenusetting\">\n  //           <a className=\"a-mypostcommentmenusetting\"\n  //           onClick={() => edit(doc.commentid)}\n  //           >\n  //               แก้ไขคอมเมนต์\n  //           </a>\n  //         </li> \n  //         <li className=\"li-mypostcommentmenusetting\">\n  //           <a\n  //             className=\"a-mypostcommentmenusetting\"\n  //             onClick={() => deleted(doc.commentid)}\n  //           >\n  //             {\" \"}\n  //             ลบคอมเมนต์{\" \"}\n  //           </a>\n  //         </li> \n  //       </ul>\n  //     </div>\n  //   </div>\n  // </div> : null }\n  // </div> \n  //         </div>)\n  //       }): null}\n  // </div>\n  ;\n};\n\n_s(Commentitem, \"5i6ihv1OZCmpa5eFOAruQTb8/pM=\");\n\n_c = Commentitem;\nexport default Commentitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentitem\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/commentitem.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Commentitem","postid","isActive","setIsActive","onClick","user","setUser","commentid","Setcommentid","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","deleted","postdelete","post","window","location","reload","edit","handleedit","editcomment","gg","data","err","console","log","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./commentitem.css\";\r\nimport usercontext from \"../context/usercontext\";\r\n\r\n\r\n\r\nconst Commentitem = ({   postid}) => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  let { user, setUser } = useContext(usercontext);\r\n  const [commentid , Setcommentid] = useState()\r\n  const [item , Setitem] = useState([])\r\n  const [checkedittext , Setcheckedittext] = useState(false)\r\n  // const [edittextcomment , Setedittextcomment] = useState()\r\n  const [textcomment , Settextcomment] = useState()\r\n\r\n    \r\n\r\n  const deleted = async (commentid) => {\r\n      const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // console.log( getcomment.data.item);\r\n      // Setallcomment( getcomment.data.item);\r\n      window.location.reload(false);\r\n  };\r\n  const edit = async () =>{\r\n    Setcheckedittext(true)\r\n  }\r\n  const handleedit = async (commentid) =>{\r\n  \r\n  const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n  \r\n  }\r\n\r\n  const gg = async () => {\r\n    try {\r\n      // Settextcomment(commentid.textcomment)\r\n      // Setcomment(commentid)\r\n\r\n      const editcomment = await Axios.post(`http://localhost:7000/post/comment` ,{postid})\r\n      Setcommentid(editcomment.data.item)\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, []);\r\n console.log(commentid)\r\n  \r\n  return (\r\n    <div className=\"row mypostcommentrow\">\r\n      {commentid ? commentid.map(commentid =>{\r\n          return (<div>\r\n\r\n          </div>)\r\n      }): null}\r\n      \r\n    </div> \r\n\r\n\r\n//     <div>\r\n//       {comment ? comment.map(doc =>{\r\n//         return (<div>\r\n//            <div className=\"row mypostcommentrow\">\r\n\r\n// <div className=\"column1 mypostcommentrow1\">\r\n//   <div class=\"vl\"></div>\r\n//   <div className=\"mypost-comment-img1\">\r\n//     <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n//     <div className=\"mypost-comment-name1\">\r\n//      {doc ? \"@\" : null}{doc.username}\r\n//       <span className=\"mypost-comment-time1\"> {doc.datetime} </span>\r\n//     </div>\r\n//     <br />\r\n//    {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(doc.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n//       <div className=\"mypostcomment1\">{doc.textcomment}</div> \r\n//     </div>  \r\n//    } \r\n//   </div> \r\n//  </div> \r\n//  {user && doc.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n//   <div className=\"menu-containermypostcommentsetting\">\r\n//     <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n//       <img \r\n//         className=\"mypostcommentimg-setting\"\r\n//         src=\"/img/setting.png\"\r\n//         alt=\"avatar\"\r\n//       ></img> \r\n//  </div>\r\n\r\n//     <div\r\n//       className={`mypostcommentmenusetting ${\r\n//         isActive ? \"active\" : \"inactive\"\r\n//       }`}\r\n//     >\r\n//       <ul className=\"ul-mypostcommentmenusetting\">\r\n//      <li className=\"li-mypostcommentmenusetting\">\r\n//           <a className=\"a-mypostcommentmenusetting\"\r\n//           onClick={() => edit(doc.commentid)}\r\n//           >\r\n//               แก้ไขคอมเมนต์\r\n//           </a>\r\n//         </li> \r\n//         <li className=\"li-mypostcommentmenusetting\">\r\n//           <a\r\n//             className=\"a-mypostcommentmenusetting\"\r\n//             onClick={() => deleted(doc.commentid)}\r\n//           >\r\n//             {\" \"}\r\n//             ลบคอมเมนต์{\" \"}\r\n//           </a>\r\n//         </li> \r\n//       </ul>\r\n//     </div>\r\n//   </div>\r\n// </div> : null }\r\n// </div> \r\n//         </div>)\r\n//       }): null}\r\n   \r\n  // </div>\r\n  );\r\n};\r\n\r\nexport default Commentitem;\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}