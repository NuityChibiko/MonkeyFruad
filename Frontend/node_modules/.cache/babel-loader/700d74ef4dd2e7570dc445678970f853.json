{"ast":null,"code":"/*!\r\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor, prot;\n  if (isObjectObject(o) === false) return false; // If has modified constructor\n\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false; // If has modified prototype\n\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false; // If constructor does not have an Object-specific method\n\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n};","map":{"version":3,"sources":["D:/Programming/Web Programming/Project SE/MonkeyFruad/Frontend/node_modules/is-plain-object/index.js"],"names":["isObject","require","isObjectObject","o","Object","prototype","toString","call","module","exports","isPlainObject","ctor","prot","constructor","hasOwnProperty"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,SAAOH,QAAQ,CAACG,CAAD,CAAR,KAAgB,IAAhB,IACFC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBAD3C;AAED;;AAEDK,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBP,CAAvB,EAA0B;AACzC,MAAIQ,IAAJ,EAASC,IAAT;AAEA,MAAIV,cAAc,CAACC,CAAD,CAAd,KAAsB,KAA1B,EAAiC,OAAO,KAAP,CAHQ,CAKzC;;AACAQ,EAAAA,IAAI,GAAGR,CAAC,CAACU,WAAT;AACA,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC,OAAO,KAAP,CAPS,CASzC;;AACAC,EAAAA,IAAI,GAAGD,IAAI,CAACN,SAAZ;AACA,MAAIH,cAAc,CAACU,IAAD,CAAd,KAAyB,KAA7B,EAAoC,OAAO,KAAP,CAXK,CAazC;;AACA,MAAIA,IAAI,CAACE,cAAL,CAAoB,eAApB,MAAyC,KAA7C,EAAoD;AAClD,WAAO,KAAP;AACD,GAhBwC,CAkBzC;;;AACA,SAAO,IAAP;AACD,CApBD","sourcesContent":["/*!\r\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar isObject = require('isobject');\r\n\r\nfunction isObjectObject(o) {\r\n  return isObject(o) === true\r\n    && Object.prototype.toString.call(o) === '[object Object]';\r\n}\r\n\r\nmodule.exports = function isPlainObject(o) {\r\n  var ctor,prot;\r\n\r\n  if (isObjectObject(o) === false) return false;\r\n\r\n  // If has modified constructor\r\n  ctor = o.constructor;\r\n  if (typeof ctor !== 'function') return false;\r\n\r\n  // If has modified prototype\r\n  prot = ctor.prototype;\r\n  if (isObjectObject(prot) === false) return false;\r\n\r\n  // If constructor does not have an Object-specific method\r\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\r\n    return false;\r\n  }\r\n\r\n  // Most likely a plain Object\r\n  return true;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}