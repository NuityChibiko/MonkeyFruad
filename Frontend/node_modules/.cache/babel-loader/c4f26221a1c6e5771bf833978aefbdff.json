{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  isSubsetOf: function isSubsetOf(iterable) {\n    var iterator = getIterator(this);\n    var otherSet = anObject(iterable);\n    var hasCheck = otherSet.has;\n\n    if (typeof hasCheck != 'function') {\n      otherSet = new (getBuiltIn('Set'))(iterable);\n      hasCheck = aFunction(otherSet.has);\n    }\n\n    return !iterate(iterator, function (value) {\n      if (hasCheck.call(otherSet, value) === false) return iterate.stop();\n    }, undefined, false, true).stopped;\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.set.is-subset-of.js"],"names":["$","require","IS_PURE","getBuiltIn","anObject","aFunction","getIterator","iterate","target","proto","real","forced","isSubsetOf","iterable","iterator","otherSet","hasCheck","has","value","call","stop","undefined","stopped"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAET;AAAlD,CAAD,EAA8D;AAC7DU,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AACxC,QAAIC,QAAQ,GAAGR,WAAW,CAAC,IAAD,CAA1B;AACA,QAAIS,QAAQ,GAAGX,QAAQ,CAACS,QAAD,CAAvB;AACA,QAAIG,QAAQ,GAAGD,QAAQ,CAACE,GAAxB;;AACA,QAAI,OAAOD,QAAP,IAAmB,UAAvB,EAAmC;AACjCD,MAAAA,QAAQ,GAAG,KAAKZ,UAAU,CAAC,KAAD,CAAf,EAAwBU,QAAxB,CAAX;AACAG,MAAAA,QAAQ,GAAGX,SAAS,CAACU,QAAQ,CAACE,GAAV,CAApB;AACD;;AACD,WAAO,CAACV,OAAO,CAACO,QAAD,EAAW,UAAUI,KAAV,EAAiB;AACzC,UAAIF,QAAQ,CAACG,IAAT,CAAcJ,QAAd,EAAwBG,KAAxB,MAAmC,KAAvC,EAA8C,OAAOX,OAAO,CAACa,IAAR,EAAP;AAC/C,KAFc,EAEZC,SAFY,EAED,KAFC,EAEM,IAFN,CAAP,CAEmBC,OAF3B;AAGD;AAZ4D,CAA9D,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar IS_PURE = require('../internals/is-pure');\r\nvar getBuiltIn = require('../internals/get-built-in');\r\nvar anObject = require('../internals/an-object');\r\nvar aFunction = require('../internals/a-function');\r\nvar getIterator = require('../internals/get-iterator');\r\nvar iterate = require('../internals/iterate');\r\n\r\n// `Set.prototype.isSubsetOf` method\r\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\r\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\r\n  isSubsetOf: function isSubsetOf(iterable) {\r\n    var iterator = getIterator(this);\r\n    var otherSet = anObject(iterable);\r\n    var hasCheck = otherSet.has;\r\n    if (typeof hasCheck != 'function') {\r\n      otherSet = new (getBuiltIn('Set'))(iterable);\r\n      hasCheck = aFunction(otherSet.has);\r\n    }\r\n    return !iterate(iterator, function (value) {\r\n      if (hasCheck.call(otherSet, value) === false) return iterate.stop();\r\n    }, undefined, false, true).stopped;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}