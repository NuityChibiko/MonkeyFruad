{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\commentitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./commentitem.css\";\nimport usercontext from \"../context/usercontext\";\n\nconst Commentitem = ({\n  allcomment,\n  ok,\n  uid\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [comment, Setcomment] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n    // console.log( getcomment.data.item);\n    // Setallcomment( getcomment.data.item);\n\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      textcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      Settextcomment(data.textcomment); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n      // Setallcomment(getcomment.data.item)\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mypostcommentrow\",\n    children: allcomment ? allcomment.map(res => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column1 mypostcommentrow1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"vl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-img1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle1\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypost-comment-name1\",\n              children: [data ? \"@\" : null, data.username, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mypost-comment-time1\",\n                children: [\" \", data.datetime, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }, this), checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: res.textcomment,\n                onChange: e => {\n                  Setcomment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 32\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleedit(data.commentid),\n                children: \"\\u0E15\\u0E01\\u0E25\\u0E07\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 118\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypost-comment-comments1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mypostcomment1\",\n                children: res.textcomment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 191\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this), data.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column2 mypostcommentrow2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-containermypostcommentsetting\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: onClick,\n              className: \"mypostcommentbuttonsetting\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"mypostcommentimg-setting\",\n                src: \"/img/setting.png\",\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"ul-mypostcommentmenusetting\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"li-mypostcommentmenusetting\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"a-mypostcommentmenusetting\",\n                    onClick: () => edit(data.commentid),\n                    children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"li-mypostcommentmenusetting\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"a-mypostcommentmenusetting\",\n                    onClick: () => deleted(data.commentid),\n                    children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 35\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Commentitem, \"mMFaFW7tv1avKRby2GviR8HGsnA=\");\n\n_c = Commentitem;\nexport default Commentitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentitem\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/commentitem.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Commentitem","allcomment","ok","uid","isActive","setIsActive","onClick","user","setUser","comment","Setcomment","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","deleted","commentid","postdelete","post","window","location","reload","edit","handleedit","editcomment","gg","data","err","console","log","map","res","username","datetime","e","target","value","userid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./commentitem.css\";\r\nimport usercontext from \"../context/usercontext\";\r\n\r\n\r\n\r\nconst Commentitem = ({ allcomment, ok ,uid}) => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  let { user, setUser } = useContext(usercontext);\r\n  const [comment , Setcomment] = useState()\r\n  const [item , Setitem] = useState([])\r\n  const [checkedittext , Setcheckedittext] = useState(false)\r\n  // const [edittextcomment , Setedittextcomment] = useState()\r\n  const [textcomment , Settextcomment] = useState()\r\n\r\n \r\n\r\n  const deleted = async (commentid) => {\r\n      const postdelete = await Axios.post(\r\n        `http://localhost:7000/post/delete/comment/${commentid}`\r\n      );\r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // console.log( getcomment.data.item);\r\n      // Setallcomment( getcomment.data.item);\r\n      window.location.reload(false);\r\n  };\r\n  const edit = async () =>{\r\n    Setcheckedittext(true)\r\n  }\r\n  const handleedit = async (commentid) =>{\r\n  const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n  \r\n  }\r\n\r\n  const gg = async () => {\r\n    try {\r\n      Settextcomment(data.textcomment)\r\n     \r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // Setallcomment(getcomment.data.item)\r\n   \r\n      \r\n    } catch (err) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"row mypostcommentrow\">\r\n      {allcomment ? allcomment.map(res =>{\r\n        return (<div>\r\n           <div className=\"column1 mypostcommentrow1\">\r\n        <div class=\"vl\"></div>\r\n        <div className=\"mypost-comment-img1\">\r\n          <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n          <div className=\"mypost-comment-name1\">\r\n           {data ? \"@\" : null}{data.username}\r\n            <span className=\"mypost-comment-time1\"> {data.datetime} </span>\r\n          </div>\r\n          <br />\r\n         {checkedittext ? <div><input value={res.textcomment} onChange={(e) =>{Setcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n            <div className=\"mypostcomment1\">{res.textcomment}</div> \r\n          </div>  \r\n         } \r\n        </div> \r\n       </div> \r\n       {data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n        <div className=\"menu-containermypostcommentsetting\">\r\n          <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n            <img \r\n              className=\"mypostcommentimg-setting\"\r\n              src=\"/img/setting.png\"\r\n              alt=\"avatar\"\r\n            ></img> \r\n       </div>\r\n\r\n          <div\r\n            className={`mypostcommentmenusetting ${\r\n              isActive ? \"active\" : \"inactive\"\r\n            }`}\r\n          >\r\n            <ul className=\"ul-mypostcommentmenusetting\">\r\n           <li className=\"li-mypostcommentmenusetting\">\r\n                <a className=\"a-mypostcommentmenusetting\"\r\n                onClick={() => edit(data.commentid)}\r\n                >\r\n                    แก้ไขคอมเมนต์\r\n                </a>\r\n              </li> \r\n              <li className=\"li-mypostcommentmenusetting\">\r\n                <a\r\n                  className=\"a-mypostcommentmenusetting\"\r\n                  onClick={() => deleted(data.commentid)}\r\n                >\r\n                  {\" \"}\r\n                  ลบคอมเมนต์{\" \"}\r\n                </a>\r\n              </li> \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div> : null }\r\n        </div>)\r\n      }) : null}\r\n     \r\n    </div> \r\n  );\r\n};\r\n\r\nexport default Commentitem;\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}