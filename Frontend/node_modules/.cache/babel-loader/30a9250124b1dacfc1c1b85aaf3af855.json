{"ast":null,"code":"var $ = require('../internals/export');\n\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt; // Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\n\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity; // `Math.hypot` method\n// https://tc39.github.io/ecma262/#sec-math.hypot\n\n$({\n  target: 'Math',\n  stat: true,\n  forced: BUGGY\n}, {\n  hypot: function hypot(value1, value2) {\n    // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/es.math.hypot.js"],"names":["$","require","$hypot","Math","hypot","abs","sqrt","BUGGY","Infinity","NaN","target","stat","forced","value1","value2","sum","i","aLen","arguments","length","larg","arg","div"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AAEA,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAlB;AACA,IAAIC,GAAG,GAAGF,IAAI,CAACE,GAAf;AACA,IAAIC,IAAI,GAAGH,IAAI,CAACG,IAAhB,C,CAEA;AACA;;AACA,IAAIC,KAAK,GAAG,CAAC,CAACL,MAAF,IAAYA,MAAM,CAACM,QAAD,EAAWC,GAAX,CAAN,KAA0BD,QAAlD,C,CAEA;AACA;;AACAR,CAAC,CAAC;AAAEU,EAAAA,MAAM,EAAE,MAAV;AAAkBC,EAAAA,IAAI,EAAE,IAAxB;AAA8BC,EAAAA,MAAM,EAAEL;AAAtC,CAAD,EAAgD;AAC/CH,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeS,MAAf,EAAuBC,MAAvB,EAA+B;AAAE;AACtC,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB;AACA,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,GAAJ,EAASC,GAAT;;AACA,WAAON,CAAC,GAAGC,IAAX,EAAiB;AACfI,MAAAA,GAAG,GAAGhB,GAAG,CAACa,SAAS,CAACF,CAAC,EAAF,CAAV,CAAT;;AACA,UAAII,IAAI,GAAGC,GAAX,EAAgB;AACdC,QAAAA,GAAG,GAAGF,IAAI,GAAGC,GAAb;AACAN,QAAAA,GAAG,GAAGA,GAAG,GAAGO,GAAN,GAAYA,GAAZ,GAAkB,CAAxB;AACAF,QAAAA,IAAI,GAAGC,GAAP;AACD,OAJD,MAIO,IAAIA,GAAG,GAAG,CAAV,EAAa;AAClBC,QAAAA,GAAG,GAAGD,GAAG,GAAGD,IAAZ;AACAL,QAAAA,GAAG,IAAIO,GAAG,GAAGA,GAAb;AACD,OAHM,MAGAP,GAAG,IAAIM,GAAP;AACR;;AACD,WAAOD,IAAI,KAAKZ,QAAT,GAAoBA,QAApB,GAA+BY,IAAI,GAAGd,IAAI,CAACS,GAAD,CAAjD;AACD;AAnB8C,CAAhD,CAAD","sourcesContent":["var $ = require('../internals/export');\r\n\r\nvar $hypot = Math.hypot;\r\nvar abs = Math.abs;\r\nvar sqrt = Math.sqrt;\r\n\r\n// Chrome 77 bug\r\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\r\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\r\n\r\n// `Math.hypot` method\r\n// https://tc39.github.io/ecma262/#sec-math.hypot\r\n$({ target: 'Math', stat: true, forced: BUGGY }, {\r\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\r\n    var sum = 0;\r\n    var i = 0;\r\n    var aLen = arguments.length;\r\n    var larg = 0;\r\n    var arg, div;\r\n    while (i < aLen) {\r\n      arg = abs(arguments[i++]);\r\n      if (larg < arg) {\r\n        div = larg / arg;\r\n        sum = sum * div * div + 1;\r\n        larg = arg;\r\n      } else if (arg > 0) {\r\n        div = arg / larg;\r\n        sum += div * div;\r\n      } else sum += arg;\r\n    }\r\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}