{"ast":null,"code":"'use strict';\n\nconst mimicFn = require('mimic-fn');\n\nconst calledFunctions = new WeakMap();\n\nconst onetime = (function_, options = {}) => {\n  if (typeof function_ !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  let returnValue;\n  let callCount = 0;\n  const functionName = function_.displayName || function_.name || '<anonymous>';\n\n  const onetime = function (...arguments_) {\n    calledFunctions.set(onetime, ++callCount);\n\n    if (callCount === 1) {\n      returnValue = function_.apply(this, arguments_);\n      function_ = null;\n    } else if (options.throw === true) {\n      throw new Error(`Function \\`${functionName}\\` can only be called once`);\n    }\n\n    return returnValue;\n  };\n\n  mimicFn(onetime, function_);\n  calledFunctions.set(onetime, callCount);\n  return onetime;\n};\n\nmodule.exports = onetime; // TODO: Remove this for the next major release\n\nmodule.exports.default = onetime;\n\nmodule.exports.callCount = function_ => {\n  if (!calledFunctions.has(function_)) {\n    throw new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n  }\n\n  return calledFunctions.get(function_);\n};","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/onetime/index.js"],"names":["mimicFn","require","calledFunctions","WeakMap","onetime","function_","options","TypeError","returnValue","callCount","functionName","displayName","name","arguments_","set","apply","throw","Error","module","exports","default","has","get"],"mappings":"AAAA;;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAMC,eAAe,GAAG,IAAIC,OAAJ,EAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAC5C,MAAI,OAAOD,SAAP,KAAqB,UAAzB,EAAqC;AACpC,UAAM,IAAIE,SAAJ,CAAc,qBAAd,CAAN;AACA;;AAED,MAAIC,WAAJ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,QAAMC,YAAY,GAAGL,SAAS,CAACM,WAAV,IAAyBN,SAAS,CAACO,IAAnC,IAA2C,aAAhE;;AAEA,QAAMR,OAAO,GAAG,UAAU,GAAGS,UAAb,EAAyB;AACxCX,IAAAA,eAAe,CAACY,GAAhB,CAAoBV,OAApB,EAA6B,EAAEK,SAA/B;;AAEA,QAAIA,SAAS,KAAK,CAAlB,EAAqB;AACpBD,MAAAA,WAAW,GAAGH,SAAS,CAACU,KAAV,CAAgB,IAAhB,EAAsBF,UAAtB,CAAd;AACAR,MAAAA,SAAS,GAAG,IAAZ;AACA,KAHD,MAGO,IAAIC,OAAO,CAACU,KAAR,KAAkB,IAAtB,EAA4B;AAClC,YAAM,IAAIC,KAAJ,CAAW,cAAaP,YAAa,4BAArC,CAAN;AACA;;AAED,WAAOF,WAAP;AACA,GAXD;;AAaAR,EAAAA,OAAO,CAACI,OAAD,EAAUC,SAAV,CAAP;AACAH,EAAAA,eAAe,CAACY,GAAhB,CAAoBV,OAApB,EAA6BK,SAA7B;AAEA,SAAOL,OAAP;AACA,CA1BD;;AA4BAc,MAAM,CAACC,OAAP,GAAiBf,OAAjB,C,CACA;;AACAc,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBhB,OAAzB;;AAEAc,MAAM,CAACC,OAAP,CAAeV,SAAf,GAA2BJ,SAAS,IAAI;AACvC,MAAI,CAACH,eAAe,CAACmB,GAAhB,CAAoBhB,SAApB,CAAL,EAAqC;AACpC,UAAM,IAAIY,KAAJ,CAAW,wBAAuBZ,SAAS,CAACO,IAAK,8CAAjD,CAAN;AACA;;AAED,SAAOV,eAAe,CAACoB,GAAhB,CAAoBjB,SAApB,CAAP;AACA,CAND","sourcesContent":["'use strict';\r\nconst mimicFn = require('mimic-fn');\r\n\r\nconst calledFunctions = new WeakMap();\r\n\r\nconst onetime = (function_, options = {}) => {\r\n\tif (typeof function_ !== 'function') {\r\n\t\tthrow new TypeError('Expected a function');\r\n\t}\r\n\r\n\tlet returnValue;\r\n\tlet callCount = 0;\r\n\tconst functionName = function_.displayName || function_.name || '<anonymous>';\r\n\r\n\tconst onetime = function (...arguments_) {\r\n\t\tcalledFunctions.set(onetime, ++callCount);\r\n\r\n\t\tif (callCount === 1) {\r\n\t\t\treturnValue = function_.apply(this, arguments_);\r\n\t\t\tfunction_ = null;\r\n\t\t} else if (options.throw === true) {\r\n\t\t\tthrow new Error(`Function \\`${functionName}\\` can only be called once`);\r\n\t\t}\r\n\r\n\t\treturn returnValue;\r\n\t};\r\n\r\n\tmimicFn(onetime, function_);\r\n\tcalledFunctions.set(onetime, callCount);\r\n\r\n\treturn onetime;\r\n};\r\n\r\nmodule.exports = onetime;\r\n// TODO: Remove this for the next major release\r\nmodule.exports.default = onetime;\r\n\r\nmodule.exports.callCount = function_ => {\r\n\tif (!calledFunctions.has(function_)) {\r\n\t\tthrow new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\r\n\t}\r\n\r\n\treturn calledFunctions.get(function_);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}