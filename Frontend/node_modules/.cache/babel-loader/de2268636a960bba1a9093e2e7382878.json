{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unicodeJSONStringify = exports.objectKeyToLowercase = exports.qsStringify = exports.encodeURI = exports.fixedEncodeURIComponent = exports.objectEntries = exports.normalize = void 0;\n\nconst querystring = require(\"querystring\");\n\nfunction normalize(optionsOrCallback, cb) {\n  const options = typeof optionsOrCallback === 'object' ? optionsOrCallback : {};\n  const callback = typeof optionsOrCallback === 'function' ? optionsOrCallback : cb;\n  return {\n    options,\n    callback\n  };\n}\n\nexports.normalize = normalize;\n/**\r\n * Flatten an object into an Array of arrays, [[key, value], ..].\r\n * Implements Object.entries() for Node.js <8\r\n * @internal\r\n */\n\nfunction objectEntries(obj) {\n  return Object.keys(obj).map(key => [key, obj[key]]);\n}\n\nexports.objectEntries = objectEntries;\n/**\r\n * Encode `str` with encodeURIComponent, plus these\r\n * reserved characters: `! * ' ( )`.\r\n *\r\n * @see [MDN: fixedEncodeURIComponent]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent}\r\n *\r\n * @param {string} str The URI component to encode.\r\n * @return {string} The encoded string.\r\n */\n\nfunction fixedEncodeURIComponent(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, c => '%' + c.charCodeAt(0).toString(16).toUpperCase());\n}\n\nexports.fixedEncodeURIComponent = fixedEncodeURIComponent;\n/**\r\n * URI encode `uri` for generating signed URLs, using fixedEncodeURIComponent.\r\n *\r\n * Encode every byte except `A-Z a-Z 0-9 ~ - . _`.\r\n *\r\n * @param {string} uri The URI to encode.\r\n * @param [boolean=false] encodeSlash If `true`, the \"/\" character is not encoded.\r\n * @return {string} The encoded string.\r\n */\n\nfunction encodeURI(uri, encodeSlash) {\n  // Split the string by `/`, and conditionally rejoin them with either\n  // %2F if encodeSlash is `true`, or '/' if `false`.\n  return uri.split('/').map(fixedEncodeURIComponent).join(encodeSlash ? '%2F' : '/');\n}\n\nexports.encodeURI = encodeURI;\n/**\r\n * Serialize an object to a URL query string using util.encodeURI(uri, true).\r\n * @param {string} url The object to serialize.\r\n * @return {string} Serialized string.\r\n */\n\nfunction qsStringify(qs) {\n  return querystring.stringify(qs, '&', '=', {\n    encodeURIComponent: component => encodeURI(component, true)\n  });\n}\n\nexports.qsStringify = qsStringify;\n\nfunction objectKeyToLowercase(object) {\n  const newObj = {};\n\n  for (let key of Object.keys(object)) {\n    const value = object[key];\n    key = key.toLowerCase();\n    newObj[key] = value;\n  }\n\n  return newObj;\n}\n\nexports.objectKeyToLowercase = objectKeyToLowercase;\n/**\r\n * JSON encode str, with unicode \\u+ representation.\r\n * @param {object} obj The object to encode.\r\n * @return {string} Serialized string.\r\n */\n\nfunction unicodeJSONStringify(obj) {\n  return JSON.stringify(obj).replace(/[\\u0080-\\uFFFF]/g, char => '\\\\u' + ('0000' + char.charCodeAt(0).toString(16)).slice(-4));\n}\n\nexports.unicodeJSONStringify = unicodeJSONStringify;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/@google-cloud/storage/build/src/util.js"],"names":["Object","defineProperty","exports","value","unicodeJSONStringify","objectKeyToLowercase","qsStringify","encodeURI","fixedEncodeURIComponent","objectEntries","normalize","querystring","require","optionsOrCallback","cb","options","callback","obj","keys","map","key","str","encodeURIComponent","replace","c","charCodeAt","toString","toUpperCase","uri","encodeSlash","split","join","qs","stringify","component","object","newObj","toLowerCase","JSON","char","slice"],"mappings":"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","sourcesContent":["\"use strict\";\r\n// Copyright 2019 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.unicodeJSONStringify = exports.objectKeyToLowercase = exports.qsStringify = exports.encodeURI = exports.fixedEncodeURIComponent = exports.objectEntries = exports.normalize = void 0;\r\nconst querystring = require(\"querystring\");\r\nfunction normalize(optionsOrCallback, cb) {\r\n    const options = (typeof optionsOrCallback === 'object'\r\n        ? optionsOrCallback\r\n        : {});\r\n    const callback = (typeof optionsOrCallback === 'function'\r\n        ? optionsOrCallback\r\n        : cb);\r\n    return { options, callback };\r\n}\r\nexports.normalize = normalize;\r\n/**\r\n * Flatten an object into an Array of arrays, [[key, value], ..].\r\n * Implements Object.entries() for Node.js <8\r\n * @internal\r\n */\r\nfunction objectEntries(obj) {\r\n    return Object.keys(obj).map(key => [key, obj[key]]);\r\n}\r\nexports.objectEntries = objectEntries;\r\n/**\r\n * Encode `str` with encodeURIComponent, plus these\r\n * reserved characters: `! * ' ( )`.\r\n *\r\n * @see [MDN: fixedEncodeURIComponent]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent}\r\n *\r\n * @param {string} str The URI component to encode.\r\n * @return {string} The encoded string.\r\n */\r\nfunction fixedEncodeURIComponent(str) {\r\n    return encodeURIComponent(str).replace(/[!'()*]/g, c => '%' + c.charCodeAt(0).toString(16).toUpperCase());\r\n}\r\nexports.fixedEncodeURIComponent = fixedEncodeURIComponent;\r\n/**\r\n * URI encode `uri` for generating signed URLs, using fixedEncodeURIComponent.\r\n *\r\n * Encode every byte except `A-Z a-Z 0-9 ~ - . _`.\r\n *\r\n * @param {string} uri The URI to encode.\r\n * @param [boolean=false] encodeSlash If `true`, the \"/\" character is not encoded.\r\n * @return {string} The encoded string.\r\n */\r\nfunction encodeURI(uri, encodeSlash) {\r\n    // Split the string by `/`, and conditionally rejoin them with either\r\n    // %2F if encodeSlash is `true`, or '/' if `false`.\r\n    return uri\r\n        .split('/')\r\n        .map(fixedEncodeURIComponent)\r\n        .join(encodeSlash ? '%2F' : '/');\r\n}\r\nexports.encodeURI = encodeURI;\r\n/**\r\n * Serialize an object to a URL query string using util.encodeURI(uri, true).\r\n * @param {string} url The object to serialize.\r\n * @return {string} Serialized string.\r\n */\r\nfunction qsStringify(qs) {\r\n    return querystring.stringify(qs, '&', '=', {\r\n        encodeURIComponent: (component) => encodeURI(component, true),\r\n    });\r\n}\r\nexports.qsStringify = qsStringify;\r\nfunction objectKeyToLowercase(object) {\r\n    const newObj = {};\r\n    for (let key of Object.keys(object)) {\r\n        const value = object[key];\r\n        key = key.toLowerCase();\r\n        newObj[key] = value;\r\n    }\r\n    return newObj;\r\n}\r\nexports.objectKeyToLowercase = objectKeyToLowercase;\r\n/**\r\n * JSON encode str, with unicode \\u+ representation.\r\n * @param {object} obj The object to encode.\r\n * @return {string} Serialized string.\r\n */\r\nfunction unicodeJSONStringify(obj) {\r\n    return JSON.stringify(obj).replace(/[\\u0080-\\uFFFF]/g, (char) => '\\\\u' + ('0000' + char.charCodeAt(0).toString(16)).slice(-4));\r\n}\r\nexports.unicodeJSONStringify = unicodeJSONStringify;\r\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}