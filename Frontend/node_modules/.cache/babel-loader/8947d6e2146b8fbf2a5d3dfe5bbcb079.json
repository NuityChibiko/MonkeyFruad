{"ast":null,"code":"var constants = require('constants');\n\nvar origCwd = process.cwd;\nvar cwd = null;\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform;\n\nprocess.cwd = function () {\n  if (!cwd) cwd = origCwd.call(process);\n  return cwd;\n};\n\ntry {\n  process.cwd();\n} catch (er) {}\n\nvar chdir = process.chdir;\n\nprocess.chdir = function (d) {\n  cwd = null;\n  chdir.call(process, d);\n};\n\nmodule.exports = patch;\n\nfunction patch(fs) {\n  // (re-)implement some things that are known busted or missing.\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') && process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs);\n  } // lutimes implementation, or no-op\n\n\n  if (!fs.lutimes) {\n    patchLutimes(fs);\n  } // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n\n  fs.chown = chownFix(fs.chown);\n  fs.fchown = chownFix(fs.fchown);\n  fs.lchown = chownFix(fs.lchown);\n  fs.chmod = chmodFix(fs.chmod);\n  fs.fchmod = chmodFix(fs.fchmod);\n  fs.lchmod = chmodFix(fs.lchmod);\n  fs.chownSync = chownFixSync(fs.chownSync);\n  fs.fchownSync = chownFixSync(fs.fchownSync);\n  fs.lchownSync = chownFixSync(fs.lchownSync);\n  fs.chmodSync = chmodFixSync(fs.chmodSync);\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync);\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync);\n  fs.stat = statFix(fs.stat);\n  fs.fstat = statFix(fs.fstat);\n  fs.lstat = statFix(fs.lstat);\n  fs.statSync = statFixSync(fs.statSync);\n  fs.fstatSync = statFixSync(fs.fstatSync);\n  fs.lstatSync = statFixSync(fs.lstatSync); // if lchmod/lchown do not exist, then make them no-ops\n\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb);\n    };\n\n    fs.lchmodSync = function () {};\n  }\n\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb);\n    };\n\n    fs.lchownSync = function () {};\n  } // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n\n\n  if (platform === \"win32\") {\n    fs.rename = function (fs$rename) {\n      return function (from, to, cb) {\n        var start = Date.now();\n        var backoff = 0;\n        fs$rename(from, to, function CB(er) {\n          if (er && (er.code === \"EACCES\" || er.code === \"EPERM\") && Date.now() - start < 60000) {\n            setTimeout(function () {\n              fs.stat(to, function (stater, st) {\n                if (stater && stater.code === \"ENOENT\") fs$rename(from, to, CB);else cb(er);\n              });\n            }, backoff);\n            if (backoff < 100) backoff += 10;\n            return;\n          }\n\n          if (cb) cb(er);\n        });\n      };\n    }(fs.rename);\n  } // if read() returns EAGAIN, then just try it again.\n\n\n  fs.read = function (fs$read) {\n    function read(fd, buffer, offset, length, position, callback_) {\n      var callback;\n\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0;\n\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter++;\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback);\n          }\n\n          callback_.apply(this, arguments);\n        };\n      }\n\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback);\n    } // This ensures `util.promisify` works as it does for native `fs.read`.\n\n\n    read.__proto__ = fs$read;\n    return read;\n  }(fs.read);\n\n  fs.readSync = function (fs$readSync) {\n    return function (fd, buffer, offset, length, position) {\n      var eagCounter = 0;\n\n      while (true) {\n        try {\n          return fs$readSync.call(fs, fd, buffer, offset, length, position);\n        } catch (er) {\n          if (er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter++;\n            continue;\n          }\n\n          throw er;\n        }\n      }\n    };\n  }(fs.readSync);\n\n  function patchLchmod(fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open(path, constants.O_WRONLY | constants.O_SYMLINK, mode, function (err, fd) {\n        if (err) {\n          if (callback) callback(err);\n          return;\n        } // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n\n\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function (err2) {\n            if (callback) callback(err || err2);\n          });\n        });\n      });\n    };\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode); // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n\n      var threw = true;\n      var ret;\n\n      try {\n        ret = fs.fchmodSync(fd, mode);\n        threw = false;\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd);\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd);\n        }\n      }\n\n      return ret;\n    };\n  }\n\n  function patchLutimes(fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er);\n            return;\n          }\n\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2);\n            });\n          });\n        });\n      };\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK);\n        var ret;\n        var threw = true;\n\n        try {\n          ret = fs.futimesSync(fd, at, mt);\n          threw = false;\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd);\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd);\n          }\n        }\n\n        return ret;\n      };\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) {\n        if (cb) process.nextTick(cb);\n      };\n\n      fs.lutimesSync = function () {};\n    }\n  }\n\n  function chmodFix(orig) {\n    if (!orig) return orig;\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null;\n        if (cb) cb.apply(this, arguments);\n      });\n    };\n  }\n\n  function chmodFixSync(orig) {\n    if (!orig) return orig;\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode);\n      } catch (er) {\n        if (!chownErOk(er)) throw er;\n      }\n    };\n  }\n\n  function chownFix(orig) {\n    if (!orig) return orig;\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null;\n        if (cb) cb.apply(this, arguments);\n      });\n    };\n  }\n\n  function chownFixSync(orig) {\n    if (!orig) return orig;\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid);\n      } catch (er) {\n        if (!chownErOk(er)) throw er;\n      }\n    };\n  }\n\n  function statFix(orig) {\n    if (!orig) return orig; // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options;\n        options = null;\n      }\n\n      function callback(er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000;\n          if (stats.gid < 0) stats.gid += 0x100000000;\n        }\n\n        if (cb) cb.apply(this, arguments);\n      }\n\n      return options ? orig.call(fs, target, options, callback) : orig.call(fs, target, callback);\n    };\n  }\n\n  function statFixSync(orig) {\n    if (!orig) return orig; // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options) : orig.call(fs, target);\n      if (stats.uid < 0) stats.uid += 0x100000000;\n      if (stats.gid < 0) stats.gid += 0x100000000;\n      return stats;\n    };\n  } // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n\n\n  function chownErOk(er) {\n    if (!er) return true;\n    if (er.code === \"ENOSYS\") return true;\n    var nonroot = !process.getuid || process.getuid() !== 0;\n\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\") return true;\n    }\n\n    return false;\n  }\n}","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/graceful-fs/polyfills.js"],"names":["constants","require","origCwd","process","cwd","platform","env","GRACEFUL_FS_PLATFORM","call","er","chdir","d","module","exports","patch","fs","hasOwnProperty","version","match","patchLchmod","lutimes","patchLutimes","chown","chownFix","fchown","lchown","chmod","chmodFix","fchmod","lchmod","chownSync","chownFixSync","fchownSync","lchownSync","chmodSync","chmodFixSync","fchmodSync","lchmodSync","stat","statFix","fstat","lstat","statSync","statFixSync","fstatSync","lstatSync","path","mode","cb","nextTick","uid","gid","rename","fs$rename","from","to","start","Date","now","backoff","CB","code","setTimeout","stater","st","read","fs$read","fd","buffer","offset","length","position","callback_","callback","eagCounter","_","__","apply","arguments","__proto__","readSync","fs$readSync","open","O_WRONLY","O_SYMLINK","err","close","err2","openSync","threw","ret","closeSync","at","mt","futimes","er2","lutimesSync","futimesSync","_a","_b","_c","orig","target","chownErOk","options","stats","nonroot","getuid"],"mappings":"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","sourcesContent":["var constants = require('constants')\r\n\r\nvar origCwd = process.cwd\r\nvar cwd = null\r\n\r\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\r\n\r\nprocess.cwd = function() {\r\n  if (!cwd)\r\n    cwd = origCwd.call(process)\r\n  return cwd\r\n}\r\ntry {\r\n  process.cwd()\r\n} catch (er) {}\r\n\r\nvar chdir = process.chdir\r\nprocess.chdir = function(d) {\r\n  cwd = null\r\n  chdir.call(process, d)\r\n}\r\n\r\nmodule.exports = patch\r\n\r\nfunction patch (fs) {\r\n  // (re-)implement some things that are known busted or missing.\r\n\r\n  // lchmod, broken prior to 0.6.2\r\n  // back-port the fix here.\r\n  if (constants.hasOwnProperty('O_SYMLINK') &&\r\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\r\n    patchLchmod(fs)\r\n  }\r\n\r\n  // lutimes implementation, or no-op\r\n  if (!fs.lutimes) {\r\n    patchLutimes(fs)\r\n  }\r\n\r\n  // https://github.com/isaacs/node-graceful-fs/issues/4\r\n  // Chown should not fail on einval or eperm if non-root.\r\n  // It should not fail on enosys ever, as this just indicates\r\n  // that a fs doesn't support the intended operation.\r\n\r\n  fs.chown = chownFix(fs.chown)\r\n  fs.fchown = chownFix(fs.fchown)\r\n  fs.lchown = chownFix(fs.lchown)\r\n\r\n  fs.chmod = chmodFix(fs.chmod)\r\n  fs.fchmod = chmodFix(fs.fchmod)\r\n  fs.lchmod = chmodFix(fs.lchmod)\r\n\r\n  fs.chownSync = chownFixSync(fs.chownSync)\r\n  fs.fchownSync = chownFixSync(fs.fchownSync)\r\n  fs.lchownSync = chownFixSync(fs.lchownSync)\r\n\r\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\r\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\r\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\r\n\r\n  fs.stat = statFix(fs.stat)\r\n  fs.fstat = statFix(fs.fstat)\r\n  fs.lstat = statFix(fs.lstat)\r\n\r\n  fs.statSync = statFixSync(fs.statSync)\r\n  fs.fstatSync = statFixSync(fs.fstatSync)\r\n  fs.lstatSync = statFixSync(fs.lstatSync)\r\n\r\n  // if lchmod/lchown do not exist, then make them no-ops\r\n  if (!fs.lchmod) {\r\n    fs.lchmod = function (path, mode, cb) {\r\n      if (cb) process.nextTick(cb)\r\n    }\r\n    fs.lchmodSync = function () {}\r\n  }\r\n  if (!fs.lchown) {\r\n    fs.lchown = function (path, uid, gid, cb) {\r\n      if (cb) process.nextTick(cb)\r\n    }\r\n    fs.lchownSync = function () {}\r\n  }\r\n\r\n  // on Windows, A/V software can lock the directory, causing this\r\n  // to fail with an EACCES or EPERM if the directory contains newly\r\n  // created files.  Try again on failure, for up to 60 seconds.\r\n\r\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\r\n  // bit9, may lock files for up to a minute, causing npm package install\r\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\r\n  // CPU to a busy looping process, which can cause the program causing the lock\r\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\r\n  if (platform === \"win32\") {\r\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\r\n      var start = Date.now()\r\n      var backoff = 0;\r\n      fs$rename(from, to, function CB (er) {\r\n        if (er\r\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\r\n            && Date.now() - start < 60000) {\r\n          setTimeout(function() {\r\n            fs.stat(to, function (stater, st) {\r\n              if (stater && stater.code === \"ENOENT\")\r\n                fs$rename(from, to, CB);\r\n              else\r\n                cb(er)\r\n            })\r\n          }, backoff)\r\n          if (backoff < 100)\r\n            backoff += 10;\r\n          return;\r\n        }\r\n        if (cb) cb(er)\r\n      })\r\n    }})(fs.rename)\r\n  }\r\n\r\n  // if read() returns EAGAIN, then just try it again.\r\n  fs.read = (function (fs$read) {\r\n    function read (fd, buffer, offset, length, position, callback_) {\r\n      var callback\r\n      if (callback_ && typeof callback_ === 'function') {\r\n        var eagCounter = 0\r\n        callback = function (er, _, __) {\r\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\r\n            eagCounter ++\r\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\r\n          }\r\n          callback_.apply(this, arguments)\r\n        }\r\n      }\r\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\r\n    }\r\n\r\n    // This ensures `util.promisify` works as it does for native `fs.read`.\r\n    read.__proto__ = fs$read\r\n    return read\r\n  })(fs.read)\r\n\r\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\r\n    var eagCounter = 0\r\n    while (true) {\r\n      try {\r\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\r\n      } catch (er) {\r\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\r\n          eagCounter ++\r\n          continue\r\n        }\r\n        throw er\r\n      }\r\n    }\r\n  }})(fs.readSync)\r\n\r\n  function patchLchmod (fs) {\r\n    fs.lchmod = function (path, mode, callback) {\r\n      fs.open( path\r\n             , constants.O_WRONLY | constants.O_SYMLINK\r\n             , mode\r\n             , function (err, fd) {\r\n        if (err) {\r\n          if (callback) callback(err)\r\n          return\r\n        }\r\n        // prefer to return the chmod error, if one occurs,\r\n        // but still try to close, and report closing errors if they occur.\r\n        fs.fchmod(fd, mode, function (err) {\r\n          fs.close(fd, function(err2) {\r\n            if (callback) callback(err || err2)\r\n          })\r\n        })\r\n      })\r\n    }\r\n\r\n    fs.lchmodSync = function (path, mode) {\r\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\r\n\r\n      // prefer to return the chmod error, if one occurs,\r\n      // but still try to close, and report closing errors if they occur.\r\n      var threw = true\r\n      var ret\r\n      try {\r\n        ret = fs.fchmodSync(fd, mode)\r\n        threw = false\r\n      } finally {\r\n        if (threw) {\r\n          try {\r\n            fs.closeSync(fd)\r\n          } catch (er) {}\r\n        } else {\r\n          fs.closeSync(fd)\r\n        }\r\n      }\r\n      return ret\r\n    }\r\n  }\r\n\r\n  function patchLutimes (fs) {\r\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\r\n      fs.lutimes = function (path, at, mt, cb) {\r\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\r\n          if (er) {\r\n            if (cb) cb(er)\r\n            return\r\n          }\r\n          fs.futimes(fd, at, mt, function (er) {\r\n            fs.close(fd, function (er2) {\r\n              if (cb) cb(er || er2)\r\n            })\r\n          })\r\n        })\r\n      }\r\n\r\n      fs.lutimesSync = function (path, at, mt) {\r\n        var fd = fs.openSync(path, constants.O_SYMLINK)\r\n        var ret\r\n        var threw = true\r\n        try {\r\n          ret = fs.futimesSync(fd, at, mt)\r\n          threw = false\r\n        } finally {\r\n          if (threw) {\r\n            try {\r\n              fs.closeSync(fd)\r\n            } catch (er) {}\r\n          } else {\r\n            fs.closeSync(fd)\r\n          }\r\n        }\r\n        return ret\r\n      }\r\n\r\n    } else {\r\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\r\n      fs.lutimesSync = function () {}\r\n    }\r\n  }\r\n\r\n  function chmodFix (orig) {\r\n    if (!orig) return orig\r\n    return function (target, mode, cb) {\r\n      return orig.call(fs, target, mode, function (er) {\r\n        if (chownErOk(er)) er = null\r\n        if (cb) cb.apply(this, arguments)\r\n      })\r\n    }\r\n  }\r\n\r\n  function chmodFixSync (orig) {\r\n    if (!orig) return orig\r\n    return function (target, mode) {\r\n      try {\r\n        return orig.call(fs, target, mode)\r\n      } catch (er) {\r\n        if (!chownErOk(er)) throw er\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function chownFix (orig) {\r\n    if (!orig) return orig\r\n    return function (target, uid, gid, cb) {\r\n      return orig.call(fs, target, uid, gid, function (er) {\r\n        if (chownErOk(er)) er = null\r\n        if (cb) cb.apply(this, arguments)\r\n      })\r\n    }\r\n  }\r\n\r\n  function chownFixSync (orig) {\r\n    if (!orig) return orig\r\n    return function (target, uid, gid) {\r\n      try {\r\n        return orig.call(fs, target, uid, gid)\r\n      } catch (er) {\r\n        if (!chownErOk(er)) throw er\r\n      }\r\n    }\r\n  }\r\n\r\n  function statFix (orig) {\r\n    if (!orig) return orig\r\n    // Older versions of Node erroneously returned signed integers for\r\n    // uid + gid.\r\n    return function (target, options, cb) {\r\n      if (typeof options === 'function') {\r\n        cb = options\r\n        options = null\r\n      }\r\n      function callback (er, stats) {\r\n        if (stats) {\r\n          if (stats.uid < 0) stats.uid += 0x100000000\r\n          if (stats.gid < 0) stats.gid += 0x100000000\r\n        }\r\n        if (cb) cb.apply(this, arguments)\r\n      }\r\n      return options ? orig.call(fs, target, options, callback)\r\n        : orig.call(fs, target, callback)\r\n    }\r\n  }\r\n\r\n  function statFixSync (orig) {\r\n    if (!orig) return orig\r\n    // Older versions of Node erroneously returned signed integers for\r\n    // uid + gid.\r\n    return function (target, options) {\r\n      var stats = options ? orig.call(fs, target, options)\r\n        : orig.call(fs, target)\r\n      if (stats.uid < 0) stats.uid += 0x100000000\r\n      if (stats.gid < 0) stats.gid += 0x100000000\r\n      return stats;\r\n    }\r\n  }\r\n\r\n  // ENOSYS means that the fs doesn't support the op. Just ignore\r\n  // that, because it doesn't matter.\r\n  //\r\n  // if there's no getuid, or if getuid() is something other\r\n  // than 0, and the error is EINVAL or EPERM, then just ignore\r\n  // it.\r\n  //\r\n  // This specific case is a silent failure in cp, install, tar,\r\n  // and most other unix tools that manage permissions.\r\n  //\r\n  // When running as root, or if other types of errors are\r\n  // encountered, then it's strict.\r\n  function chownErOk (er) {\r\n    if (!er)\r\n      return true\r\n\r\n    if (er.code === \"ENOSYS\")\r\n      return true\r\n\r\n    var nonroot = !process.getuid || process.getuid() !== 0\r\n    if (nonroot) {\r\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\r\n        return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}