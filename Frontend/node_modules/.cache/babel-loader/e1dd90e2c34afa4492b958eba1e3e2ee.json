{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar anObject = require('../internals/an-object');\n\nvar toPositiveInteger = require('../internals/to-positive-integer');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg) {\n  if (!this.remaining--) {\n    this.done = true;\n    return {\n      done: true,\n      value: undefined\n    };\n  }\n\n  return this.next.call(this.iterator, arg);\n});\n$({\n  target: 'AsyncIterator',\n  proto: true,\n  real: true\n}, {\n  take: function take(limit) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      remaining: toPositiveInteger(limit)\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.async-iterator.take.js"],"names":["$","require","anObject","toPositiveInteger","createAsyncIteratorProxy","AsyncIteratorProxy","arg","remaining","done","value","undefined","next","call","iterator","target","proto","real","take","limit"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,kCAAD,CAA/B;;AACA,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,0CAAD,CAAtC;;AAEA,IAAII,kBAAkB,GAAGD,wBAAwB,CAAC,UAAUE,GAAV,EAAe;AAC/D,MAAI,CAAC,KAAKC,SAAL,EAAL,EAAuB;AACrB,SAAKC,IAAL,GAAY,IAAZ;AACA,WAAO;AAAEA,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAEC;AAArB,KAAP;AACD;;AAAC,SAAO,KAAKC,IAAL,CAAUC,IAAV,CAAe,KAAKC,QAApB,EAA8BP,GAA9B,CAAP;AACH,CALgD,CAAjD;AAOAN,CAAC,CAAC;AAAEc,EAAAA,MAAM,EAAE,eAAV;AAA2BC,EAAAA,KAAK,EAAE,IAAlC;AAAwCC,EAAAA,IAAI,EAAE;AAA9C,CAAD,EAAuD;AACtDC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACzB,WAAO,IAAIb,kBAAJ,CAAuB;AAC5BQ,MAAAA,QAAQ,EAAEX,QAAQ,CAAC,IAAD,CADU;AAE5BK,MAAAA,SAAS,EAAEJ,iBAAiB,CAACe,KAAD;AAFA,KAAvB,CAAP;AAID;AANqD,CAAvD,CAAD","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar $ = require('../internals/export');\r\nvar anObject = require('../internals/an-object');\r\nvar toPositiveInteger = require('../internals/to-positive-integer');\r\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\r\n\r\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg) {\r\n  if (!this.remaining--) {\r\n    this.done = true;\r\n    return { done: true, value: undefined };\r\n  } return this.next.call(this.iterator, arg);\r\n});\r\n\r\n$({ target: 'AsyncIterator', proto: true, real: true }, {\r\n  take: function take(limit) {\r\n    return new AsyncIteratorProxy({\r\n      iterator: anObject(this),\r\n      remaining: toPositiveInteger(limit)\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}