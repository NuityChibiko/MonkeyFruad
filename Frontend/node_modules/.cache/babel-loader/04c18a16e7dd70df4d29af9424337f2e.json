{"ast":null,"code":"const Transform = require(\"stream\").Transform;\n\nclass UploadStream extends Transform {\n  constructor(options) {\n    super();\n    this.boundary = options.boundary;\n  }\n\n  _transform(data, encoding, next) {\n    let buffer = Buffer.isBuffer(data) ? data : Buffer.from(data, encoding);\n    this.push(buffer);\n    next();\n  }\n\n  _flush(next) {\n    this.push(Buffer.from(\"\\r\\n\", 'ascii'));\n    this.push(Buffer.from(\"--\" + this.boundary + \"--\", 'ascii'));\n    return next();\n  }\n\n}\n\nmodule.exports = UploadStream;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/cloudinary/lib/upload_stream.js"],"names":["Transform","require","UploadStream","constructor","options","boundary","_transform","data","encoding","next","buffer","Buffer","isBuffer","from","push","_flush","module","exports"],"mappings":"AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,SAApC;;AAEA,MAAME,YAAN,SAA2BF,SAA3B,CAAqC;AACnCG,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB;AACA,SAAKC,QAAL,GAAgBD,OAAO,CAACC,QAAxB;AACD;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAOC,QAAP,EAAiBC,IAAjB,EAAuB;AAC/B,QAAIC,MAAM,GAAKC,MAAM,CAACC,QAAP,CAAgBL,IAAhB,CAAD,GAA0BA,IAA1B,GAAiCI,MAAM,CAACE,IAAP,CAAYN,IAAZ,EAAkBC,QAAlB,CAA/C;AACA,SAAKM,IAAL,CAAUJ,MAAV;AACAD,IAAAA,IAAI;AACL;;AAEDM,EAAAA,MAAM,CAACN,IAAD,EAAO;AACX,SAAKK,IAAL,CAAUH,MAAM,CAACE,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAAV;AACA,SAAKC,IAAL,CAAUH,MAAM,CAACE,IAAP,CAAY,OAAO,KAAKR,QAAZ,GAAuB,IAAnC,EAAyC,OAAzC,CAAV;AACA,WAAOI,IAAI,EAAX;AACD;;AAhBkC;;AAmBrCO,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["\r\nconst Transform = require(\"stream\").Transform;\r\n\r\nclass UploadStream extends Transform {\r\n  constructor(options) {\r\n    super();\r\n    this.boundary = options.boundary;\r\n  }\r\n\r\n  _transform(data, encoding, next) {\r\n    let buffer = ((Buffer.isBuffer(data)) ? data : Buffer.from(data, encoding));\r\n    this.push(buffer);\r\n    next();\r\n  }\r\n\r\n  _flush(next) {\r\n    this.push(Buffer.from(\"\\r\\n\", 'ascii'));\r\n    this.push(Buffer.from(\"--\" + this.boundary + \"--\", 'ascii'));\r\n    return next();\r\n  }\r\n}\r\n\r\nmodule.exports = UploadStream;\r\n"]},"metadata":{},"sourceType":"script"}