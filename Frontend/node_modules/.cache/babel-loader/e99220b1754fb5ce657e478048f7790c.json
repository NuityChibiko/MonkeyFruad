{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar anObject = require('../internals/an-object');\n\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\n\nvar IteratorProxy = createIteratorProxy(function (arg) {\n  var result = anObject(this.next.call(this.iterator, arg));\n  var done = this.done = !!result.done;\n  if (!done) return [this.index++, result.value];\n});\n$({\n  target: 'Iterator',\n  proto: true,\n  real: true\n}, {\n  asIndexedPairs: function asIndexedPairs() {\n    return new IteratorProxy({\n      iterator: anObject(this),\n      index: 0\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.iterator.as-indexed-pairs.js"],"names":["$","require","anObject","createIteratorProxy","IteratorProxy","arg","result","next","call","iterator","done","index","value","target","proto","real","asIndexedPairs"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,oCAAD,CAAjC;;AAEA,IAAIG,aAAa,GAAGD,mBAAmB,CAAC,UAAUE,GAAV,EAAe;AACrD,MAAIC,MAAM,GAAGJ,QAAQ,CAAC,KAAKK,IAAL,CAAUC,IAAV,CAAe,KAAKC,QAApB,EAA8BJ,GAA9B,CAAD,CAArB;AACA,MAAIK,IAAI,GAAG,KAAKA,IAAL,GAAY,CAAC,CAACJ,MAAM,CAACI,IAAhC;AACA,MAAI,CAACA,IAAL,EAAW,OAAO,CAAC,KAAKC,KAAL,EAAD,EAAeL,MAAM,CAACM,KAAtB,CAAP;AACZ,CAJsC,CAAvC;AAMAZ,CAAC,CAAC;AAAEa,EAAAA,MAAM,EAAE,UAAV;AAAsBC,EAAAA,KAAK,EAAE,IAA7B;AAAmCC,EAAAA,IAAI,EAAE;AAAzC,CAAD,EAAkD;AACjDC,EAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,WAAO,IAAIZ,aAAJ,CAAkB;AACvBK,MAAAA,QAAQ,EAAEP,QAAQ,CAAC,IAAD,CADK;AAEvBS,MAAAA,KAAK,EAAE;AAFgB,KAAlB,CAAP;AAID;AANgD,CAAlD,CAAD","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar $ = require('../internals/export');\r\nvar anObject = require('../internals/an-object');\r\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\r\n\r\nvar IteratorProxy = createIteratorProxy(function (arg) {\r\n  var result = anObject(this.next.call(this.iterator, arg));\r\n  var done = this.done = !!result.done;\r\n  if (!done) return [this.index++, result.value];\r\n});\r\n\r\n$({ target: 'Iterator', proto: true, real: true }, {\r\n  asIndexedPairs: function asIndexedPairs() {\r\n    return new IteratorProxy({\r\n      iterator: anObject(this),\r\n      index: 0\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}