{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\commentitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./commentitem.css\";\nimport usercontext from \"../context/usercontext\";\n\nconst Commentitem = ({\n  comment\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [allcomment, Setallcomment] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n  console.log(commentid);\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n    // console.log( getcomment.data.item);\n    // Setallcomment( getcomment.data.item);\n\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      textcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      Settextcomment(comment.textcomment);\n      Setcomment;\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className=\"row mypostcommentrow\">\n    //   <div className=\"column1 mypostcommentrow1\">\n    //     <div class=\"vl\"></div>\n    //     <div className=\"mypost-comment-img1\">\n    //       <img className=\"img-circle1\" src=\"/img/profile.png\" />\n    //       <div className=\"mypost-comment-name1\">\n    //        {data ? \"@\" : null}{data.username}\n    //         <span className=\"mypost-comment-time1\"> {data.datetime} </span>\n    //       </div>\n    //       <br />\n    //      {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\n    //         <div className=\"mypostcomment1\">{textcomment}</div> \n    //       </div>  \n    //      } \n    //     </div> \n    //    </div> \n    //    {user && data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\n    //     <div className=\"menu-containermypostcommentsetting\">\n    //       <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\n    //         <img \n    //           className=\"mypostcommentimg-setting\"\n    //           src=\"/img/setting.png\"\n    //           alt=\"avatar\"\n    //         ></img> \n    //    </div>\n    //       <div\n    //         className={`mypostcommentmenusetting ${\n    //           isActive ? \"active\" : \"inactive\"\n    //         }`}\n    //       >\n    //         <ul className=\"ul-mypostcommentmenusetting\">\n    //        <li className=\"li-mypostcommentmenusetting\">\n    //             <a className=\"a-mypostcommentmenusetting\"\n    //             onClick={() => edit(data.commentid)}\n    //             >\n    //                 แก้ไขคอมเมนต์\n    //             </a>\n    //           </li> \n    //           <li className=\"li-mypostcommentmenusetting\">\n    //             <a\n    //               className=\"a-mypostcommentmenusetting\"\n    //               onClick={() => deleted(data.commentid)}\n    //             >\n    //               {\" \"}\n    //               ลบคอมเมนต์{\" \"}\n    //             </a>\n    //           </li> \n    //         </ul>\n    //       </div>\n    //     </div>\n    //   </div> : null }\n    // </div> \n    _jsxDEV(\"div\", {\n      children: allcomment ? allcomment.map(doc => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mypostcommentrow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column1 mypostcommentrow1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"vl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mypost-comment-img1\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img-circle1\",\n                  src: \"/img/profile.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mypost-comment-name1\",\n                  children: [doc ? \"@\" : null, doc.username, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mypost-comment-time1\",\n                    children: [\" \", doc.datetime, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 7\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 5\n                }, this), checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    value: doc.textcomment,\n                    onChange: e => {\n                      Settextcomment(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 26\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleedit(doc.commentid),\n                    children: \"\\u0E15\\u0E01\\u0E25\\u0E07\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 116\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mypost-comment-comments1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mypostcomment1\",\n                    children: doc.textcomment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 7\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 188\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 1\n            }, this), user && doc.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column2 mypostcommentrow2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"menu-containermypostcommentsetting\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: onClick,\n                  className: \"mypostcommentbuttonsetting\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"mypostcommentimg-setting\",\n                    src: \"/img/setting.png\",\n                    alt: \"avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 7\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"ul-mypostcommentmenusetting\",\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"li-mypostcommentmenusetting\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"a-mypostcommentmenusetting\",\n                        onClick: () => edit(doc.commentid),\n                        children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 11\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 6\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"li-mypostcommentmenusetting\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"a-mypostcommentmenusetting\",\n                        onClick: () => deleted(doc.commentid),\n                        children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 11\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 9\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 7\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 36\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Commentitem, \"U3QEicRmeHQwWpZP8hNk/DkEpeU=\");\n\n_c = Commentitem;\nexport default Commentitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentitem\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/commentitem.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Commentitem","comment","isActive","setIsActive","onClick","user","setUser","allcomment","Setallcomment","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","console","log","commentid","deleted","postdelete","post","window","location","reload","edit","handleedit","editcomment","gg","Setcomment","err","map","doc","username","datetime","e","target","value","userid","uid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./commentitem.css\";\r\nimport usercontext from \"../context/usercontext\";\r\n\r\n\r\n\r\nconst Commentitem = ({ comment }) => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  let { user, setUser } = useContext(usercontext);\r\n  const [allcomment , Setallcomment] = useState()\r\n  const [item , Setitem] = useState([])\r\n  const [checkedittext , Setcheckedittext] = useState(false)\r\n  // const [edittextcomment , Setedittextcomment] = useState()\r\n  const [textcomment , Settextcomment] = useState()\r\n\r\n    \r\n      console.log(commentid)\r\n  const deleted = async (commentid) => {\r\n      const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // console.log( getcomment.data.item);\r\n      // Setallcomment( getcomment.data.item);\r\n      window.location.reload(false);\r\n  };\r\n  const edit = async () =>{\r\n    Setcheckedittext(true)\r\n  }\r\n  const handleedit = async (commentid) =>{\r\n  const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n  \r\n  }\r\n\r\n  const gg = async () => {\r\n    try {\r\n      Settextcomment(comment.textcomment)\r\n      Setcomment\r\n    } catch (err) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, []);\r\n \r\n  \r\n  return (\r\n    // <div className=\"row mypostcommentrow\">\r\n    //   <div className=\"column1 mypostcommentrow1\">\r\n    //     <div class=\"vl\"></div>\r\n    //     <div className=\"mypost-comment-img1\">\r\n    //       <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n    //       <div className=\"mypost-comment-name1\">\r\n    //        {data ? \"@\" : null}{data.username}\r\n    //         <span className=\"mypost-comment-time1\"> {data.datetime} </span>\r\n    //       </div>\r\n    //       <br />\r\n    //      {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n    //         <div className=\"mypostcomment1\">{textcomment}</div> \r\n    //       </div>  \r\n    //      } \r\n    //     </div> \r\n    //    </div> \r\n    //    {user && data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n    //     <div className=\"menu-containermypostcommentsetting\">\r\n    //       <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n    //         <img \r\n    //           className=\"mypostcommentimg-setting\"\r\n    //           src=\"/img/setting.png\"\r\n    //           alt=\"avatar\"\r\n    //         ></img> \r\n    //    </div>\r\n\r\n    //       <div\r\n    //         className={`mypostcommentmenusetting ${\r\n    //           isActive ? \"active\" : \"inactive\"\r\n    //         }`}\r\n    //       >\r\n    //         <ul className=\"ul-mypostcommentmenusetting\">\r\n    //        <li className=\"li-mypostcommentmenusetting\">\r\n    //             <a className=\"a-mypostcommentmenusetting\"\r\n    //             onClick={() => edit(data.commentid)}\r\n    //             >\r\n    //                 แก้ไขคอมเมนต์\r\n    //             </a>\r\n    //           </li> \r\n    //           <li className=\"li-mypostcommentmenusetting\">\r\n    //             <a\r\n    //               className=\"a-mypostcommentmenusetting\"\r\n    //               onClick={() => deleted(data.commentid)}\r\n    //             >\r\n    //               {\" \"}\r\n    //               ลบคอมเมนต์{\" \"}\r\n    //             </a>\r\n    //           </li> \r\n    //         </ul>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div> : null }\r\n    // </div> \r\n\r\n\r\n    <div>\r\n      {allcomment ? allcomment.map(doc =>{\r\n        return (<div>\r\n           <div className=\"row mypostcommentrow\">\r\n\r\n<div className=\"column1 mypostcommentrow1\">\r\n  <div class=\"vl\"></div>\r\n  <div className=\"mypost-comment-img1\">\r\n    <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n    <div className=\"mypost-comment-name1\">\r\n     {doc ? \"@\" : null}{doc.username}\r\n      <span className=\"mypost-comment-time1\"> {doc.datetime} </span>\r\n    </div>\r\n    <br />\r\n   {checkedittext ? <div><input value={doc.textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(doc.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n      <div className=\"mypostcomment1\">{doc.textcomment}</div> \r\n    </div>  \r\n   } \r\n  </div> \r\n </div> \r\n {user && doc.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n  <div className=\"menu-containermypostcommentsetting\">\r\n    <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n      <img \r\n        className=\"mypostcommentimg-setting\"\r\n        src=\"/img/setting.png\"\r\n        alt=\"avatar\"\r\n      ></img> \r\n </div>\r\n\r\n    <div\r\n      className={`mypostcommentmenusetting ${\r\n        isActive ? \"active\" : \"inactive\"\r\n      }`}\r\n    >\r\n      <ul className=\"ul-mypostcommentmenusetting\">\r\n     <li className=\"li-mypostcommentmenusetting\">\r\n          <a className=\"a-mypostcommentmenusetting\"\r\n          onClick={() => edit(doc.commentid)}\r\n          >\r\n              แก้ไขคอมเมนต์\r\n          </a>\r\n        </li> \r\n        <li className=\"li-mypostcommentmenusetting\">\r\n          <a\r\n            className=\"a-mypostcommentmenusetting\"\r\n            onClick={() => deleted(doc.commentid)}\r\n          >\r\n            {\" \"}\r\n            ลบคอมเมนต์{\" \"}\r\n          </a>\r\n        </li> \r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div> : null }\r\n</div> \r\n        </div>)\r\n      }): null}\r\n   \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Commentitem;\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}