{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar Promise = getBuiltIn('Promise');\nvar push = [].push;\n\nvar createMethod = function (TYPE) {\n  var IS_TO_ARRAY = TYPE == 0;\n  var IS_FOR_EACH = TYPE == 1;\n  var IS_EVERY = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  return function (iterator, fn) {\n    anObject(iterator);\n    var next = aFunction(iterator.next);\n    var array = IS_TO_ARRAY ? [] : undefined;\n    if (!IS_TO_ARRAY) aFunction(fn);\n    return new Promise(function (resolve, reject) {\n      var loop = function () {\n        try {\n          Promise.resolve(anObject(next.call(iterator))).then(function (step) {\n            try {\n              if (anObject(step).done) {\n                resolve(IS_TO_ARRAY ? array : IS_SOME ? false : IS_EVERY || undefined);\n              } else {\n                var value = step.value;\n\n                if (IS_TO_ARRAY) {\n                  push.call(array, value);\n                  loop();\n                } else {\n                  Promise.resolve(fn(value)).then(function (result) {\n                    if (IS_FOR_EACH) {\n                      loop();\n                    } else if (IS_EVERY) {\n                      result ? loop() : resolve(false);\n                    } else {\n                      result ? resolve(IS_SOME || value) : loop();\n                    }\n                  }, reject);\n                }\n              }\n            } catch (err) {\n              reject(err);\n            }\n          }, reject);\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      loop();\n    });\n  };\n};\n\nmodule.exports = {\n  toArray: createMethod(0),\n  forEach: createMethod(1),\n  every: createMethod(2),\n  some: createMethod(3),\n  find: createMethod(4)\n};","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/internals/async-iterator-iteration.js"],"names":["aFunction","require","anObject","getBuiltIn","Promise","push","createMethod","TYPE","IS_TO_ARRAY","IS_FOR_EACH","IS_EVERY","IS_SOME","iterator","fn","next","array","undefined","resolve","reject","loop","call","then","step","done","value","result","err","error","module","exports","toArray","forEach","every","some","find"],"mappings":"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","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar aFunction = require('../internals/a-function');\r\nvar anObject = require('../internals/an-object');\r\nvar getBuiltIn = require('../internals/get-built-in');\r\n\r\nvar Promise = getBuiltIn('Promise');\r\nvar push = [].push;\r\n\r\nvar createMethod = function (TYPE) {\r\n  var IS_TO_ARRAY = TYPE == 0;\r\n  var IS_FOR_EACH = TYPE == 1;\r\n  var IS_EVERY = TYPE == 2;\r\n  var IS_SOME = TYPE == 3;\r\n  return function (iterator, fn) {\r\n    anObject(iterator);\r\n    var next = aFunction(iterator.next);\r\n    var array = IS_TO_ARRAY ? [] : undefined;\r\n    if (!IS_TO_ARRAY) aFunction(fn);\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      var loop = function () {\r\n        try {\r\n          Promise.resolve(anObject(next.call(iterator))).then(function (step) {\r\n            try {\r\n              if (anObject(step).done) {\r\n                resolve(IS_TO_ARRAY ? array : IS_SOME ? false : IS_EVERY || undefined);\r\n              } else {\r\n                var value = step.value;\r\n                if (IS_TO_ARRAY) {\r\n                  push.call(array, value);\r\n                  loop();\r\n                } else {\r\n                  Promise.resolve(fn(value)).then(function (result) {\r\n                    if (IS_FOR_EACH) {\r\n                      loop();\r\n                    } else if (IS_EVERY) {\r\n                      result ? loop() : resolve(false);\r\n                    } else {\r\n                      result ? resolve(IS_SOME || value) : loop();\r\n                    }\r\n                  }, reject);\r\n                }\r\n              }\r\n            } catch (err) { reject(err); }\r\n          }, reject);\r\n        } catch (error) { reject(error); }\r\n      };\r\n\r\n      loop();\r\n    });\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  toArray: createMethod(0),\r\n  forEach: createMethod(1),\r\n  every: createMethod(2),\r\n  some: createMethod(3),\r\n  find: createMethod(4)\r\n};\r\n"]},"metadata":{},"sourceType":"script"}