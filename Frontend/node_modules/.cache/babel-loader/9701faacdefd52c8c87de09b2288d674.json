{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\commentitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./commentitem.css\";\nimport usercontext from \"../context/usercontext\";\n\nconst Commentitem = ({\n  data,\n  ok,\n  uid\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [allcomment, Setallcomment] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n    // console.log( getcomment.data.item);\n    // Setallcomment( getcomment.data.item);\n\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      textcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      // Settextcomment(data.textcomment)\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n      // Setallcomment(getcomment.data.item)\n      const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`);\n      Settextcomment(getcomment.data.item);\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: textcomment ? textcomment.map(res => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mypostcommentrow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column1 mypostcommentrow1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"vl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypost-comment-img1\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img-circle1\",\n                src: \"/img/profile.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mypost-comment-name1\",\n                children: [data ? \"@\" : null, data.username, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mypost-comment-time1\",\n                  children: [\" \", data.datetime, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 13\n              }, this), checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  value: res.textcomment,\n                  onChange: e => {\n                    Settextcomment(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 34\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleedit(textcomment.commentid),\n                  children: \"\\u0E15\\u0E01\\u0E25\\u0E07\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 124\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mypost-comment-comments1\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mypostcomment1\",\n                  children: textcomment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 204\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), textcomment.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column2 mypostcommentrow2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-containermypostcommentsetting\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: onClick,\n                className: \"mypostcommentbuttonsetting\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"mypostcommentimg-setting\",\n                  src: \"/img/setting.png\",\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"ul-mypostcommentmenusetting\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"li-mypostcommentmenusetting\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"a-mypostcommentmenusetting\",\n                      onClick: () => edit(res.commentid),\n                      children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"li-mypostcommentmenusetting\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"a-mypostcommentmenusetting\",\n                      onClick: () => deleted(data.commentid),\n                      children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 43\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Commentitem, \"U3QEicRmeHQwWpZP8hNk/DkEpeU=\");\n\n_c = Commentitem;\nexport default Commentitem;\n{\n  /* // <div className=\"row mypostcommentrow\">\r\n    //   <div className=\"column1 mypostcommentrow1\">\r\n    //     <div class=\"vl\"></div>\r\n    //     <div className=\"mypost-comment-img1\">\r\n    //       <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n    //       <div className=\"mypost-comment-name1\">\r\n    //        {data ? \"@\" : null}{data.username}\r\n    //         <span className=\"mypost-comment-time1\"> {data.datetime} </span>\r\n    //       </div>\r\n    //       <br />\r\n    //      {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n    //         <div className=\"mypostcomment1\">{textcomment}</div> \r\n    //       </div>  */\n}\n{\n  /* //       } \r\n  //     </div> */\n}\n{\n  /* //   </div> */\n}\n{\n  /* //   {data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n  //     <div className=\"menu-containermypostcommentsetting\">\r\n  //       <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n  //         <img */\n}\n{\n  /* //           className=\"mypostcommentimg-setting\"\r\n  //           src=\"/img/setting.png\"\r\n  //           alt=\"avatar\"\r\n  //         ></img> */\n}\n{\n  /* //       </div>\r\n   //       <div\r\n  //         className={`mypostcommentmenusetting ${\r\n  //           isActive ? \"active\" : \"inactive\"\r\n  //         }`}\r\n  //       >\r\n  //         <ul className=\"ul-mypostcommentmenusetting\">\r\n  //        <li className=\"li-mypostcommentmenusetting\">\r\n  //             <a className=\"a-mypostcommentmenusetting\"\r\n  //             onClick={() => edit(data.commentid)}\r\n  //             >\r\n  //                 แก้ไขคอมเมนต์\r\n  //             </a>\r\n  //           </li> \r\n  //           <li className=\"li-mypostcommentmenusetting\">\r\n  //             <a\r\n  //               className=\"a-mypostcommentmenusetting\"\r\n  //               onClick={() => deleted(data.commentid)}\r\n  //             >\r\n  //               {\" \"}\r\n  //               ลบคอมเมนต์{\" \"}\r\n  //             </a>\r\n  //           </li> \r\n  //         </ul>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div> : null }\r\n  // </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentitem\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/commentitem.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Commentitem","data","ok","uid","isActive","setIsActive","onClick","user","setUser","allcomment","Setallcomment","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","deleted","commentid","postdelete","post","window","location","reload","edit","handleedit","editcomment","gg","getcomment","get","err","console","log","map","res","username","datetime","e","target","value","userid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./commentitem.css\";\r\nimport usercontext from \"../context/usercontext\";\r\n\r\n\r\n\r\nconst Commentitem = ({ data, ok ,uid}) => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  let { user, setUser } = useContext(usercontext);\r\n  const [allcomment , Setallcomment] = useState()\r\n  const [item , Setitem] = useState([])\r\n  const [checkedittext , Setcheckedittext] = useState(false)\r\n  // const [edittextcomment , Setedittextcomment] = useState()\r\n  const [textcomment , Settextcomment] = useState()\r\n\r\n \r\n\r\n  const deleted = async (commentid) => {\r\n      const postdelete = await Axios.post(\r\n        `http://localhost:7000/post/delete/comment/${commentid}`\r\n      );\r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // console.log( getcomment.data.item);\r\n      // Setallcomment( getcomment.data.item);\r\n      window.location.reload(false);\r\n  };\r\n  const edit = async () =>{\r\n    Setcheckedittext(true)\r\n  }\r\n  const handleedit = async (commentid) =>{\r\n  const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n  \r\n  }\r\n\r\n  const gg = async () => {\r\n    try {\r\n      // Settextcomment(data.textcomment)\r\n     \r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // Setallcomment(getcomment.data.item)\r\n        const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      Settextcomment(getcomment.data.item)\r\n      \r\n    } catch (err) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      {textcomment ? textcomment.map(res=>{\r\n        return (<div> <div className=\"row mypostcommentrow\">\r\n        <div className=\"column1 mypostcommentrow1\">\r\n          <div class=\"vl\"></div>\r\n          <div className=\"mypost-comment-img1\">\r\n            <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n            <div className=\"mypost-comment-name1\">\r\n             {data ? \"@\" : null}{data.username}\r\n              <span className=\"mypost-comment-time1\"> {data.datetime} </span>\r\n            </div>\r\n            <br />\r\n           {checkedittext ? <div><input value={res.textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(textcomment.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n              <div className=\"mypostcomment1\">{textcomment}</div> \r\n            </div> \r\n            } \r\n          </div>\r\n        </div>\r\n        {textcomment.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n          <div className=\"menu-containermypostcommentsetting\">\r\n            <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n              <img\r\n                className=\"mypostcommentimg-setting\"\r\n                src=\"/img/setting.png\"\r\n                alt=\"avatar\"\r\n              ></img>\r\n            </div>\r\n  \r\n            <div\r\n              className={`mypostcommentmenusetting ${\r\n                isActive ? \"active\" : \"inactive\"\r\n              }`}\r\n            >\r\n              <ul className=\"ul-mypostcommentmenusetting\">\r\n             <li className=\"li-mypostcommentmenusetting\">\r\n                  <a className=\"a-mypostcommentmenusetting\"\r\n                  onClick={() => edit(res.commentid)}\r\n                  >\r\n                      แก้ไขคอมเมนต์\r\n                  </a>\r\n                </li> \r\n                <li className=\"li-mypostcommentmenusetting\">\r\n                  <a\r\n                    className=\"a-mypostcommentmenusetting\"\r\n                    onClick={() => deleted(data.commentid)}\r\n                  >\r\n                    {\" \"}\r\n                    ลบคอมเมนต์{\" \"}\r\n                  </a>\r\n                </li> \r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div> : null }\r\n      </div>\r\n      </div>)\r\n      }) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Commentitem;\r\n\r\n\r\n {/* // <div className=\"row mypostcommentrow\">\r\n    //   <div className=\"column1 mypostcommentrow1\">\r\n    //     <div class=\"vl\"></div>\r\n    //     <div className=\"mypost-comment-img1\">\r\n    //       <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n    //       <div className=\"mypost-comment-name1\">\r\n    //        {data ? \"@\" : null}{data.username}\r\n    //         <span className=\"mypost-comment-time1\"> {data.datetime} </span>\r\n    //       </div>\r\n    //       <br />\r\n    //      {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n    //         <div className=\"mypostcomment1\">{textcomment}</div> \r\n    //       </div>  */}\r\n    {/* //       } \r\n    //     </div> */}\r\n    {/* //   </div> */}\r\n    {/* //   {data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n    //     <div className=\"menu-containermypostcommentsetting\">\r\n    //       <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n    //         <img */}\r\n    {/* //           className=\"mypostcommentimg-setting\"\r\n    //           src=\"/img/setting.png\"\r\n    //           alt=\"avatar\"\r\n    //         ></img> */}\r\n    {/* //       </div>\r\n\r\n    //       <div\r\n    //         className={`mypostcommentmenusetting ${\r\n    //           isActive ? \"active\" : \"inactive\"\r\n    //         }`}\r\n    //       >\r\n    //         <ul className=\"ul-mypostcommentmenusetting\">\r\n    //        <li className=\"li-mypostcommentmenusetting\">\r\n    //             <a className=\"a-mypostcommentmenusetting\"\r\n    //             onClick={() => edit(data.commentid)}\r\n    //             >\r\n    //                 แก้ไขคอมเมนต์\r\n    //             </a>\r\n    //           </li> \r\n    //           <li className=\"li-mypostcommentmenusetting\">\r\n    //             <a\r\n    //               className=\"a-mypostcommentmenusetting\"\r\n    //               onClick={() => deleted(data.commentid)}\r\n    //             >\r\n    //               {\" \"}\r\n    //               ลบคอมเมนต์{\" \"}\r\n    //             </a>\r\n    //           </li> \r\n    //         </ul>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div> : null }\r\n    // </div> */}"]},"metadata":{},"sourceType":"module"}