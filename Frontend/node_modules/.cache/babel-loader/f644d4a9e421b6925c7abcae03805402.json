{"ast":null,"code":"/**\r\n * Module dependencies.\r\n */\nvar format = require('util').format;\n\nvar isArray = require('util').isArray;\n/**\r\n * Expose `flash()` function on requests.\r\n *\r\n * @return {Function}\r\n * @api public\r\n */\n\n\nmodule.exports = function flash(options) {\n  options = options || {};\n  var safe = options.unsafe === undefined ? true : !options.unsafe;\n  return function (req, res, next) {\n    if (req.flash && safe) {\n      return next();\n    }\n\n    req.flash = _flash;\n    next();\n  };\n};\n/**\r\n * Queue flash `msg` of the given `type`.\r\n *\r\n * Examples:\r\n *\r\n *      req.flash('info', 'email sent');\r\n *      req.flash('error', 'email delivery failed');\r\n *      req.flash('info', 'email re-sent');\r\n *      // => 2\r\n *\r\n *      req.flash('info');\r\n *      // => ['email sent', 'email re-sent']\r\n *\r\n *      req.flash('info');\r\n *      // => []\r\n *\r\n *      req.flash();\r\n *      // => { error: ['email delivery failed'], info: [] }\r\n *\r\n * Formatting:\r\n *\r\n * Flash notifications also support arbitrary formatting support.\r\n * For example you may pass variable arguments to `req.flash()`\r\n * and use the %s specifier to be replaced by the associated argument:\r\n *\r\n *     req.flash('info', 'email has been sent to %s.', userName);\r\n *\r\n * Formatting uses `util.format()`, which is available on Node 0.6+.\r\n *\r\n * @param {String} type\r\n * @param {String} msg\r\n * @return {Array|Object|Number}\r\n * @api public\r\n */\n\n\nfunction _flash(type, msg) {\n  if (this.session === undefined) throw Error('req.flash() requires sessions');\n  var msgs = this.session.flash = this.session.flash || {};\n\n  if (type && msg) {\n    // util.format is available in Node.js 0.6+\n    if (arguments.length > 2 && format) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      msg = format.apply(undefined, args);\n    } else if (isArray(msg)) {\n      msg.forEach(function (val) {\n        (msgs[type] = msgs[type] || []).push(val);\n      });\n      return msgs[type].length;\n    }\n\n    return (msgs[type] = msgs[type] || []).push(msg);\n  } else if (type) {\n    var arr = msgs[type];\n    delete msgs[type];\n    return arr || [];\n  } else {\n    this.session.flash = {};\n    return msgs;\n  }\n}","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/connect-flash/lib/flash.js"],"names":["format","require","isArray","module","exports","flash","options","safe","unsafe","undefined","req","res","next","_flash","type","msg","session","Error","msgs","arguments","length","args","Array","prototype","slice","call","apply","forEach","val","push","arr"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAA7B;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBC,OAA9B;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACvCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,IAAI,GAAID,OAAO,CAACE,MAAR,KAAmBC,SAApB,GAAiC,IAAjC,GAAwC,CAACH,OAAO,CAACE,MAA5D;AAEA,SAAO,UAASE,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9B,QAAIF,GAAG,CAACL,KAAJ,IAAaE,IAAjB,EAAuB;AAAE,aAAOK,IAAI,EAAX;AAAgB;;AACzCF,IAAAA,GAAG,CAACL,KAAJ,GAAYQ,MAAZ;AACAD,IAAAA,IAAI;AACL,GAJD;AAKD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,GAAtB,EAA2B;AACzB,MAAI,KAAKC,OAAL,KAAiBP,SAArB,EAAgC,MAAMQ,KAAK,CAAC,+BAAD,CAAX;AAChC,MAAIC,IAAI,GAAG,KAAKF,OAAL,CAAaX,KAAb,GAAqB,KAAKW,OAAL,CAAaX,KAAb,IAAsB,EAAtD;;AACA,MAAIS,IAAI,IAAIC,GAAZ,EAAiB;AACf;AACA,QAAII,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBpB,MAA5B,EAAoC;AAClC,UAAIqB,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BN,SAA3B,EAAsC,CAAtC,CAAX;AACAJ,MAAAA,GAAG,GAAGf,MAAM,CAAC0B,KAAP,CAAajB,SAAb,EAAwBY,IAAxB,CAAN;AACD,KAHD,MAGO,IAAInB,OAAO,CAACa,GAAD,CAAX,EAAkB;AACvBA,MAAAA,GAAG,CAACY,OAAJ,CAAY,UAASC,GAAT,EAAa;AACvB,SAACV,IAAI,CAACJ,IAAD,CAAJ,GAAaI,IAAI,CAACJ,IAAD,CAAJ,IAAc,EAA5B,EAAgCe,IAAhC,CAAqCD,GAArC;AACD,OAFD;AAGA,aAAOV,IAAI,CAACJ,IAAD,CAAJ,CAAWM,MAAlB;AACD;;AACD,WAAO,CAACF,IAAI,CAACJ,IAAD,CAAJ,GAAaI,IAAI,CAACJ,IAAD,CAAJ,IAAc,EAA5B,EAAgCe,IAAhC,CAAqCd,GAArC,CAAP;AACD,GAZD,MAYO,IAAID,IAAJ,EAAU;AACf,QAAIgB,GAAG,GAAGZ,IAAI,CAACJ,IAAD,CAAd;AACA,WAAOI,IAAI,CAACJ,IAAD,CAAX;AACA,WAAOgB,GAAG,IAAI,EAAd;AACD,GAJM,MAIA;AACL,SAAKd,OAAL,CAAaX,KAAb,GAAqB,EAArB;AACA,WAAOa,IAAP;AACD;AACF","sourcesContent":["/**\r\n * Module dependencies.\r\n */\r\nvar format = require('util').format;\r\nvar isArray = require('util').isArray;\r\n\r\n\r\n/**\r\n * Expose `flash()` function on requests.\r\n *\r\n * @return {Function}\r\n * @api public\r\n */\r\nmodule.exports = function flash(options) {\r\n  options = options || {};\r\n  var safe = (options.unsafe === undefined) ? true : !options.unsafe;\r\n  \r\n  return function(req, res, next) {\r\n    if (req.flash && safe) { return next(); }\r\n    req.flash = _flash;\r\n    next();\r\n  }\r\n}\r\n\r\n/**\r\n * Queue flash `msg` of the given `type`.\r\n *\r\n * Examples:\r\n *\r\n *      req.flash('info', 'email sent');\r\n *      req.flash('error', 'email delivery failed');\r\n *      req.flash('info', 'email re-sent');\r\n *      // => 2\r\n *\r\n *      req.flash('info');\r\n *      // => ['email sent', 'email re-sent']\r\n *\r\n *      req.flash('info');\r\n *      // => []\r\n *\r\n *      req.flash();\r\n *      // => { error: ['email delivery failed'], info: [] }\r\n *\r\n * Formatting:\r\n *\r\n * Flash notifications also support arbitrary formatting support.\r\n * For example you may pass variable arguments to `req.flash()`\r\n * and use the %s specifier to be replaced by the associated argument:\r\n *\r\n *     req.flash('info', 'email has been sent to %s.', userName);\r\n *\r\n * Formatting uses `util.format()`, which is available on Node 0.6+.\r\n *\r\n * @param {String} type\r\n * @param {String} msg\r\n * @return {Array|Object|Number}\r\n * @api public\r\n */\r\nfunction _flash(type, msg) {\r\n  if (this.session === undefined) throw Error('req.flash() requires sessions');\r\n  var msgs = this.session.flash = this.session.flash || {};\r\n  if (type && msg) {\r\n    // util.format is available in Node.js 0.6+\r\n    if (arguments.length > 2 && format) {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n      msg = format.apply(undefined, args);\r\n    } else if (isArray(msg)) {\r\n      msg.forEach(function(val){\r\n        (msgs[type] = msgs[type] || []).push(val);\r\n      });\r\n      return msgs[type].length;\r\n    }\r\n    return (msgs[type] = msgs[type] || []).push(msg);\r\n  } else if (type) {\r\n    var arr = msgs[type];\r\n    delete msgs[type];\r\n    return arr || [];\r\n  } else {\r\n    this.session.flash = {};\r\n    return msgs;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}