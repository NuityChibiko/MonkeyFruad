{"ast":null,"code":"// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\n\nvar path = require('../internals/path');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar toObject = require('../internals/to-object');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar getAsyncIteratorMethod = require('../internals/get-async-iterator-method');\n\nvar AsyncIterator = path.AsyncIterator;\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg) {\n  return anObject(this.next.call(this.iterator, arg));\n}, true);\n$({\n  target: 'AsyncIterator',\n  stat: true\n}, {\n  from: function from(O) {\n    var object = toObject(O);\n    var usingIterator = getAsyncIteratorMethod(object);\n    var iterator;\n\n    if (usingIterator != null) {\n      iterator = aFunction(usingIterator).call(object);\n      if (iterator instanceof AsyncIterator) return iterator;\n    } else {\n      iterator = object;\n    }\n\n    return new AsyncIteratorProxy({\n      iterator: iterator\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/cloudinary/node_modules/core-js/modules/esnext.async-iterator.from.js"],"names":["$","require","path","aFunction","anObject","toObject","createAsyncIteratorProxy","getAsyncIteratorMethod","AsyncIterator","AsyncIteratorProxy","arg","next","call","iterator","target","stat","from","O","object","usingIterator"],"mappings":"AAAA;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,mBAAD,CAAlB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,wBAAwB,GAAGL,OAAO,CAAC,0CAAD,CAAtC;;AACA,IAAIM,sBAAsB,GAAGN,OAAO,CAAC,wCAAD,CAApC;;AAEA,IAAIO,aAAa,GAAGN,IAAI,CAACM,aAAzB;AAEA,IAAIC,kBAAkB,GAAGH,wBAAwB,CAAC,UAAUI,GAAV,EAAe;AAC/D,SAAON,QAAQ,CAAC,KAAKO,IAAL,CAAUC,IAAV,CAAe,KAAKC,QAApB,EAA8BH,GAA9B,CAAD,CAAf;AACD,CAFgD,EAE9C,IAF8C,CAAjD;AAIAV,CAAC,CAAC;AAAEc,EAAAA,MAAM,EAAE,eAAV;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAAD,EAA0C;AACzCC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,CAAd,EAAiB;AACrB,QAAIC,MAAM,GAAGb,QAAQ,CAACY,CAAD,CAArB;AACA,QAAIE,aAAa,GAAGZ,sBAAsB,CAACW,MAAD,CAA1C;AACA,QAAIL,QAAJ;;AACA,QAAIM,aAAa,IAAI,IAArB,EAA2B;AACzBN,MAAAA,QAAQ,GAAGV,SAAS,CAACgB,aAAD,CAAT,CAAyBP,IAAzB,CAA8BM,MAA9B,CAAX;AACA,UAAIL,QAAQ,YAAYL,aAAxB,EAAuC,OAAOK,QAAP;AACxC,KAHD,MAGO;AACLA,MAAAA,QAAQ,GAAGK,MAAX;AACD;;AAAC,WAAO,IAAIT,kBAAJ,CAAuB;AAC9BI,MAAAA,QAAQ,EAAEA;AADoB,KAAvB,CAAP;AAGH;AAbwC,CAA1C,CAAD","sourcesContent":["// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar path = require('../internals/path');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\nvar getAsyncIteratorMethod = require('../internals/get-async-iterator-method');\n\nvar AsyncIterator = path.AsyncIterator;\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg) {\n  return anObject(this.next.call(this.iterator, arg));\n}, true);\n\n$({ target: 'AsyncIterator', stat: true }, {\n  from: function from(O) {\n    var object = toObject(O);\n    var usingIterator = getAsyncIteratorMethod(object);\n    var iterator;\n    if (usingIterator != null) {\n      iterator = aFunction(usingIterator).call(object);\n      if (iterator instanceof AsyncIterator) return iterator;\n    } else {\n      iterator = object;\n    } return new AsyncIteratorProxy({\n      iterator: iterator\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"script"}