{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar anObject = require('../internals/an-object');\n\nvar bind = require('../internals/function-bind-context');\n\nvar getMapIterator = require('../internals/get-map-iterator');\n\nvar iterate = require('../internals/iterate'); // `Map.prototype.findKey` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  findKey: function findKey(callbackfn\n  /* , thisArg */\n  ) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return iterate(iterator, function (key, value) {\n      if (boundFunction(value, key, map)) return iterate.stop(key);\n    }, undefined, true, true).result;\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.map.find-key.js"],"names":["$","require","IS_PURE","anObject","bind","getMapIterator","iterate","target","proto","real","forced","findKey","callbackfn","map","iterator","boundFunction","arguments","length","undefined","key","value","stop","result"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,oCAAD,CAAlB;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAER;AAAlD,CAAD,EAA8D;AAC7DS,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC;AAAW;AAA5B,IAA6C;AACpD,QAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIW,QAAQ,GAAGT,cAAc,CAACQ,GAAD,CAA7B;AACA,QAAIE,aAAa,GAAGX,IAAI,CAACQ,UAAD,EAAaI,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAnD,EAA8D,CAA9D,CAAxB;AACA,WAAOZ,OAAO,CAACQ,QAAD,EAAW,UAAUK,GAAV,EAAeC,KAAf,EAAsB;AAC7C,UAAIL,aAAa,CAACK,KAAD,EAAQD,GAAR,EAAaN,GAAb,CAAjB,EAAoC,OAAOP,OAAO,CAACe,IAAR,CAAaF,GAAb,CAAP;AACrC,KAFa,EAEXD,SAFW,EAEA,IAFA,EAEM,IAFN,CAAP,CAEmBI,MAF1B;AAGD;AAR4D,CAA9D,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar IS_PURE = require('../internals/is-pure');\r\nvar anObject = require('../internals/an-object');\r\nvar bind = require('../internals/function-bind-context');\r\nvar getMapIterator = require('../internals/get-map-iterator');\r\nvar iterate = require('../internals/iterate');\r\n\r\n// `Map.prototype.findKey` method\r\n// https://github.com/tc39/proposal-collection-methods\r\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\r\n  findKey: function findKey(callbackfn /* , thisArg */) {\r\n    var map = anObject(this);\r\n    var iterator = getMapIterator(map);\r\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\r\n    return iterate(iterator, function (key, value) {\r\n      if (boundFunction(value, key, map)) return iterate.stop(key);\r\n    }, undefined, true, true).result;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}