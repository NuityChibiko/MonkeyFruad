{"ast":null,"code":"'use strict';\n\nvar utils = require(\"../utils\");\n\nvar call_account_api = require('../api_client/call_account_api');\n\nvar pickOnlyExistingValues = utils.pickOnlyExistingValues;\n/**\r\n * @desc Lists sub-accounts.\r\n * @param [enabled] {boolean} - Whether to only return enabled sub-accounts (true) or disabled accounts (false).\r\n *                              Default: all accounts are returned (both enabled and disabled).\r\n * @param [ids] {number[]} - A list of up to 100 sub-account IDs. When provided, other parameters are ignored.\r\n * @param [prefix] {string} - Returns accounts where the name begins with the specified case-insensitive string.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\nfunction sub_accounts(enabled) {\n  var ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var prefix = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var callback = arguments[4];\n  var params = {\n    enabled,\n    ids,\n    prefix\n  };\n  var uri = ['sub_accounts'];\n  return call_account_api('GET', uri, params, callback, options);\n}\n/**\r\n * @desc Retrieves the details of the specified sub-account.\r\n * @param sub_account_id {string} - The ID of the sub-account.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction sub_account(sub_account_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['sub_accounts', sub_account_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\r\n * @desc Creates a new sub-account. Any users that have access to all sub-accounts will also automatically have access\r\n *       to the new sub-account.\r\n * @param name {string} The display name as shown in the management console.\r\n * @param cloud_name {string} A case-insensitive cloud name comprised of alphanumeric and underscore characters.\r\n *                            Generates an error if the specified cloud name is not unique across all Cloudinary\r\n *                            accounts. Note: Once created, the name can only be changed for accounts with fewer than\r\n *                            1000 assets.\r\n * @param custom_attributes {object} Any custom attributes you want to associate with the sub-account, as a map/hash of\r\n *                                   key/value pairs.\r\n * @param enabled {boolean} Whether the sub-account is enabled. Default: true\r\n * @param base_account {string} The ID of another sub-account, from which to copy all of the following settings:\r\n *                              Size limits, Timed limits, and Flags.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param callback\r\n */\n\n\nfunction create_sub_account(name, cloud_name, custom_attributes, enabled, base_account) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var callback = arguments[6];\n  var params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled,\n    base_sub_account_id: base_account\n  };\n  options.content_type = \"json\";\n  var uri = ['sub_accounts'];\n  return call_account_api('POST', uri, params, callback, options);\n}\n/**\r\n * @desc Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.\r\n * @param sub_account_id {string} - The ID of the sub-account to delete.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction delete_sub_account(sub_account_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['sub_accounts', sub_account_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\r\n * @desc Updates the specified details of the sub-account.\r\n * @param sub_account_id {string} - The ID of the sub-account.\r\n * @param [name] {string} - The display name as shown in the management console.\r\n * @param [cloud_name] {string} - A new cloud name for the account.\r\n *                                Notes:\r\n *                                  - Can only be changed for accounts with fewer than 1000 assets.\r\n *                                  - generates an error if the cloud name is not unique across all Cloudinary accounts.\r\n * @param [custom_attributes] {object} - Any custom attributes you want to associate with the sub-account, as a map/hash\r\n *                                       of key/value pairs.\r\n * @param [enabled] {boolean} - Whether the sub-account is enabled.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction update_sub_account(sub_account_id, name, cloud_name, custom_attributes, enabled) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var callback = arguments[6];\n  var params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled\n  };\n  options.content_type = \"json\";\n  var uri = ['sub_accounts', sub_account_id];\n  return call_account_api('PUT', uri, params, callback, options);\n}\n/**\r\n * @desc Returns the user with the specified ID.\r\n * @param user_id {string} - The ID of the user.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction user(user_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['users', user_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\r\n * @desc Lists users in the account.\r\n * @param [pending] {boolean} - Limit results to pending users (true), users that are not pending (false), or all users (undefined, the default)\r\n * @param [user_ids] {string[]} - A list of up to 100 user IDs. When provided, other parameters are ignored.\r\n * @param [prefix] {string} - Returns users where the name or email address begins with the specified case-insensitive\r\n *                            string.\r\n * @param [sub_account_id[ {string} - Only returns users who have access to the specified account.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction users(pending, user_ids, prefix, sub_account_id) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var callback = arguments[5];\n  var uri = ['users'];\n  var params = {\n    ids: user_ids,\n    pending,\n    prefix,\n    sub_account_id\n  };\n  return call_account_api('GET', uri, pickOnlyExistingValues(params, \"ids\", \"pending\", \"prefix\", \"sub_account_id\"), callback, options);\n}\n/**\r\n * @desc Creates a new user in the account.\r\n * @param name {string} - The name of the user.\r\n * @param email {string} - A unique email address, which serves as the login name and notification address.\r\n * @param role {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\r\n *                                                             media_library_admin, media_library_user\r\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\r\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction create_user(name, email, role, sub_account_ids) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var callback = arguments[5];\n  var uri = ['users'];\n  var params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('POST', uri, params, callback, options);\n}\n/**\r\n * @desc Updates the details of the specified user.\r\n * @param user_id {string} - The ID of the user to update.\r\n * @param [name] {string} - The name of the user.\r\n * @param [email] {string} - A unique email address, which serves as the login name and notification address.\r\n * @param [role] {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\r\n *                                              media_library_admin, media_library_user\r\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\r\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction update_user(user_id, name, email, role, sub_account_ids) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var callback = arguments[6];\n  var uri = ['users', user_id];\n  var params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('PUT', uri, params, callback, options);\n}\n/**\r\n * @desc Deletes an existing user.\r\n * @param user_id {string} - The ID of the user to delete.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction delete_user(user_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\r\n * @desc Creates a new user group.\r\n * @param name {string} - The name for the user group.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction create_user_group(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups'];\n  options.content_type = 'json';\n  var params = {\n    name\n  };\n  return call_account_api('POST', uri, params, callback, options);\n}\n/**\r\n * @desc Updates the specified user group.\r\n * @param group_id {string} The ID of the user group to update.\r\n * @param name {string} - The name for the user group.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction update_user_group(group_id, name) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n  var uri = ['user_groups', group_id];\n  var params = {\n    name\n  };\n  return call_account_api('PUT', uri, params, callback, options);\n}\n/**\r\n * @desc Deletes the user group with the specified ID.\r\n * @param group_id {string} The ID of the user group to delete.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction delete_user_group(group_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups', group_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\r\n * @desc Adds a user to a group with the specified ID.\r\n * @param group_id {string} - The ID of the user group.\r\n * @param user_id {string} - The ID of the user.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction add_user_to_group(group_id, user_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n  var uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('POST', uri, {}, callback, options);\n}\n/**\r\n * @desc Removes a user from a group with the specified ID.\r\n * @param group_id {string} - The ID of the user group.\r\n * @param user_id {string} - The ID of the user.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction remove_user_from_group(group_id, user_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n  var uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\r\n * @desc Retrieves the details of the specified user group.\r\n * @param group_id {string} - The ID of the user group to retrieve.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction user_group(group_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups', group_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\r\n * @desc Lists user groups in the account.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction user_groups() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments[1];\n  var uri = ['user_groups'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\r\n * @desc Lists users in the specified user group.\r\n * @param group_id {string} - The ID of the user group.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\n\n\nfunction user_group_users(group_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups', group_id, 'users'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\nmodule.exports = {\n  sub_accounts,\n  create_sub_account,\n  delete_sub_account,\n  sub_account,\n  update_sub_account,\n  user,\n  users,\n  user_group,\n  user_groups,\n  user_group_users,\n  remove_user_from_group,\n  delete_user,\n  update_user_group,\n  update_user,\n  create_user,\n  create_user_group,\n  add_user_to_group,\n  delete_user_group\n};","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/cloudinary/lib-es5/provisioning/account.js"],"names":["utils","require","call_account_api","pickOnlyExistingValues","sub_accounts","enabled","ids","arguments","length","undefined","prefix","options","callback","params","uri","sub_account","sub_account_id","create_sub_account","name","cloud_name","custom_attributes","base_account","base_sub_account_id","content_type","delete_sub_account","update_sub_account","user","user_id","users","pending","user_ids","create_user","email","role","sub_account_ids","update_user","delete_user","create_user_group","update_user_group","group_id","delete_user_group","add_user_to_group","remove_user_from_group","user_group","user_groups","user_group_users","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar utils = require(\"../utils\");\r\nvar call_account_api = require('../api_client/call_account_api');\r\n\r\nvar pickOnlyExistingValues = utils.pickOnlyExistingValues;\r\n\r\n/**\r\n * @desc Lists sub-accounts.\r\n * @param [enabled] {boolean} - Whether to only return enabled sub-accounts (true) or disabled accounts (false).\r\n *                              Default: all accounts are returned (both enabled and disabled).\r\n * @param [ids] {number[]} - A list of up to 100 sub-account IDs. When provided, other parameters are ignored.\r\n * @param [prefix] {string} - Returns accounts where the name begins with the specified case-insensitive string.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\n\r\nfunction sub_accounts(enabled) {\r\n  var ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n  var prefix = arguments[2];\r\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n  var callback = arguments[4];\r\n\r\n  var params = {\r\n    enabled,\r\n    ids,\r\n    prefix\r\n  };\r\n\r\n  var uri = ['sub_accounts'];\r\n  return call_account_api('GET', uri, params, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Retrieves the details of the specified sub-account.\r\n * @param sub_account_id {string} - The ID of the sub-account.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction sub_account(sub_account_id) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['sub_accounts', sub_account_id];\r\n  return call_account_api('GET', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Creates a new sub-account. Any users that have access to all sub-accounts will also automatically have access\r\n *       to the new sub-account.\r\n * @param name {string} The display name as shown in the management console.\r\n * @param cloud_name {string} A case-insensitive cloud name comprised of alphanumeric and underscore characters.\r\n *                            Generates an error if the specified cloud name is not unique across all Cloudinary\r\n *                            accounts. Note: Once created, the name can only be changed for accounts with fewer than\r\n *                            1000 assets.\r\n * @param custom_attributes {object} Any custom attributes you want to associate with the sub-account, as a map/hash of\r\n *                                   key/value pairs.\r\n * @param enabled {boolean} Whether the sub-account is enabled. Default: true\r\n * @param base_account {string} The ID of another sub-account, from which to copy all of the following settings:\r\n *                              Size limits, Timed limits, and Flags.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param callback\r\n */\r\nfunction create_sub_account(name, cloud_name, custom_attributes, enabled, base_account) {\r\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\r\n  var callback = arguments[6];\r\n\r\n  var params = {\r\n    cloud_name: cloud_name,\r\n    name,\r\n    custom_attributes: custom_attributes,\r\n    enabled,\r\n    base_sub_account_id: base_account\r\n  };\r\n\r\n  options.content_type = \"json\";\r\n  var uri = ['sub_accounts'];\r\n  return call_account_api('POST', uri, params, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.\r\n * @param sub_account_id {string} - The ID of the sub-account to delete.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction delete_sub_account(sub_account_id) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['sub_accounts', sub_account_id];\r\n  return call_account_api('DELETE', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Updates the specified details of the sub-account.\r\n * @param sub_account_id {string} - The ID of the sub-account.\r\n * @param [name] {string} - The display name as shown in the management console.\r\n * @param [cloud_name] {string} - A new cloud name for the account.\r\n *                                Notes:\r\n *                                  - Can only be changed for accounts with fewer than 1000 assets.\r\n *                                  - generates an error if the cloud name is not unique across all Cloudinary accounts.\r\n * @param [custom_attributes] {object} - Any custom attributes you want to associate with the sub-account, as a map/hash\r\n *                                       of key/value pairs.\r\n * @param [enabled] {boolean} - Whether the sub-account is enabled.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction update_sub_account(sub_account_id, name, cloud_name, custom_attributes, enabled) {\r\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\r\n  var callback = arguments[6];\r\n\r\n  var params = {\r\n    cloud_name: cloud_name,\r\n    name,\r\n    custom_attributes: custom_attributes,\r\n    enabled\r\n  };\r\n\r\n  options.content_type = \"json\";\r\n  var uri = ['sub_accounts', sub_account_id];\r\n  return call_account_api('PUT', uri, params, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Returns the user with the specified ID.\r\n * @param user_id {string} - The ID of the user.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction user(user_id) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['users', user_id];\r\n  return call_account_api('GET', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Lists users in the account.\r\n * @param [pending] {boolean} - Limit results to pending users (true), users that are not pending (false), or all users (undefined, the default)\r\n * @param [user_ids] {string[]} - A list of up to 100 user IDs. When provided, other parameters are ignored.\r\n * @param [prefix] {string} - Returns users where the name or email address begins with the specified case-insensitive\r\n *                            string.\r\n * @param [sub_account_id[ {string} - Only returns users who have access to the specified account.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction users(pending, user_ids, prefix, sub_account_id) {\r\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\r\n  var callback = arguments[5];\r\n\r\n  var uri = ['users'];\r\n  var params = {\r\n    ids: user_ids,\r\n    pending,\r\n    prefix,\r\n    sub_account_id\r\n  };\r\n  return call_account_api('GET', uri, pickOnlyExistingValues(params, \"ids\", \"pending\", \"prefix\", \"sub_account_id\"), callback, options);\r\n}\r\n\r\n/**\r\n * @desc Creates a new user in the account.\r\n * @param name {string} - The name of the user.\r\n * @param email {string} - A unique email address, which serves as the login name and notification address.\r\n * @param role {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\r\n *                                                             media_library_admin, media_library_user\r\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\r\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction create_user(name, email, role, sub_account_ids) {\r\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\r\n  var callback = arguments[5];\r\n\r\n  var uri = ['users'];\r\n  var params = {\r\n    name,\r\n    email,\r\n    role,\r\n    sub_account_ids: sub_account_ids\r\n  };\r\n  options.content_type = 'json';\r\n  return call_account_api('POST', uri, params, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Updates the details of the specified user.\r\n * @param user_id {string} - The ID of the user to update.\r\n * @param [name] {string} - The name of the user.\r\n * @param [email] {string} - A unique email address, which serves as the login name and notification address.\r\n * @param [role] {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\r\n *                                              media_library_admin, media_library_user\r\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\r\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction update_user(user_id, name, email, role, sub_account_ids) {\r\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\r\n  var callback = arguments[6];\r\n\r\n  var uri = ['users', user_id];\r\n  var params = {\r\n    name,\r\n    email,\r\n    role,\r\n    sub_account_ids: sub_account_ids\r\n  };\r\n  options.content_type = 'json';\r\n  return call_account_api('PUT', uri, params, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Deletes an existing user.\r\n * @param user_id {string} - The ID of the user to delete.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction delete_user(user_id) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['users', user_id];\r\n  return call_account_api('DELETE', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Creates a new user group.\r\n * @param name {string} - The name for the user group.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction create_user_group(name) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['user_groups'];\r\n  options.content_type = 'json';\r\n  var params = {\r\n    name\r\n  };\r\n  return call_account_api('POST', uri, params, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Updates the specified user group.\r\n * @param group_id {string} The ID of the user group to update.\r\n * @param name {string} - The name for the user group.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction update_user_group(group_id, name) {\r\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  var callback = arguments[3];\r\n\r\n  var uri = ['user_groups', group_id];\r\n  var params = {\r\n    name\r\n  };\r\n  return call_account_api('PUT', uri, params, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Deletes the user group with the specified ID.\r\n * @param group_id {string} The ID of the user group to delete.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction delete_user_group(group_id) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['user_groups', group_id];\r\n  return call_account_api('DELETE', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Adds a user to a group with the specified ID.\r\n * @param group_id {string} - The ID of the user group.\r\n * @param user_id {string} - The ID of the user.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction add_user_to_group(group_id, user_id) {\r\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  var callback = arguments[3];\r\n\r\n  var uri = ['user_groups', group_id, 'users', user_id];\r\n  return call_account_api('POST', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Removes a user from a group with the specified ID.\r\n * @param group_id {string} - The ID of the user group.\r\n * @param user_id {string} - The ID of the user.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction remove_user_from_group(group_id, user_id) {\r\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  var callback = arguments[3];\r\n\r\n  var uri = ['user_groups', group_id, 'users', user_id];\r\n  return call_account_api('DELETE', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Retrieves the details of the specified user group.\r\n * @param group_id {string} - The ID of the user group to retrieve.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction user_group(group_id) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['user_groups', group_id];\r\n  return call_account_api('GET', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Lists user groups in the account.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction user_groups() {\r\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  var callback = arguments[1];\r\n\r\n  var uri = ['user_groups'];\r\n  return call_account_api('GET', uri, {}, callback, options);\r\n}\r\n\r\n/**\r\n * @desc Lists users in the specified user group.\r\n * @param group_id {string} - The ID of the user group.\r\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\r\n * @param [callback] {function}\r\n */\r\nfunction user_group_users(group_id) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var callback = arguments[2];\r\n\r\n  var uri = ['user_groups', group_id, 'users'];\r\n  return call_account_api('GET', uri, {}, callback, options);\r\n}\r\n\r\nmodule.exports = {\r\n  sub_accounts,\r\n  create_sub_account,\r\n  delete_sub_account,\r\n  sub_account,\r\n  update_sub_account,\r\n  user,\r\n  users,\r\n  user_group,\r\n  user_groups,\r\n  user_group_users,\r\n  remove_user_from_group,\r\n  delete_user,\r\n  update_user_group,\r\n  update_user,\r\n  create_user,\r\n  create_user_group,\r\n  add_user_to_group,\r\n  delete_user_group\r\n};"]},"metadata":{},"sourceType":"script"}