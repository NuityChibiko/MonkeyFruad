{"ast":null,"code":"var WritableStream = require('stream').Writable || require('readable-stream').Writable,\n    inherits = require('util').inherits;\n\nvar StreamSearch = require('streamsearch');\n\nvar PartStream = require('./PartStream'),\n    HeaderParser = require('./HeaderParser');\n\nvar DASH = 45,\n    B_ONEDASH = new Buffer('-'),\n    B_CRLF = new Buffer('\\r\\n'),\n    EMPTY_FN = function () {};\n\nfunction Dicer(cfg) {\n  if (!(this instanceof Dicer)) return new Dicer(cfg);\n  WritableStream.call(this, cfg);\n  if (!cfg || !cfg.headerFirst && typeof cfg.boundary !== 'string') throw new TypeError('Boundary required');\n  if (typeof cfg.boundary === 'string') this.setBoundary(cfg.boundary);else this._bparser = undefined;\n  this._headerFirst = cfg.headerFirst;\n  var self = this;\n  this._dashes = 0;\n  this._parts = 0;\n  this._finished = false;\n  this._realFinish = false;\n  this._isPreamble = true;\n  this._justMatched = false;\n  this._firstWrite = true;\n  this._inHeader = true;\n  this._part = undefined;\n  this._cb = undefined;\n  this._ignoreData = false;\n  this._partOpts = typeof cfg.partHwm === 'number' ? {\n    highWaterMark: cfg.partHwm\n  } : {};\n  this._pause = false;\n  this._hparser = new HeaderParser(cfg);\n\n  this._hparser.on('header', function (header) {\n    self._inHeader = false;\n\n    self._part.emit('header', header);\n  });\n}\n\ninherits(Dicer, WritableStream);\n\nDicer.prototype.emit = function (ev) {\n  if (ev === 'finish' && !this._realFinish) {\n    if (!this._finished) {\n      var self = this;\n      process.nextTick(function () {\n        self.emit('error', new Error('Unexpected end of multipart data'));\n\n        if (self._part && !self._ignoreData) {\n          var type = self._isPreamble ? 'Preamble' : 'Part';\n\n          self._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'));\n\n          self._part.push(null);\n\n          process.nextTick(function () {\n            self._realFinish = true;\n            self.emit('finish');\n            self._realFinish = false;\n          });\n          return;\n        }\n\n        self._realFinish = true;\n        self.emit('finish');\n        self._realFinish = false;\n      });\n    }\n  } else WritableStream.prototype.emit.apply(this, arguments);\n};\n\nDicer.prototype._write = function (data, encoding, cb) {\n  // ignore unexpected data (e.g. extra trailer data after finished)\n  if (!this._hparser && !this._bparser) return cb();\n\n  if (this._headerFirst && this._isPreamble) {\n    if (!this._part) {\n      this._part = new PartStream(this._partOpts);\n      if (this._events.preamble) this.emit('preamble', this._part);else this._ignore();\n    }\n\n    var r = this._hparser.push(data);\n\n    if (!this._inHeader && r !== undefined && r < data.length) data = data.slice(r);else return cb();\n  } // allows for \"easier\" testing\n\n\n  if (this._firstWrite) {\n    this._bparser.push(B_CRLF);\n\n    this._firstWrite = false;\n  }\n\n  this._bparser.push(data);\n\n  if (this._pause) this._cb = cb;else cb();\n};\n\nDicer.prototype.reset = function () {\n  this._part = undefined;\n  this._bparser = undefined;\n  this._hparser = undefined;\n};\n\nDicer.prototype.setBoundary = function (boundary) {\n  var self = this;\n  this._bparser = new StreamSearch('\\r\\n--' + boundary);\n\n  this._bparser.on('info', function (isMatch, data, start, end) {\n    self._oninfo(isMatch, data, start, end);\n  });\n};\n\nDicer.prototype._ignore = function () {\n  if (this._part && !this._ignoreData) {\n    this._ignoreData = true;\n\n    this._part.on('error', EMPTY_FN); // we must perform some kind of read on the stream even though we are\n    // ignoring the data, otherwise node's Readable stream will not emit 'end'\n    // after pushing null to the stream\n\n\n    this._part.resume();\n  }\n};\n\nDicer.prototype._oninfo = function (isMatch, data, start, end) {\n  var buf,\n      self = this,\n      i = 0,\n      r,\n      ev,\n      shouldWriteMore = true;\n\n  if (!this._part && this._justMatched && data) {\n    while (this._dashes < 2 && start + i < end) {\n      if (data[start + i] === DASH) {\n        ++i;\n        ++this._dashes;\n      } else {\n        if (this._dashes) buf = B_ONEDASH;\n        this._dashes = 0;\n        break;\n      }\n    }\n\n    if (this._dashes === 2) {\n      if (start + i < end && this._events.trailer) this.emit('trailer', data.slice(start + i, end));\n      this.reset();\n      this._finished = true; // no more parts will be added\n\n      if (self._parts === 0) {\n        self._realFinish = true;\n        self.emit('finish');\n        self._realFinish = false;\n      }\n    }\n\n    if (this._dashes) return;\n  }\n\n  if (this._justMatched) this._justMatched = false;\n\n  if (!this._part) {\n    this._part = new PartStream(this._partOpts);\n\n    this._part._read = function (n) {\n      self._unpause();\n    };\n\n    ev = this._isPreamble ? 'preamble' : 'part';\n    if (this._events[ev]) this.emit(ev, this._part);else this._ignore();\n    if (!this._isPreamble) this._inHeader = true;\n  }\n\n  if (data && start < end && !this._ignoreData) {\n    if (this._isPreamble || !this._inHeader) {\n      if (buf) shouldWriteMore = this._part.push(buf);\n      shouldWriteMore = this._part.push(data.slice(start, end));\n      if (!shouldWriteMore) this._pause = true;\n    } else if (!this._isPreamble && this._inHeader) {\n      if (buf) this._hparser.push(buf);\n      r = this._hparser.push(data.slice(start, end));\n      if (!this._inHeader && r !== undefined && r < end) this._oninfo(false, data, start + r, end);\n    }\n  }\n\n  if (isMatch) {\n    this._hparser.reset();\n\n    if (this._isPreamble) this._isPreamble = false;else {\n      ++this._parts;\n\n      this._part.on('end', function () {\n        if (--self._parts === 0) {\n          if (self._finished) {\n            self._realFinish = true;\n            self.emit('finish');\n            self._realFinish = false;\n          } else {\n            self._unpause();\n          }\n        }\n      });\n    }\n\n    this._part.push(null);\n\n    this._part = undefined;\n    this._ignoreData = false;\n    this._justMatched = true;\n    this._dashes = 0;\n  }\n};\n\nDicer.prototype._unpause = function () {\n  if (!this._pause) return;\n  this._pause = false;\n\n  if (this._cb) {\n    var cb = this._cb;\n    this._cb = undefined;\n    cb();\n  }\n};\n\nmodule.exports = Dicer;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/dicer/lib/Dicer.js"],"names":["WritableStream","require","Writable","inherits","StreamSearch","PartStream","HeaderParser","DASH","B_ONEDASH","Buffer","B_CRLF","EMPTY_FN","Dicer","cfg","call","headerFirst","boundary","TypeError","setBoundary","_bparser","undefined","_headerFirst","self","_dashes","_parts","_finished","_realFinish","_isPreamble","_justMatched","_firstWrite","_inHeader","_part","_cb","_ignoreData","_partOpts","partHwm","highWaterMark","_pause","_hparser","on","header","emit","prototype","ev","process","nextTick","Error","type","push","apply","arguments","_write","data","encoding","cb","_events","preamble","_ignore","r","length","slice","reset","isMatch","start","end","_oninfo","resume","buf","i","shouldWriteMore","trailer","_read","n","_unpause","module","exports"],"mappings":"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","sourcesContent":["var WritableStream = require('stream').Writable\r\n                     || require('readable-stream').Writable,\r\n    inherits = require('util').inherits;\r\n\r\nvar StreamSearch = require('streamsearch');\r\n\r\nvar PartStream = require('./PartStream'),\r\n    HeaderParser = require('./HeaderParser');\r\n\r\nvar DASH = 45,\r\n    B_ONEDASH = new Buffer('-'),\r\n    B_CRLF = new Buffer('\\r\\n'),\r\n    EMPTY_FN = function() {};\r\n\r\nfunction Dicer(cfg) {\r\n  if (!(this instanceof Dicer))\r\n    return new Dicer(cfg);\r\n  WritableStream.call(this, cfg);\r\n\r\n  if (!cfg || (!cfg.headerFirst && typeof cfg.boundary !== 'string'))\r\n    throw new TypeError('Boundary required');\r\n\r\n  if (typeof cfg.boundary === 'string')\r\n    this.setBoundary(cfg.boundary);\r\n  else\r\n    this._bparser = undefined;\r\n\r\n  this._headerFirst = cfg.headerFirst;\r\n\r\n  var self = this;\r\n\r\n  this._dashes = 0;\r\n  this._parts = 0;\r\n  this._finished = false;\r\n  this._realFinish = false;\r\n  this._isPreamble = true;\r\n  this._justMatched = false;\r\n  this._firstWrite = true;\r\n  this._inHeader = true;\r\n  this._part = undefined;\r\n  this._cb = undefined;\r\n  this._ignoreData = false;\r\n  this._partOpts = (typeof cfg.partHwm === 'number'\r\n                    ? { highWaterMark: cfg.partHwm }\r\n                    : {});\r\n  this._pause = false;\r\n\r\n  this._hparser = new HeaderParser(cfg);\r\n  this._hparser.on('header', function(header) {\r\n    self._inHeader = false;\r\n    self._part.emit('header', header);\r\n  });\r\n\r\n}\r\ninherits(Dicer, WritableStream);\r\n\r\nDicer.prototype.emit = function(ev) {\r\n  if (ev === 'finish' && !this._realFinish) {\r\n    if (!this._finished) {\r\n      var self = this;\r\n      process.nextTick(function() {\r\n        self.emit('error', new Error('Unexpected end of multipart data'));\r\n        if (self._part && !self._ignoreData) {\r\n          var type = (self._isPreamble ? 'Preamble' : 'Part');\r\n          self._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'));\r\n          self._part.push(null);\r\n          process.nextTick(function() {\r\n            self._realFinish = true;\r\n            self.emit('finish');\r\n            self._realFinish = false;\r\n          });\r\n          return;\r\n        }\r\n        self._realFinish = true;\r\n        self.emit('finish');\r\n        self._realFinish = false;\r\n      });\r\n    }\r\n  } else\r\n    WritableStream.prototype.emit.apply(this, arguments);\r\n};\r\n\r\nDicer.prototype._write = function(data, encoding, cb) {\r\n  // ignore unexpected data (e.g. extra trailer data after finished)\r\n  if (!this._hparser && !this._bparser)\r\n    return cb();\r\n\r\n  if (this._headerFirst && this._isPreamble) {\r\n    if (!this._part) {\r\n      this._part = new PartStream(this._partOpts);\r\n      if (this._events.preamble)\r\n        this.emit('preamble', this._part);\r\n      else\r\n        this._ignore();\r\n    }\r\n    var r = this._hparser.push(data);\r\n    if (!this._inHeader && r !== undefined && r < data.length)\r\n      data = data.slice(r);\r\n    else\r\n      return cb();\r\n  }\r\n\r\n  // allows for \"easier\" testing\r\n  if (this._firstWrite) {\r\n    this._bparser.push(B_CRLF);\r\n    this._firstWrite = false;\r\n  }\r\n\r\n  this._bparser.push(data);\r\n\r\n  if (this._pause)\r\n    this._cb = cb;\r\n  else\r\n    cb();\r\n};\r\n\r\nDicer.prototype.reset = function() {\r\n  this._part = undefined;\r\n  this._bparser = undefined;\r\n  this._hparser = undefined;\r\n};\r\n\r\nDicer.prototype.setBoundary = function(boundary) {\r\n  var self = this;\r\n  this._bparser = new StreamSearch('\\r\\n--' + boundary);\r\n  this._bparser.on('info', function(isMatch, data, start, end) {\r\n    self._oninfo(isMatch, data, start, end);\r\n  });\r\n};\r\n\r\nDicer.prototype._ignore = function() {\r\n  if (this._part && !this._ignoreData) {\r\n    this._ignoreData = true;\r\n    this._part.on('error', EMPTY_FN);\r\n    // we must perform some kind of read on the stream even though we are\r\n    // ignoring the data, otherwise node's Readable stream will not emit 'end'\r\n    // after pushing null to the stream\r\n    this._part.resume();\r\n  }\r\n};\r\n\r\nDicer.prototype._oninfo = function(isMatch, data, start, end) {\r\n  var buf, self = this, i = 0, r, ev, shouldWriteMore = true;\r\n\r\n  if (!this._part && this._justMatched && data) {\r\n    while (this._dashes < 2 && (start + i) < end) {\r\n      if (data[start + i] === DASH) {\r\n        ++i;\r\n        ++this._dashes;\r\n      } else {\r\n        if (this._dashes)\r\n          buf = B_ONEDASH;\r\n        this._dashes = 0;\r\n        break;\r\n      }\r\n    }\r\n    if (this._dashes === 2) {\r\n      if ((start + i) < end && this._events.trailer)\r\n        this.emit('trailer', data.slice(start + i, end));\r\n      this.reset();\r\n      this._finished = true;\r\n      // no more parts will be added\r\n      if (self._parts === 0) {\r\n        self._realFinish = true;\r\n        self.emit('finish');\r\n        self._realFinish = false;\r\n      }\r\n    }\r\n    if (this._dashes)\r\n      return;\r\n  }\r\n  if (this._justMatched)\r\n    this._justMatched = false;\r\n  if (!this._part) {\r\n    this._part = new PartStream(this._partOpts);\r\n    this._part._read = function(n) {\r\n      self._unpause();\r\n    };\r\n    ev = this._isPreamble ? 'preamble' : 'part';\r\n    if (this._events[ev])\r\n      this.emit(ev, this._part);\r\n    else\r\n      this._ignore();\r\n    if (!this._isPreamble)\r\n      this._inHeader = true;\r\n  }\r\n  if (data && start < end && !this._ignoreData) {\r\n    if (this._isPreamble || !this._inHeader) {\r\n      if (buf)\r\n        shouldWriteMore = this._part.push(buf);\r\n      shouldWriteMore = this._part.push(data.slice(start, end));\r\n      if (!shouldWriteMore)\r\n        this._pause = true;\r\n    } else if (!this._isPreamble && this._inHeader) {\r\n      if (buf)\r\n        this._hparser.push(buf);\r\n      r = this._hparser.push(data.slice(start, end));\r\n      if (!this._inHeader && r !== undefined && r < end)\r\n        this._oninfo(false, data, start + r, end);\r\n    }\r\n  }\r\n  if (isMatch) {\r\n    this._hparser.reset();\r\n    if (this._isPreamble)\r\n      this._isPreamble = false;\r\n    else {\r\n      ++this._parts;\r\n      this._part.on('end', function() {\r\n        if (--self._parts === 0) {\r\n          if (self._finished) {\r\n            self._realFinish = true;\r\n            self.emit('finish');\r\n            self._realFinish = false;\r\n          } else {\r\n            self._unpause();\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this._part.push(null);\r\n    this._part = undefined;\r\n    this._ignoreData = false;\r\n    this._justMatched = true;\r\n    this._dashes = 0;\r\n  }\r\n};\r\n\r\nDicer.prototype._unpause = function() {\r\n  if (!this._pause)\r\n    return;\r\n\r\n  this._pause = false;\r\n  if (this._cb) {\r\n    var cb = this._cb;\r\n    this._cb = undefined;\r\n    cb();\r\n  }\r\n};\r\n\r\nmodule.exports = Dicer;\r\n"]},"metadata":{},"sourceType":"script"}