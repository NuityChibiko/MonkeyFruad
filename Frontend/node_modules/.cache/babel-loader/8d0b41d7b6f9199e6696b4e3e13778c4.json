{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar anObject = require('../internals/an-object');\n\nvar toPositiveInteger = require('../internals/to-positive-integer');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\n  var state = this;\n  return new Promise(function (resolve, reject) {\n    var loop = function () {\n      try {\n        Promise.resolve(anObject(state.next.call(state.iterator, state.remaining ? undefined : arg))).then(function (step) {\n          try {\n            if (anObject(step).done) {\n              state.done = true;\n              resolve({\n                done: true,\n                value: undefined\n              });\n            } else if (state.remaining) {\n              state.remaining--;\n              loop();\n            } else resolve({\n              done: false,\n              value: step.value\n            });\n          } catch (err) {\n            reject(err);\n          }\n        }, reject);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    loop();\n  });\n});\n$({\n  target: 'AsyncIterator',\n  proto: true,\n  real: true\n}, {\n  drop: function drop(limit) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      remaining: toPositiveInteger(limit)\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/cloudinary/node_modules/core-js/modules/esnext.async-iterator.drop.js"],"names":["$","require","anObject","toPositiveInteger","createAsyncIteratorProxy","AsyncIteratorProxy","arg","Promise","state","resolve","reject","loop","next","call","iterator","remaining","undefined","then","step","done","value","err","error","target","proto","real","drop","limit"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,kCAAD,CAA/B;;AACA,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,0CAAD,CAAtC;;AAEA,IAAII,kBAAkB,GAAGD,wBAAwB,CAAC,UAAUE,GAAV,EAAeC,OAAf,EAAwB;AACxE,MAAIC,KAAK,GAAG,IAAZ;AAEA,SAAO,IAAID,OAAJ,CAAY,UAAUE,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,IAAI,GAAG,YAAY;AACrB,UAAI;AACFJ,QAAAA,OAAO,CAACE,OAAR,CACEP,QAAQ,CAACM,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgBL,KAAK,CAACM,QAAtB,EAAgCN,KAAK,CAACO,SAAN,GAAkBC,SAAlB,GAA8BV,GAA9D,CAAD,CADV,EAEEW,IAFF,CAEO,UAAUC,IAAV,EAAgB;AACrB,cAAI;AACF,gBAAIhB,QAAQ,CAACgB,IAAD,CAAR,CAAeC,IAAnB,EAAyB;AACvBX,cAAAA,KAAK,CAACW,IAAN,GAAa,IAAb;AACAV,cAAAA,OAAO,CAAC;AAAEU,gBAAAA,IAAI,EAAE,IAAR;AAAcC,gBAAAA,KAAK,EAAEJ;AAArB,eAAD,CAAP;AACD,aAHD,MAGO,IAAIR,KAAK,CAACO,SAAV,EAAqB;AAC1BP,cAAAA,KAAK,CAACO,SAAN;AACAJ,cAAAA,IAAI;AACL,aAHM,MAGAF,OAAO,CAAC;AAAEU,cAAAA,IAAI,EAAE,KAAR;AAAeC,cAAAA,KAAK,EAAEF,IAAI,CAACE;AAA3B,aAAD,CAAP;AACR,WARD,CAQE,OAAOC,GAAP,EAAY;AAAEX,YAAAA,MAAM,CAACW,GAAD,CAAN;AAAc;AAC/B,SAZD,EAYGX,MAZH;AAaD,OAdD,CAcE,OAAOY,KAAP,EAAc;AAAEZ,QAAAA,MAAM,CAACY,KAAD,CAAN;AAAgB;AACnC,KAhBD;;AAkBAX,IAAAA,IAAI;AACL,GApBM,CAAP;AAqBD,CAxBgD,CAAjD;AA0BAX,CAAC,CAAC;AAAEuB,EAAAA,MAAM,EAAE,eAAV;AAA2BC,EAAAA,KAAK,EAAE,IAAlC;AAAwCC,EAAAA,IAAI,EAAE;AAA9C,CAAD,EAAuD;AACtDC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACzB,WAAO,IAAItB,kBAAJ,CAAuB;AAC5BS,MAAAA,QAAQ,EAAEZ,QAAQ,CAAC,IAAD,CADU;AAE5Ba,MAAAA,SAAS,EAAEZ,iBAAiB,CAACwB,KAAD;AAFA,KAAvB,CAAP;AAID;AANqD,CAAvD,CAAD","sourcesContent":["'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar toPositiveInteger = require('../internals/to-positive-integer');\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\n  var state = this;\n\n  return new Promise(function (resolve, reject) {\n    var loop = function () {\n      try {\n        Promise.resolve(\n          anObject(state.next.call(state.iterator, state.remaining ? undefined : arg))\n        ).then(function (step) {\n          try {\n            if (anObject(step).done) {\n              state.done = true;\n              resolve({ done: true, value: undefined });\n            } else if (state.remaining) {\n              state.remaining--;\n              loop();\n            } else resolve({ done: false, value: step.value });\n          } catch (err) { reject(err); }\n        }, reject);\n      } catch (error) { reject(error); }\n    };\n\n    loop();\n  });\n});\n\n$({ target: 'AsyncIterator', proto: true, real: true }, {\n  drop: function drop(limit) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      remaining: toPositiveInteger(limit)\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"script"}