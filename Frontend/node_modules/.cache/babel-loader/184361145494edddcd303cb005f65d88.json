{"ast":null,"code":"// Copyright 2015 Joyent, Inc.\nvar Buffer = require('safer-buffer').Buffer;\n\nvar algInfo = {\n  'dsa': {\n    parts: ['p', 'q', 'g', 'y'],\n    sizePart: 'p'\n  },\n  'rsa': {\n    parts: ['e', 'n'],\n    sizePart: 'n'\n  },\n  'ecdsa': {\n    parts: ['curve', 'Q'],\n    sizePart: 'Q'\n  },\n  'ed25519': {\n    parts: ['A'],\n    sizePart: 'A'\n  }\n};\nalgInfo['curve25519'] = algInfo['ed25519'];\nvar algPrivInfo = {\n  'dsa': {\n    parts: ['p', 'q', 'g', 'y', 'x']\n  },\n  'rsa': {\n    parts: ['n', 'e', 'd', 'iqmp', 'p', 'q']\n  },\n  'ecdsa': {\n    parts: ['curve', 'Q', 'd']\n  },\n  'ed25519': {\n    parts: ['A', 'k']\n  }\n};\nalgPrivInfo['curve25519'] = algPrivInfo['ed25519'];\nvar hashAlgs = {\n  'md5': true,\n  'sha1': true,\n  'sha256': true,\n  'sha384': true,\n  'sha512': true\n};\n/*\r\n * Taken from\r\n * http://csrc.nist.gov/groups/ST/toolkit/documents/dss/NISTReCur.pdf\r\n */\n\nvar curves = {\n  'nistp256': {\n    size: 256,\n    pkcs8oid: '1.2.840.10045.3.1.7',\n    p: Buffer.from(('00' + 'ffffffff 00000001 00000000 00000000' + '00000000 ffffffff ffffffff ffffffff').replace(/ /g, ''), 'hex'),\n    a: Buffer.from(('00' + 'FFFFFFFF 00000001 00000000 00000000' + '00000000 FFFFFFFF FFFFFFFF FFFFFFFC').replace(/ /g, ''), 'hex'),\n    b: Buffer.from(('5ac635d8 aa3a93e7 b3ebbd55 769886bc' + '651d06b0 cc53b0f6 3bce3c3e 27d2604b').replace(/ /g, ''), 'hex'),\n    s: Buffer.from(('00' + 'c49d3608 86e70493 6a6678e1 139d26b7' + '819f7e90').replace(/ /g, ''), 'hex'),\n    n: Buffer.from(('00' + 'ffffffff 00000000 ffffffff ffffffff' + 'bce6faad a7179e84 f3b9cac2 fc632551').replace(/ /g, ''), 'hex'),\n    G: Buffer.from(('04' + '6b17d1f2 e12c4247 f8bce6e5 63a440f2' + '77037d81 2deb33a0 f4a13945 d898c296' + '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16' + '2bce3357 6b315ece cbb64068 37bf51f5').replace(/ /g, ''), 'hex')\n  },\n  'nistp384': {\n    size: 384,\n    pkcs8oid: '1.3.132.0.34',\n    p: Buffer.from(('00' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff fffffffe' + 'ffffffff 00000000 00000000 ffffffff').replace(/ /g, ''), 'hex'),\n    a: Buffer.from(('00' + 'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' + 'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE' + 'FFFFFFFF 00000000 00000000 FFFFFFFC').replace(/ /g, ''), 'hex'),\n    b: Buffer.from(('b3312fa7 e23ee7e4 988e056b e3f82d19' + '181d9c6e fe814112 0314088f 5013875a' + 'c656398d 8a2ed19d 2a85c8ed d3ec2aef').replace(/ /g, ''), 'hex'),\n    s: Buffer.from(('00' + 'a335926a a319a27a 1d00896a 6773a482' + '7acdac73').replace(/ /g, ''), 'hex'),\n    n: Buffer.from(('00' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff c7634d81 f4372ddf' + '581a0db2 48b0a77a ecec196a ccc52973').replace(/ /g, ''), 'hex'),\n    G: Buffer.from(('04' + 'aa87ca22 be8b0537 8eb1c71e f320ad74' + '6e1d3b62 8ba79b98 59f741e0 82542a38' + '5502f25d bf55296c 3a545e38 72760ab7' + '3617de4a 96262c6f 5d9e98bf 9292dc29' + 'f8f41dbd 289a147c e9da3113 b5f0b8c0' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f').replace(/ /g, ''), 'hex')\n  },\n  'nistp521': {\n    size: 521,\n    pkcs8oid: '1.3.132.0.35',\n    p: Buffer.from(('01ffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffff').replace(/ /g, ''), 'hex'),\n    a: Buffer.from(('01FF' + 'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' + 'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' + 'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' + 'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFC').replace(/ /g, ''), 'hex'),\n    b: Buffer.from(('51' + '953eb961 8e1c9a1f 929a21a0 b68540ee' + 'a2da725b 99b315f3 b8b48991 8ef109e1' + '56193951 ec7e937b 1652c0bd 3bb1bf07' + '3573df88 3d2c34f1 ef451fd4 6b503f00').replace(/ /g, ''), 'hex'),\n    s: Buffer.from(('00' + 'd09e8800 291cb853 96cc6717 393284aa' + 'a0da64ba').replace(/ /g, ''), 'hex'),\n    n: Buffer.from(('01ff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff fffffffa' + '51868783 bf2f966b 7fcc0148 f709a5d0' + '3bb5c9b8 899c47ae bb6fb71e 91386409').replace(/ /g, ''), 'hex'),\n    G: Buffer.from(('04' + '00c6 858e06b7 0404e9cd 9e3ecb66 2395b442' + '9c648139 053fb521 f828af60 6b4d3dba' + 'a14b5e77 efe75928 fe1dc127 a2ffa8de' + '3348b3c1 856a429b f97e7e31 c2e5bd66' + '0118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9' + '98f54449 579b4468 17afbd17 273e662c' + '97ee7299 5ef42640 c550b901 3fad0761' + '353c7086 a272c240 88be9476 9fd16650').replace(/ /g, ''), 'hex')\n  }\n};\nmodule.exports = {\n  info: algInfo,\n  privInfo: algPrivInfo,\n  hashAlgs: hashAlgs,\n  curves: curves\n};","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/sshpk/lib/algs.js"],"names":["Buffer","require","algInfo","parts","sizePart","algPrivInfo","hashAlgs","curves","size","pkcs8oid","p","from","replace","a","b","s","n","G","module","exports","info","privInfo"],"mappings":"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","sourcesContent":["// Copyright 2015 Joyent, Inc.\r\n\r\nvar Buffer = require('safer-buffer').Buffer;\r\n\r\nvar algInfo = {\r\n\t'dsa': {\r\n\t\tparts: ['p', 'q', 'g', 'y'],\r\n\t\tsizePart: 'p'\r\n\t},\r\n\t'rsa': {\r\n\t\tparts: ['e', 'n'],\r\n\t\tsizePart: 'n'\r\n\t},\r\n\t'ecdsa': {\r\n\t\tparts: ['curve', 'Q'],\r\n\t\tsizePart: 'Q'\r\n\t},\r\n\t'ed25519': {\r\n\t\tparts: ['A'],\r\n\t\tsizePart: 'A'\r\n\t}\r\n};\r\nalgInfo['curve25519'] = algInfo['ed25519'];\r\n\r\nvar algPrivInfo = {\r\n\t'dsa': {\r\n\t\tparts: ['p', 'q', 'g', 'y', 'x']\r\n\t},\r\n\t'rsa': {\r\n\t\tparts: ['n', 'e', 'd', 'iqmp', 'p', 'q']\r\n\t},\r\n\t'ecdsa': {\r\n\t\tparts: ['curve', 'Q', 'd']\r\n\t},\r\n\t'ed25519': {\r\n\t\tparts: ['A', 'k']\r\n\t}\r\n};\r\nalgPrivInfo['curve25519'] = algPrivInfo['ed25519'];\r\n\r\nvar hashAlgs = {\r\n\t'md5': true,\r\n\t'sha1': true,\r\n\t'sha256': true,\r\n\t'sha384': true,\r\n\t'sha512': true\r\n};\r\n\r\n/*\r\n * Taken from\r\n * http://csrc.nist.gov/groups/ST/toolkit/documents/dss/NISTReCur.pdf\r\n */\r\nvar curves = {\r\n\t'nistp256': {\r\n\t\tsize: 256,\r\n\t\tpkcs8oid: '1.2.840.10045.3.1.7',\r\n\t\tp: Buffer.from(('00' +\r\n\t\t    'ffffffff 00000001 00000000 00000000' +\r\n\t\t    '00000000 ffffffff ffffffff ffffffff').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\ta: Buffer.from(('00' +\r\n\t\t    'FFFFFFFF 00000001 00000000 00000000' +\r\n\t\t    '00000000 FFFFFFFF FFFFFFFF FFFFFFFC').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tb: Buffer.from((\r\n\t\t    '5ac635d8 aa3a93e7 b3ebbd55 769886bc' +\r\n\t\t    '651d06b0 cc53b0f6 3bce3c3e 27d2604b').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\ts: Buffer.from(('00' +\r\n\t\t    'c49d3608 86e70493 6a6678e1 139d26b7' +\r\n\t\t    '819f7e90').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tn: Buffer.from(('00' +\r\n\t\t    'ffffffff 00000000 ffffffff ffffffff' +\r\n\t\t    'bce6faad a7179e84 f3b9cac2 fc632551').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tG: Buffer.from(('04' +\r\n\t\t    '6b17d1f2 e12c4247 f8bce6e5 63a440f2' +\r\n\t\t    '77037d81 2deb33a0 f4a13945 d898c296' +\r\n\t\t    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16' +\r\n\t\t    '2bce3357 6b315ece cbb64068 37bf51f5').\r\n\t\t    replace(/ /g, ''), 'hex')\r\n\t},\r\n\t'nistp384': {\r\n\t\tsize: 384,\r\n\t\tpkcs8oid: '1.3.132.0.34',\r\n\t\tp: Buffer.from(('00' +\r\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\r\n\t\t    'ffffffff ffffffff ffffffff fffffffe' +\r\n\t\t    'ffffffff 00000000 00000000 ffffffff').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\ta: Buffer.from(('00' +\r\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\r\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE' +\r\n\t\t    'FFFFFFFF 00000000 00000000 FFFFFFFC').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tb: Buffer.from((\r\n\t\t    'b3312fa7 e23ee7e4 988e056b e3f82d19' +\r\n\t\t    '181d9c6e fe814112 0314088f 5013875a' +\r\n\t\t    'c656398d 8a2ed19d 2a85c8ed d3ec2aef').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\ts: Buffer.from(('00' +\r\n\t\t    'a335926a a319a27a 1d00896a 6773a482' +\r\n\t\t    '7acdac73').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tn: Buffer.from(('00' +\r\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\r\n\t\t    'ffffffff ffffffff c7634d81 f4372ddf' +\r\n\t\t    '581a0db2 48b0a77a ecec196a ccc52973').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tG: Buffer.from(('04' +\r\n\t\t    'aa87ca22 be8b0537 8eb1c71e f320ad74' +\r\n\t\t    '6e1d3b62 8ba79b98 59f741e0 82542a38' +\r\n\t\t    '5502f25d bf55296c 3a545e38 72760ab7' +\r\n\t\t    '3617de4a 96262c6f 5d9e98bf 9292dc29' +\r\n\t\t    'f8f41dbd 289a147c e9da3113 b5f0b8c0' +\r\n\t\t    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f').\r\n\t\t    replace(/ /g, ''), 'hex')\r\n\t},\r\n\t'nistp521': {\r\n\t\tsize: 521,\r\n\t\tpkcs8oid: '1.3.132.0.35',\r\n\t\tp: Buffer.from((\r\n\t\t    '01ffffff ffffffff ffffffff ffffffff' +\r\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\r\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\r\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\r\n\t\t    'ffff').replace(/ /g, ''), 'hex'),\r\n\t\ta: Buffer.from(('01FF' +\r\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\r\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\r\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\r\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFC').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tb: Buffer.from(('51' +\r\n\t\t    '953eb961 8e1c9a1f 929a21a0 b68540ee' +\r\n\t\t    'a2da725b 99b315f3 b8b48991 8ef109e1' +\r\n\t\t    '56193951 ec7e937b 1652c0bd 3bb1bf07' +\r\n\t\t    '3573df88 3d2c34f1 ef451fd4 6b503f00').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\ts: Buffer.from(('00' +\r\n\t\t    'd09e8800 291cb853 96cc6717 393284aa' +\r\n\t\t    'a0da64ba').replace(/ /g, ''), 'hex'),\r\n\t\tn: Buffer.from(('01ff' +\r\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\r\n\t\t    'ffffffff ffffffff ffffffff fffffffa' +\r\n\t\t    '51868783 bf2f966b 7fcc0148 f709a5d0' +\r\n\t\t    '3bb5c9b8 899c47ae bb6fb71e 91386409').\r\n\t\t    replace(/ /g, ''), 'hex'),\r\n\t\tG: Buffer.from(('04' +\r\n\t\t    '00c6 858e06b7 0404e9cd 9e3ecb66 2395b442' +\r\n\t\t         '9c648139 053fb521 f828af60 6b4d3dba' +\r\n\t\t         'a14b5e77 efe75928 fe1dc127 a2ffa8de' +\r\n\t\t         '3348b3c1 856a429b f97e7e31 c2e5bd66' +\r\n\t\t    '0118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9' +\r\n\t\t         '98f54449 579b4468 17afbd17 273e662c' +\r\n\t\t         '97ee7299 5ef42640 c550b901 3fad0761' +\r\n\t\t         '353c7086 a272c240 88be9476 9fd16650').\r\n\t\t    replace(/ /g, ''), 'hex')\r\n\t}\r\n};\r\n\r\nmodule.exports = {\r\n\tinfo: algInfo,\r\n\tprivInfo: algPrivInfo,\r\n\thashAlgs: hashAlgs,\r\n\tcurves: curves\r\n};\r\n"]},"metadata":{},"sourceType":"script"}