{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeCrypto = void 0;\n\nconst crypto = require(\"crypto\");\n\nclass NodeCrypto {\n  async sha256DigestBase64(str) {\n    return crypto.createHash('sha256').update(str).digest('base64');\n  }\n\n  randomBytesBase64(count) {\n    return crypto.randomBytes(count).toString('base64');\n  }\n\n  async verify(pubkey, data, signature) {\n    const verifier = crypto.createVerify('sha256');\n    verifier.update(data);\n    verifier.end();\n    return verifier.verify(pubkey, signature, 'base64');\n  }\n\n  async sign(privateKey, data) {\n    const signer = crypto.createSign('RSA-SHA256');\n    signer.update(data);\n    signer.end();\n    return signer.sign(privateKey, 'base64');\n  }\n\n  decodeBase64StringUtf8(base64) {\n    return Buffer.from(base64, 'base64').toString('utf-8');\n  }\n\n  encodeBase64StringUtf8(text) {\n    return Buffer.from(text, 'utf-8').toString('base64');\n  }\n\n}\n\nexports.NodeCrypto = NodeCrypto;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/google-auth-library/build/src/crypto/node/crypto.js"],"names":["Object","defineProperty","exports","value","NodeCrypto","crypto","require","sha256DigestBase64","str","createHash","update","digest","randomBytesBase64","count","randomBytes","toString","verify","pubkey","data","signature","verifier","createVerify","end","sign","privateKey","signer","createSign","decodeBase64StringUtf8","base64","Buffer","from","encodeBase64StringUtf8","text"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMF,UAAN,CAAiB;AACb,QAAMG,kBAAN,CAAyBC,GAAzB,EAA8B;AAC1B,WAAOH,MAAM,CAACI,UAAP,CAAkB,QAAlB,EAA4BC,MAA5B,CAAmCF,GAAnC,EAAwCG,MAAxC,CAA+C,QAA/C,CAAP;AACH;;AACDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrB,WAAOR,MAAM,CAACS,WAAP,CAAmBD,KAAnB,EAA0BE,QAA1B,CAAmC,QAAnC,CAAP;AACH;;AACD,QAAMC,MAAN,CAAaC,MAAb,EAAqBC,IAArB,EAA2BC,SAA3B,EAAsC;AAClC,UAAMC,QAAQ,GAAGf,MAAM,CAACgB,YAAP,CAAoB,QAApB,CAAjB;AACAD,IAAAA,QAAQ,CAACV,MAAT,CAAgBQ,IAAhB;AACAE,IAAAA,QAAQ,CAACE,GAAT;AACA,WAAOF,QAAQ,CAACJ,MAAT,CAAgBC,MAAhB,EAAwBE,SAAxB,EAAmC,QAAnC,CAAP;AACH;;AACD,QAAMI,IAAN,CAAWC,UAAX,EAAuBN,IAAvB,EAA6B;AACzB,UAAMO,MAAM,GAAGpB,MAAM,CAACqB,UAAP,CAAkB,YAAlB,CAAf;AACAD,IAAAA,MAAM,CAACf,MAAP,CAAcQ,IAAd;AACAO,IAAAA,MAAM,CAACH,GAAP;AACA,WAAOG,MAAM,CAACF,IAAP,CAAYC,UAAZ,EAAwB,QAAxB,CAAP;AACH;;AACDG,EAAAA,sBAAsB,CAACC,MAAD,EAAS;AAC3B,WAAOC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoB,QAApB,EAA8Bb,QAA9B,CAAuC,OAAvC,CAAP;AACH;;AACDgB,EAAAA,sBAAsB,CAACC,IAAD,EAAO;AACzB,WAAOH,MAAM,CAACC,IAAP,CAAYE,IAAZ,EAAkB,OAAlB,EAA2BjB,QAA3B,CAAoC,QAApC,CAAP;AACH;;AAxBY;;AA0BjBb,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\r\n// Copyright 2019 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeCrypto = void 0;\r\nconst crypto = require(\"crypto\");\r\nclass NodeCrypto {\r\n    async sha256DigestBase64(str) {\r\n        return crypto.createHash('sha256').update(str).digest('base64');\r\n    }\r\n    randomBytesBase64(count) {\r\n        return crypto.randomBytes(count).toString('base64');\r\n    }\r\n    async verify(pubkey, data, signature) {\r\n        const verifier = crypto.createVerify('sha256');\r\n        verifier.update(data);\r\n        verifier.end();\r\n        return verifier.verify(pubkey, signature, 'base64');\r\n    }\r\n    async sign(privateKey, data) {\r\n        const signer = crypto.createSign('RSA-SHA256');\r\n        signer.update(data);\r\n        signer.end();\r\n        return signer.sign(privateKey, 'base64');\r\n    }\r\n    decodeBase64StringUtf8(base64) {\r\n        return Buffer.from(base64, 'base64').toString('utf-8');\r\n    }\r\n    encodeBase64StringUtf8(text) {\r\n        return Buffer.from(text, 'utf-8').toString('base64');\r\n    }\r\n}\r\nexports.NodeCrypto = NodeCrypto;\r\n//# sourceMappingURL=crypto.js.map"]},"metadata":{},"sourceType":"script"}