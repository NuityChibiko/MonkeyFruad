{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\n\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar IteratorProxy = createIteratorProxy(function (arg) {\n  var iterator = this.iterator;\n  var filterer = this.filterer;\n  var next = this.next;\n  var result, done, value;\n\n  while (true) {\n    result = anObject(next.call(iterator, arg));\n    done = this.done = !!result.done;\n    if (done) return;\n    value = result.value;\n    if (callWithSafeIterationClosing(iterator, filterer, value)) return value;\n  }\n});\n$({\n  target: 'Iterator',\n  proto: true,\n  real: true\n}, {\n  filter: function filter(filterer) {\n    return new IteratorProxy({\n      iterator: anObject(this),\n      filterer: aFunction(filterer)\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/cloudinary/node_modules/core-js/modules/esnext.iterator.filter.js"],"names":["$","require","aFunction","anObject","createIteratorProxy","callWithSafeIterationClosing","IteratorProxy","arg","iterator","filterer","next","result","done","value","call","target","proto","real","filter"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,oCAAD,CAAjC;;AACA,IAAII,4BAA4B,GAAGJ,OAAO,CAAC,+CAAD,CAA1C;;AAEA,IAAIK,aAAa,GAAGF,mBAAmB,CAAC,UAAUG,GAAV,EAAe;AACrD,MAAIC,QAAQ,GAAG,KAAKA,QAApB;AACA,MAAIC,QAAQ,GAAG,KAAKA,QAApB;AACA,MAAIC,IAAI,GAAG,KAAKA,IAAhB;AACA,MAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,KAAlB;;AACA,SAAO,IAAP,EAAa;AACXF,IAAAA,MAAM,GAAGR,QAAQ,CAACO,IAAI,CAACI,IAAL,CAAUN,QAAV,EAAoBD,GAApB,CAAD,CAAjB;AACAK,IAAAA,IAAI,GAAG,KAAKA,IAAL,GAAY,CAAC,CAACD,MAAM,CAACC,IAA5B;AACA,QAAIA,IAAJ,EAAU;AACVC,IAAAA,KAAK,GAAGF,MAAM,CAACE,KAAf;AACA,QAAIR,4BAA4B,CAACG,QAAD,EAAWC,QAAX,EAAqBI,KAArB,CAAhC,EAA6D,OAAOA,KAAP;AAC9D;AACF,CAZsC,CAAvC;AAcAb,CAAC,CAAC;AAAEe,EAAAA,MAAM,EAAE,UAAV;AAAsBC,EAAAA,KAAK,EAAE,IAA7B;AAAmCC,EAAAA,IAAI,EAAE;AAAzC,CAAD,EAAkD;AACjDC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBT,QAAhB,EAA0B;AAChC,WAAO,IAAIH,aAAJ,CAAkB;AACvBE,MAAAA,QAAQ,EAAEL,QAAQ,CAAC,IAAD,CADK;AAEvBM,MAAAA,QAAQ,EAAEP,SAAS,CAACO,QAAD;AAFI,KAAlB,CAAP;AAID;AANgD,CAAlD,CAAD","sourcesContent":["'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar IteratorProxy = createIteratorProxy(function (arg) {\n  var iterator = this.iterator;\n  var filterer = this.filterer;\n  var next = this.next;\n  var result, done, value;\n  while (true) {\n    result = anObject(next.call(iterator, arg));\n    done = this.done = !!result.done;\n    if (done) return;\n    value = result.value;\n    if (callWithSafeIterationClosing(iterator, filterer, value)) return value;\n  }\n});\n\n$({ target: 'Iterator', proto: true, real: true }, {\n  filter: function filter(filterer) {\n    return new IteratorProxy({\n      iterator: anObject(this),\n      filterer: aFunction(filterer)\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"script"}