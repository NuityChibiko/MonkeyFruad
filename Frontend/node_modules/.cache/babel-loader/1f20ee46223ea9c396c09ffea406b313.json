{"ast":null,"code":"module.exports = function (obj) {\n  var onData,\n      onEnd,\n      events = []; // buffer data\n\n  obj.on('data', onData = function (data, encoding) {\n    events.push(['data', data, encoding]);\n  }); // buffer end\n\n  obj.on('end', onEnd = function (data, encoding) {\n    events.push(['end', data, encoding]);\n  });\n  return {\n    end: function () {\n      obj.removeListener('data', onData);\n      obj.removeListener('end', onEnd);\n    },\n    resume: function () {\n      this.end();\n\n      for (var i = 0, len = events.length; i < len; ++i) {\n        obj.emit.apply(obj, events[i]);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/pause/index.js"],"names":["module","exports","obj","onData","onEnd","events","on","data","encoding","push","end","removeListener","resume","i","len","length","emit","apply"],"mappings":"AACAA,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAa;AAC5B,MAAIC,MAAJ;AAAA,MACIC,KADJ;AAAA,MAEIC,MAAM,GAAG,EAFb,CAD4B,CAK5B;;AACAH,EAAAA,GAAG,CAACI,EAAJ,CAAO,MAAP,EAAeH,MAAM,GAAG,UAASI,IAAT,EAAeC,QAAf,EAAwB;AAC9CH,IAAAA,MAAM,CAACI,IAAP,CAAY,CAAC,MAAD,EAASF,IAAT,EAAeC,QAAf,CAAZ;AACD,GAFD,EAN4B,CAU5B;;AACAN,EAAAA,GAAG,CAACI,EAAJ,CAAO,KAAP,EAAcF,KAAK,GAAG,UAASG,IAAT,EAAeC,QAAf,EAAwB;AAC5CH,IAAAA,MAAM,CAACI,IAAP,CAAY,CAAC,KAAD,EAAQF,IAAR,EAAcC,QAAd,CAAZ;AACD,GAFD;AAIA,SAAO;AACLE,IAAAA,GAAG,EAAE,YAAU;AACbR,MAAAA,GAAG,CAACS,cAAJ,CAAmB,MAAnB,EAA2BR,MAA3B;AACAD,MAAAA,GAAG,CAACS,cAAJ,CAAmB,KAAnB,EAA0BP,KAA1B;AACD,KAJI;AAKLQ,IAAAA,MAAM,EAAE,YAAU;AAChB,WAAKF,GAAL;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGT,MAAM,CAACU,MAA7B,EAAqCF,CAAC,GAAGC,GAAzC,EAA8C,EAAED,CAAhD,EAAmD;AACjDX,QAAAA,GAAG,CAACc,IAAJ,CAASC,KAAT,CAAef,GAAf,EAAoBG,MAAM,CAACQ,CAAD,CAA1B;AACD;AACF;AAVI,GAAP;AAYD,CA3BD","sourcesContent":["\r\nmodule.exports = function(obj){\r\n  var onData\r\n    , onEnd\r\n    , events = [];\r\n\r\n  // buffer data\r\n  obj.on('data', onData = function(data, encoding){\r\n    events.push(['data', data, encoding]);\r\n  });\r\n\r\n  // buffer end\r\n  obj.on('end', onEnd = function(data, encoding){\r\n    events.push(['end', data, encoding]);\r\n  });\r\n\r\n  return {\r\n    end: function(){\r\n      obj.removeListener('data', onData);\r\n      obj.removeListener('end', onEnd);\r\n    },\r\n    resume: function(){\r\n      this.end();\r\n      for (var i = 0, len = events.length; i < len; ++i) {\r\n        obj.emit.apply(obj, events[i]);\r\n      }\r\n    }\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}