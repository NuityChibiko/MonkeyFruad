{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar longRunningDescriptor_1 = require(\"./longRunningCalls/longRunningDescriptor\");\n\nObject.defineProperty(exports, \"LongrunningDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return longRunningDescriptor_1.LongRunningDescriptor;\n  }\n});\n\nvar pageDescriptor_1 = require(\"./paginationCalls/pageDescriptor\");\n\nObject.defineProperty(exports, \"PageDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return pageDescriptor_1.PageDescriptor;\n  }\n});\n\nvar streamDescriptor_1 = require(\"./streamingCalls/streamDescriptor\");\n\nObject.defineProperty(exports, \"StreamDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return streamDescriptor_1.StreamDescriptor;\n  }\n});\n\nvar bundleDescriptor_1 = require(\"./bundlingCalls/bundleDescriptor\");\n\nObject.defineProperty(exports, \"BundleDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return bundleDescriptor_1.BundleDescriptor;\n  }\n});","map":{"version":3,"sources":["../../src/descriptor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAeH,IAAA,uBAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;;AAAQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,uBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,uBAAA,CAAA,qBAAA;AAAqB;AAArB,CAAA;;AACR,IAAA,gBAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AAAQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,gBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,gBAAA,CAAA,cAAA;AAAc;AAAd,CAAA;;AACR,IAAA,kBAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AAAQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,kBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,kBAAA,CAAA,gBAAA;AAAgB;AAAhB,CAAA;;AACR,IAAA,kBAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AAAQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,kBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,kBAAA,CAAA,gBAAA;AAAgB;AAAhB,CAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar longRunningDescriptor_1 = require(\"./longRunningCalls/longRunningDescriptor\");\r\nObject.defineProperty(exports, \"LongrunningDescriptor\", { enumerable: true, get: function () { return longRunningDescriptor_1.LongRunningDescriptor; } });\r\nvar pageDescriptor_1 = require(\"./paginationCalls/pageDescriptor\");\r\nObject.defineProperty(exports, \"PageDescriptor\", { enumerable: true, get: function () { return pageDescriptor_1.PageDescriptor; } });\r\nvar streamDescriptor_1 = require(\"./streamingCalls/streamDescriptor\");\r\nObject.defineProperty(exports, \"StreamDescriptor\", { enumerable: true, get: function () { return streamDescriptor_1.StreamDescriptor; } });\r\nvar bundleDescriptor_1 = require(\"./bundlingCalls/bundleDescriptor\");\r\nObject.defineProperty(exports, \"BundleDescriptor\", { enumerable: true, get: function () { return bundleDescriptor_1.BundleDescriptor; } });\r\n//# sourceMappingURL=descriptor.js.map"]},"metadata":{},"sourceType":"script"}