{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\n  var state = this;\n  var mapper = state.mapper;\n  return Promise.resolve(anObject(state.next.call(state.iterator, arg))).then(function (step) {\n    if (anObject(step).done) {\n      state.done = true;\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    return Promise.resolve(mapper(step.value)).then(function (value) {\n      return {\n        done: false,\n        value: value\n      };\n    });\n  });\n});\n$({\n  target: 'AsyncIterator',\n  proto: true,\n  real: true\n}, {\n  map: function map(mapper) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      mapper: aFunction(mapper)\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.async-iterator.map.js"],"names":["$","require","aFunction","anObject","createAsyncIteratorProxy","AsyncIteratorProxy","arg","Promise","state","mapper","resolve","next","call","iterator","then","step","done","value","undefined","target","proto","real","map"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,0CAAD,CAAtC;;AAEA,IAAII,kBAAkB,GAAGD,wBAAwB,CAAC,UAAUE,GAAV,EAAeC,OAAf,EAAwB;AACxE,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAEA,SAAOF,OAAO,CAACG,OAAR,CAAgBP,QAAQ,CAACK,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBJ,KAAK,CAACK,QAAtB,EAAgCP,GAAhC,CAAD,CAAxB,EAAgEQ,IAAhE,CAAqE,UAAUC,IAAV,EAAgB;AAC1F,QAAIZ,QAAQ,CAACY,IAAD,CAAR,CAAeC,IAAnB,EAAyB;AACvBR,MAAAA,KAAK,CAACQ,IAAN,GAAa,IAAb;AACA,aAAO;AAAEA,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAEC;AAArB,OAAP;AACD;;AACD,WAAOX,OAAO,CAACG,OAAR,CAAgBD,MAAM,CAACM,IAAI,CAACE,KAAN,CAAtB,EAAoCH,IAApC,CAAyC,UAAUG,KAAV,EAAiB;AAC/D,aAAO;AAAED,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAEA;AAAtB,OAAP;AACD,KAFM,CAAP;AAGD,GARM,CAAP;AASD,CAbgD,CAAjD;AAeAjB,CAAC,CAAC;AAAEmB,EAAAA,MAAM,EAAE,eAAV;AAA2BC,EAAAA,KAAK,EAAE,IAAlC;AAAwCC,EAAAA,IAAI,EAAE;AAA9C,CAAD,EAAuD;AACtDC,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAab,MAAb,EAAqB;AACxB,WAAO,IAAIJ,kBAAJ,CAAuB;AAC5BQ,MAAAA,QAAQ,EAAEV,QAAQ,CAAC,IAAD,CADU;AAE5BM,MAAAA,MAAM,EAAEP,SAAS,CAACO,MAAD;AAFW,KAAvB,CAAP;AAID;AANqD,CAAvD,CAAD","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar $ = require('../internals/export');\r\nvar aFunction = require('../internals/a-function');\r\nvar anObject = require('../internals/an-object');\r\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\r\n\r\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\r\n  var state = this;\r\n  var mapper = state.mapper;\r\n\r\n  return Promise.resolve(anObject(state.next.call(state.iterator, arg))).then(function (step) {\r\n    if (anObject(step).done) {\r\n      state.done = true;\r\n      return { done: true, value: undefined };\r\n    }\r\n    return Promise.resolve(mapper(step.value)).then(function (value) {\r\n      return { done: false, value: value };\r\n    });\r\n  });\r\n});\r\n\r\n$({ target: 'AsyncIterator', proto: true, real: true }, {\r\n  map: function map(mapper) {\r\n    return new AsyncIteratorProxy({\r\n      iterator: anObject(this),\r\n      mapper: aFunction(mapper)\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}