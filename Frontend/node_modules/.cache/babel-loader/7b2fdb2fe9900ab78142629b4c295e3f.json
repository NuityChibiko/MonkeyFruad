{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar anObject = require('../internals/an-object');\n\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\n  var state = this;\n  var iterator = state.iterator;\n  return Promise.resolve(anObject(state.next.call(iterator, arg))).then(function (step) {\n    if (anObject(step).done) {\n      state.done = true;\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    return {\n      done: false,\n      value: [state.index++, step.value]\n    };\n  });\n});\n$({\n  target: 'AsyncIterator',\n  proto: true,\n  real: true\n}, {\n  asIndexedPairs: function asIndexedPairs() {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      index: 0\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.async-iterator.as-indexed-pairs.js"],"names":["$","require","anObject","createAsyncIteratorProxy","AsyncIteratorProxy","arg","Promise","state","iterator","resolve","next","call","then","step","done","value","undefined","index","target","proto","real","asIndexedPairs"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,wBAAwB,GAAGF,OAAO,CAAC,0CAAD,CAAtC;;AAEA,IAAIG,kBAAkB,GAAGD,wBAAwB,CAAC,UAAUE,GAAV,EAAeC,OAAf,EAAwB;AACxE,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAEA,SAAOF,OAAO,CAACG,OAAR,CAAgBP,QAAQ,CAACK,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBH,QAAhB,EAA0BH,GAA1B,CAAD,CAAxB,EAA0DO,IAA1D,CAA+D,UAAUC,IAAV,EAAgB;AACpF,QAAIX,QAAQ,CAACW,IAAD,CAAR,CAAeC,IAAnB,EAAyB;AACvBP,MAAAA,KAAK,CAACO,IAAN,GAAa,IAAb;AACA,aAAO;AAAEA,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAEC;AAArB,OAAP;AACD;;AACD,WAAO;AAAEF,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAE,CAACR,KAAK,CAACU,KAAN,EAAD,EAAgBJ,IAAI,CAACE,KAArB;AAAtB,KAAP;AACD,GANM,CAAP;AAOD,CAXgD,CAAjD;AAaAf,CAAC,CAAC;AAAEkB,EAAAA,MAAM,EAAE,eAAV;AAA2BC,EAAAA,KAAK,EAAE,IAAlC;AAAwCC,EAAAA,IAAI,EAAE;AAA9C,CAAD,EAAuD;AACtDC,EAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,WAAO,IAAIjB,kBAAJ,CAAuB;AAC5BI,MAAAA,QAAQ,EAAEN,QAAQ,CAAC,IAAD,CADU;AAE5Be,MAAAA,KAAK,EAAE;AAFqB,KAAvB,CAAP;AAID;AANqD,CAAvD,CAAD","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar $ = require('../internals/export');\r\nvar anObject = require('../internals/an-object');\r\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\r\n\r\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg, Promise) {\r\n  var state = this;\r\n  var iterator = state.iterator;\r\n\r\n  return Promise.resolve(anObject(state.next.call(iterator, arg))).then(function (step) {\r\n    if (anObject(step).done) {\r\n      state.done = true;\r\n      return { done: true, value: undefined };\r\n    }\r\n    return { done: false, value: [state.index++, step.value] };\r\n  });\r\n});\r\n\r\n$({ target: 'AsyncIterator', proto: true, real: true }, {\r\n  asIndexedPairs: function asIndexedPairs() {\r\n    return new AsyncIteratorProxy({\r\n      iterator: anObject(this),\r\n      index: 0\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}