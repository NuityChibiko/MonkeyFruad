{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEAN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * The most commonly used EAN standard is\r\n * the thirteen-digit EAN-13, while the\r\n * less commonly used 8-digit EAN-8 barcode was\r\n * introduced for use on small packages.\r\n * EAN consists of:\r\n * GS1 prefix, manufacturer code, product code and check digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\r\n */\n\n/**\r\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13\r\n * and Regular Expression for valid EANs (EAN-8, EAN-13),\r\n * with exact numberic matching of 8 or 13 digits [0-9]\r\n */\n\n\nvar LENGTH_EAN_8 = 8;\nvar validEanRegex = /^(\\d{8}|\\d{13})$/;\n/**\r\n * Get position weight given:\r\n * EAN length and digit index/position\r\n *\r\n * @param {number} length\r\n * @param {number} index\r\n * @return {number}\r\n */\n\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8) {\n    return index % 2 === 0 ? 3 : 1;\n  }\n\n  return index % 2 === 0 ? 1 : 3;\n}\n/**\r\n * Calculate EAN Check Digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\r\n *\r\n * @param {string} ean\r\n * @return {number}\r\n */\n\n\nfunction calculateCheckDigit(ean) {\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n  }).reduce(function (acc, partialSum) {\n    return acc + partialSum;\n  }, 0);\n  var remainder = 10 - checksum % 10;\n  return remainder < 10 ? remainder : 0;\n}\n/**\r\n * Check if string is valid EAN:\r\n * Matches EAN-8/EAN-13 regex\r\n * Has valid check digit.\r\n *\r\n * @param {string} str\r\n * @return {boolean}\r\n */\n\n\nfunction isEAN(str) {\n  (0, _assertString.default)(str);\n  var actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/validator/lib/isEAN.js"],"names":["Object","defineProperty","exports","value","default","isEAN","_assertString","_interopRequireDefault","require","obj","__esModule","LENGTH_EAN_8","validEanRegex","getPositionWeightThroughLengthAndIndex","length","index","calculateCheckDigit","ean","checksum","slice","split","map","char","Number","reduce","acc","partialSum","remainder","str","actualCheckDigit","test","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,YAAY,GAAG,CAAnB;AACA,IAAIC,aAAa,GAAG,kBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,sCAAT,CAAgDC,MAAhD,EAAwDC,KAAxD,EAA+D;AAC7D,MAAID,MAAM,KAAKH,YAAf,EAA6B;AAC3B,WAAOI,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,CAAlB,GAAsB,CAA7B;AACD;;AAED,SAAOA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,CAAlB,GAAsB,CAA7B;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,MAAIC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,EAAiBC,KAAjB,CAAuB,EAAvB,EAA2BC,GAA3B,CAA+B,UAAUC,IAAV,EAAgBP,KAAhB,EAAuB;AACnE,WAAOQ,MAAM,CAACD,IAAD,CAAN,GAAeT,sCAAsC,CAACI,GAAG,CAACH,MAAL,EAAaC,KAAb,CAA5D;AACD,GAFc,EAEZS,MAFY,CAEL,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACnC,WAAOD,GAAG,GAAGC,UAAb;AACD,GAJc,EAIZ,CAJY,CAAf;AAKA,MAAIC,SAAS,GAAG,KAAKT,QAAQ,GAAG,EAAhC;AACA,SAAOS,SAAS,GAAG,EAAZ,GAAiBA,SAAjB,GAA6B,CAApC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAStB,KAAT,CAAeuB,GAAf,EAAoB;AAClB,GAAC,GAAGtB,aAAa,CAACF,OAAlB,EAA2BwB,GAA3B;AACA,MAAIC,gBAAgB,GAAGN,MAAM,CAACK,GAAG,CAACT,KAAJ,CAAU,CAAC,CAAX,CAAD,CAA7B;AACA,SAAOP,aAAa,CAACkB,IAAd,CAAmBF,GAAnB,KAA2BC,gBAAgB,KAAKb,mBAAmB,CAACY,GAAD,CAA1E;AACD;;AAEDG,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACA2B,MAAM,CAAC7B,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isEAN;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * The most commonly used EAN standard is\r\n * the thirteen-digit EAN-13, while the\r\n * less commonly used 8-digit EAN-8 barcode was\r\n * introduced for use on small packages.\r\n * EAN consists of:\r\n * GS1 prefix, manufacturer code, product code and check digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\r\n */\r\n\r\n/**\r\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13\r\n * and Regular Expression for valid EANs (EAN-8, EAN-13),\r\n * with exact numberic matching of 8 or 13 digits [0-9]\r\n */\r\nvar LENGTH_EAN_8 = 8;\r\nvar validEanRegex = /^(\\d{8}|\\d{13})$/;\r\n/**\r\n * Get position weight given:\r\n * EAN length and digit index/position\r\n *\r\n * @param {number} length\r\n * @param {number} index\r\n * @return {number}\r\n */\r\n\r\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\r\n  if (length === LENGTH_EAN_8) {\r\n    return index % 2 === 0 ? 3 : 1;\r\n  }\r\n\r\n  return index % 2 === 0 ? 1 : 3;\r\n}\r\n/**\r\n * Calculate EAN Check Digit\r\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\r\n *\r\n * @param {string} ean\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction calculateCheckDigit(ean) {\r\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\r\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\r\n  }).reduce(function (acc, partialSum) {\r\n    return acc + partialSum;\r\n  }, 0);\r\n  var remainder = 10 - checksum % 10;\r\n  return remainder < 10 ? remainder : 0;\r\n}\r\n/**\r\n * Check if string is valid EAN:\r\n * Matches EAN-8/EAN-13 regex\r\n * Has valid check digit.\r\n *\r\n * @param {string} str\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isEAN(str) {\r\n  (0, _assertString.default)(str);\r\n  var actualCheckDigit = Number(str.slice(-1));\r\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}