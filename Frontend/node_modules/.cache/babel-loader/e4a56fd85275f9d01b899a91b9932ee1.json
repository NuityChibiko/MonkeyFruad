{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongRunningDescriptor = void 0;\n\nconst longRunningApiCaller_1 = require(\"./longRunningApiCaller\");\n/**\r\n * A descriptor for long-running operations.\r\n */\n\n\nclass LongRunningDescriptor {\n  constructor(operationsClient, responseDecoder, metadataDecoder) {\n    this.operationsClient = operationsClient;\n    this.responseDecoder = responseDecoder;\n    this.metadataDecoder = metadataDecoder;\n  }\n\n  getApiCaller() {\n    return new longRunningApiCaller_1.LongrunningApiCaller(this);\n  }\n\n}\n\nexports.LongRunningDescriptor = LongRunningDescriptor;","map":{"version":3,"sources":["../../../src/longRunningCalls/longRunningDescriptor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;AAKH,MAAA,sBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;AASA;;AAEG;;;AACH,MAAa,qBAAb,CAAkC;AAKhC,EAAA,WAAA,CACE,gBADF,EAEE,eAFF,EAGE,eAHF,EAG6B;AAE3B,SAAK,gBAAL,GAAwB,gBAAxB;AACA,SAAK,eAAL,GAAuB,eAAvB;AACA,SAAK,eAAL,GAAuB,eAAvB;AACD;;AAED,EAAA,YAAY,GAAA;AACV,WAAO,IAAI,sBAAA,CAAA,oBAAJ,CAAyB,IAAzB,CAAP;AACD;;AAjB+B;;AAAlC,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LongRunningDescriptor = void 0;\r\nconst longRunningApiCaller_1 = require(\"./longRunningApiCaller\");\r\n/**\r\n * A descriptor for long-running operations.\r\n */\r\nclass LongRunningDescriptor {\r\n    constructor(operationsClient, responseDecoder, metadataDecoder) {\r\n        this.operationsClient = operationsClient;\r\n        this.responseDecoder = responseDecoder;\r\n        this.metadataDecoder = metadataDecoder;\r\n    }\r\n    getApiCaller() {\r\n        return new longRunningApiCaller_1.LongrunningApiCaller(this);\r\n    }\r\n}\r\nexports.LongRunningDescriptor = LongRunningDescriptor;\r\n//# sourceMappingURL=longRunningDescriptor.js.map"]},"metadata":{},"sourceType":"script"}