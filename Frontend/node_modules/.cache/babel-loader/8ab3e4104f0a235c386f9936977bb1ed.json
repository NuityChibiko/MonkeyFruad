{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar anObject = require('../internals/an-object');\n\nvar toPositiveInteger = require('../internals/to-positive-integer');\n\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\n\nvar IteratorProxy = createIteratorProxy(function (arg) {\n  if (!this.remaining--) {\n    this.done = true;\n    return;\n  }\n\n  var result = anObject(this.next.call(this.iterator, arg));\n  var done = this.done = !!result.done;\n  if (!done) return result.value;\n});\n$({\n  target: 'Iterator',\n  proto: true,\n  real: true\n}, {\n  take: function take(limit) {\n    return new IteratorProxy({\n      iterator: anObject(this),\n      remaining: toPositiveInteger(limit)\n    });\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.iterator.take.js"],"names":["$","require","anObject","toPositiveInteger","createIteratorProxy","IteratorProxy","arg","remaining","done","result","next","call","iterator","value","target","proto","real","take","limit"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,kCAAD,CAA/B;;AACA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,oCAAD,CAAjC;;AAEA,IAAII,aAAa,GAAGD,mBAAmB,CAAC,UAAUE,GAAV,EAAe;AACrD,MAAI,CAAC,KAAKC,SAAL,EAAL,EAAuB;AACrB,SAAKC,IAAL,GAAY,IAAZ;AACA;AACD;;AACD,MAAIC,MAAM,GAAGP,QAAQ,CAAC,KAAKQ,IAAL,CAAUC,IAAV,CAAe,KAAKC,QAApB,EAA8BN,GAA9B,CAAD,CAArB;AACA,MAAIE,IAAI,GAAG,KAAKA,IAAL,GAAY,CAAC,CAACC,MAAM,CAACD,IAAhC;AACA,MAAI,CAACA,IAAL,EAAW,OAAOC,MAAM,CAACI,KAAd;AACZ,CARsC,CAAvC;AAUAb,CAAC,CAAC;AAAEc,EAAAA,MAAM,EAAE,UAAV;AAAsBC,EAAAA,KAAK,EAAE,IAA7B;AAAmCC,EAAAA,IAAI,EAAE;AAAzC,CAAD,EAAkD;AACjDC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACzB,WAAO,IAAIb,aAAJ,CAAkB;AACvBO,MAAAA,QAAQ,EAAEV,QAAQ,CAAC,IAAD,CADK;AAEvBK,MAAAA,SAAS,EAAEJ,iBAAiB,CAACe,KAAD;AAFL,KAAlB,CAAP;AAID;AANgD,CAAlD,CAAD","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar $ = require('../internals/export');\r\nvar anObject = require('../internals/an-object');\r\nvar toPositiveInteger = require('../internals/to-positive-integer');\r\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\r\n\r\nvar IteratorProxy = createIteratorProxy(function (arg) {\r\n  if (!this.remaining--) {\r\n    this.done = true;\r\n    return;\r\n  }\r\n  var result = anObject(this.next.call(this.iterator, arg));\r\n  var done = this.done = !!result.done;\r\n  if (!done) return result.value;\r\n});\r\n\r\n$({ target: 'Iterator', proto: true, real: true }, {\r\n  take: function take(limit) {\r\n    return new IteratorProxy({\r\n      iterator: anObject(this),\r\n      remaining: toPositiveInteger(limit)\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}