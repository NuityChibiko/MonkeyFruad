{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar flattenIntoArray = require('../internals/flatten-into-array');\n\nvar toObject = require('../internals/to-object');\n\nvar toLength = require('../internals/to-length');\n\nvar toInteger = require('../internals/to-integer');\n\nvar arraySpeciesCreate = require('../internals/array-species-create'); // `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\n\n\n$({\n  target: 'Array',\n  proto: true\n}, {\n  flat: function flat()\n  /* depthArg = 1 */\n  {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/es.array.flat.js"],"names":["$","require","flattenIntoArray","toObject","toLength","toInteger","arraySpeciesCreate","target","proto","flat","depthArg","arguments","length","undefined","O","sourceLen","A"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,iCAAD,CAA9B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,mCAAD,CAAhC,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAD,EAAmC;AAClCC,EAAAA,IAAI,EAAE,SAASA,IAAT;AAAc;AAAoB;AACtC,QAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmBD,SAAS,CAAC,CAAD,CAA5B,GAAkCE,SAAjD;AACA,QAAIC,CAAC,GAAGX,QAAQ,CAAC,IAAD,CAAhB;AACA,QAAIY,SAAS,GAAGX,QAAQ,CAACU,CAAC,CAACF,MAAH,CAAxB;AACA,QAAII,CAAC,GAAGV,kBAAkB,CAACQ,CAAD,EAAI,CAAJ,CAA1B;AACAE,IAAAA,CAAC,CAACJ,MAAF,GAAWV,gBAAgB,CAACc,CAAD,EAAIF,CAAJ,EAAOA,CAAP,EAAUC,SAAV,EAAqB,CAArB,EAAwBL,QAAQ,KAAKG,SAAb,GAAyB,CAAzB,GAA6BR,SAAS,CAACK,QAAD,CAA9D,CAA3B;AACA,WAAOM,CAAP;AACD;AARiC,CAAnC,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar flattenIntoArray = require('../internals/flatten-into-array');\r\nvar toObject = require('../internals/to-object');\r\nvar toLength = require('../internals/to-length');\r\nvar toInteger = require('../internals/to-integer');\r\nvar arraySpeciesCreate = require('../internals/array-species-create');\r\n\r\n// `Array.prototype.flat` method\r\n// https://github.com/tc39/proposal-flatMap\r\n$({ target: 'Array', proto: true }, {\r\n  flat: function flat(/* depthArg = 1 */) {\r\n    var depthArg = arguments.length ? arguments[0] : undefined;\r\n    var O = toObject(this);\r\n    var sourceLen = toLength(O.length);\r\n    var A = arraySpeciesCreate(O, 0);\r\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\r\n    return A;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}