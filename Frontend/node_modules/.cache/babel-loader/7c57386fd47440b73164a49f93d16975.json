{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\commentitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./commentitem.css\";\nimport usercontext from \"../context/usercontext\";\n\nconst Commentitem = ({\n  commentid,\n  postid\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [allcomment, Setallcomment] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n    // console.log( getcomment.data.item);\n    // Setallcomment( getcomment.data.item);\n\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      textcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      Settextcomment(data.textcomment);\n      const getcomment = await Axios.get(`http://localhost:7000/post/comment/${commentid}`);\n      Setallcomment(getcomment.data.item);\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className=\"row mypostcommentrow\">\n    //   <div className=\"column1 mypostcommentrow1\">\n    //     <div class=\"vl\"></div>\n    //     <div className=\"mypost-comment-img1\">\n    //       <img className=\"img-circle1\" src=\"/img/profile.png\" />\n    //       <div className=\"mypost-comment-name1\">\n    //        {data ? \"@\" : null}{data.username}\n    //         <span className=\"mypost-comment-time1\"> {data.datetime} </span>\n    //       </div>\n    //       <br />\n    //      {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\n    //         <div className=\"mypostcomment1\">{textcomment}</div> \n    //       </div>  \n    //      } \n    //     </div> \n    //    </div> \n    //    {user && data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\n    //     <div className=\"menu-containermypostcommentsetting\">\n    //       <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\n    //         <img \n    //           className=\"mypostcommentimg-setting\"\n    //           src=\"/img/setting.png\"\n    //           alt=\"avatar\"\n    //         ></img> \n    //    </div>\n    //       <div\n    //         className={`mypostcommentmenusetting ${\n    //           isActive ? \"active\" : \"inactive\"\n    //         }`}\n    //       >\n    //         <ul className=\"ul-mypostcommentmenusetting\">\n    //        <li className=\"li-mypostcommentmenusetting\">\n    //             <a className=\"a-mypostcommentmenusetting\"\n    //             onClick={() => edit(data.commentid)}\n    //             >\n    //                 แก้ไขคอมเมนต์\n    //             </a>\n    //           </li> \n    //           <li className=\"li-mypostcommentmenusetting\">\n    //             <a\n    //               className=\"a-mypostcommentmenusetting\"\n    //               onClick={() => deleted(data.commentid)}\n    //             >\n    //               {\" \"}\n    //               ลบคอมเมนต์{\" \"}\n    //             </a>\n    //           </li> \n    //         </ul>\n    //       </div>\n    //     </div>\n    //   </div> : null }\n    // </div> \n    _jsxDEV(\"div\", {\n      children: [allcomment ? allcomment.map(doc => {}) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mypostcommentrow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column1 mypostcommentrow1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"vl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-img1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle1\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypost-comment-name1\",\n              children: [data ? \"@\" : null, data.username, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mypost-comment-time1\",\n                children: [\" \", data.datetime, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 9\n            }, this), checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: textcomment,\n                onChange: e => {\n                  Settextcomment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 30\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleedit(data.commentid),\n                children: \"\\u0E15\\u0E01\\u0E25\\u0E07\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 116\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypost-comment-comments1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mypostcomment1\",\n                children: textcomment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 189\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }, this), user && data.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column2 mypostcommentrow2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-containermypostcommentsetting\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: onClick,\n              className: \"mypostcommentbuttonsetting\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"mypostcommentimg-setting\",\n                src: \"/img/setting.png\",\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"ul-mypostcommentmenusetting\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"li-mypostcommentmenusetting\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"a-mypostcommentmenusetting\",\n                    onClick: () => edit(data.commentid),\n                    children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"li-mypostcommentmenusetting\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"a-mypostcommentmenusetting\",\n                    onClick: () => deleted(data.commentid),\n                    children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Commentitem, \"U3QEicRmeHQwWpZP8hNk/DkEpeU=\");\n\n_c = Commentitem;\nexport default Commentitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentitem\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/commentitem.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Commentitem","commentid","postid","isActive","setIsActive","onClick","user","setUser","allcomment","Setallcomment","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","deleted","postdelete","post","window","location","reload","edit","handleedit","editcomment","gg","data","getcomment","get","err","console","log","map","doc","username","datetime","e","target","value","userid","uid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./commentitem.css\";\r\nimport usercontext from \"../context/usercontext\";\r\n\r\n\r\n\r\nconst Commentitem = ({ commentid , postid}) => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  let { user, setUser } = useContext(usercontext);\r\n  const [allcomment , Setallcomment] = useState()\r\n  const [item , Setitem] = useState([])\r\n  const [checkedittext , Setcheckedittext] = useState(false)\r\n  // const [edittextcomment , Setedittextcomment] = useState()\r\n  const [textcomment , Settextcomment] = useState()\r\n\r\n \r\n\r\n  const deleted = async (commentid) => {\r\n      const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // console.log( getcomment.data.item);\r\n      // Setallcomment( getcomment.data.item);\r\n      window.location.reload(false);\r\n  };\r\n  const edit = async () =>{\r\n    Setcheckedittext(true)\r\n  }\r\n  const handleedit = async (commentid) =>{\r\n  const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n  \r\n  }\r\n\r\n  const gg = async () => {\r\n    try {\r\n      Settextcomment(data.textcomment)\r\n      \r\n      const getcomment = await Axios.get(`http://localhost:7000/post/comment/${commentid}`)\r\n      Setallcomment(getcomment.data.item)\r\n   \r\n      \r\n    } catch (err) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, []);\r\n  \r\n  return (\r\n    // <div className=\"row mypostcommentrow\">\r\n    //   <div className=\"column1 mypostcommentrow1\">\r\n    //     <div class=\"vl\"></div>\r\n    //     <div className=\"mypost-comment-img1\">\r\n    //       <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n    //       <div className=\"mypost-comment-name1\">\r\n    //        {data ? \"@\" : null}{data.username}\r\n    //         <span className=\"mypost-comment-time1\"> {data.datetime} </span>\r\n    //       </div>\r\n    //       <br />\r\n    //      {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n    //         <div className=\"mypostcomment1\">{textcomment}</div> \r\n    //       </div>  \r\n    //      } \r\n    //     </div> \r\n    //    </div> \r\n    //    {user && data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n    //     <div className=\"menu-containermypostcommentsetting\">\r\n    //       <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n    //         <img \r\n    //           className=\"mypostcommentimg-setting\"\r\n    //           src=\"/img/setting.png\"\r\n    //           alt=\"avatar\"\r\n    //         ></img> \r\n    //    </div>\r\n\r\n    //       <div\r\n    //         className={`mypostcommentmenusetting ${\r\n    //           isActive ? \"active\" : \"inactive\"\r\n    //         }`}\r\n    //       >\r\n    //         <ul className=\"ul-mypostcommentmenusetting\">\r\n    //        <li className=\"li-mypostcommentmenusetting\">\r\n    //             <a className=\"a-mypostcommentmenusetting\"\r\n    //             onClick={() => edit(data.commentid)}\r\n    //             >\r\n    //                 แก้ไขคอมเมนต์\r\n    //             </a>\r\n    //           </li> \r\n    //           <li className=\"li-mypostcommentmenusetting\">\r\n    //             <a\r\n    //               className=\"a-mypostcommentmenusetting\"\r\n    //               onClick={() => deleted(data.commentid)}\r\n    //             >\r\n    //               {\" \"}\r\n    //               ลบคอมเมนต์{\" \"}\r\n    //             </a>\r\n    //           </li> \r\n    //         </ul>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div> : null }\r\n    // </div> \r\n\r\n\r\n    <div>\r\n      {allcomment ? allcomment.map(doc =>{\r\n        \r\n      }): null}\r\n    <div className=\"row mypostcommentrow\">\r\n\r\n    <div className=\"column1 mypostcommentrow1\">\r\n      <div class=\"vl\"></div>\r\n      <div className=\"mypost-comment-img1\">\r\n        <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n        <div className=\"mypost-comment-name1\">\r\n         {data ? \"@\" : null}{data.username}\r\n          <span className=\"mypost-comment-time1\"> {data.datetime} </span>\r\n        </div>\r\n        <br />\r\n       {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(data.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n          <div className=\"mypostcomment1\">{textcomment}</div> \r\n        </div>  \r\n       } \r\n      </div> \r\n     </div> \r\n     {user && data.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n      <div className=\"menu-containermypostcommentsetting\">\r\n        <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n          <img \r\n            className=\"mypostcommentimg-setting\"\r\n            src=\"/img/setting.png\"\r\n            alt=\"avatar\"\r\n          ></img> \r\n     </div>\r\n\r\n        <div\r\n          className={`mypostcommentmenusetting ${\r\n            isActive ? \"active\" : \"inactive\"\r\n          }`}\r\n        >\r\n          <ul className=\"ul-mypostcommentmenusetting\">\r\n         <li className=\"li-mypostcommentmenusetting\">\r\n              <a className=\"a-mypostcommentmenusetting\"\r\n              onClick={() => edit(data.commentid)}\r\n              >\r\n                  แก้ไขคอมเมนต์\r\n              </a>\r\n            </li> \r\n            <li className=\"li-mypostcommentmenusetting\">\r\n              <a\r\n                className=\"a-mypostcommentmenusetting\"\r\n                onClick={() => deleted(data.commentid)}\r\n              >\r\n                {\" \"}\r\n                ลบคอมเมนต์{\" \"}\r\n              </a>\r\n            </li> \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div> : null }\r\n  </div> \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Commentitem;\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}