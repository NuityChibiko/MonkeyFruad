{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar anObject = require('../internals/an-object');\n\nvar getSetIterator = require('../internals/get-set-iterator');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.join` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  join: function join(separator) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var sep = separator === undefined ? ',' : String(separator);\n    var result = [];\n    iterate(iterator, result.push, result, false, true);\n    return result.join(sep);\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.set.join.js"],"names":["$","require","IS_PURE","anObject","getSetIterator","iterate","target","proto","real","forced","join","separator","set","iterator","sep","undefined","String","result","push"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEM,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEP;AAAlD,CAAD,EAA8D;AAC7DQ,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,SAAd,EAAyB;AAC7B,QAAIC,GAAG,GAAGT,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIU,QAAQ,GAAGT,cAAc,CAACQ,GAAD,CAA7B;AACA,QAAIE,GAAG,GAAGH,SAAS,KAAKI,SAAd,GAA0B,GAA1B,GAAgCC,MAAM,CAACL,SAAD,CAAhD;AACA,QAAIM,MAAM,GAAG,EAAb;AACAZ,IAAAA,OAAO,CAACQ,QAAD,EAAWI,MAAM,CAACC,IAAlB,EAAwBD,MAAxB,EAAgC,KAAhC,EAAuC,IAAvC,CAAP;AACA,WAAOA,MAAM,CAACP,IAAP,CAAYI,GAAZ,CAAP;AACD;AAR4D,CAA9D,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar IS_PURE = require('../internals/is-pure');\r\nvar anObject = require('../internals/an-object');\r\nvar getSetIterator = require('../internals/get-set-iterator');\r\nvar iterate = require('../internals/iterate');\r\n\r\n// `Set.prototype.join` method\r\n// https://github.com/tc39/proposal-collection-methods\r\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\r\n  join: function join(separator) {\r\n    var set = anObject(this);\r\n    var iterator = getSetIterator(set);\r\n    var sep = separator === undefined ? ',' : String(separator);\r\n    var result = [];\r\n    iterate(iterator, result.push, result, false, true);\r\n    return result.join(sep);\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}