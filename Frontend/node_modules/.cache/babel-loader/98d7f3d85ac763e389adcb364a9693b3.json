{"ast":null,"code":"// import React, { useEffect, useState, useContext } from \"react\";\n// import { Form, Col, FormControl, Button } from \"react-bootstrap\";\n// import { Link } from \"react-router-dom\";\n// import Axios from \"axios\";\n// import \"./commentitem.css\";\n// import usercontext from \"../context/usercontext\";\n// const  Listcomment = ( {commentid }) => {\n//     const [isActive, setIsActive] = useState(false);\n//     const onClick = () => setIsActive(!isActive);\n//     let { user, setUser } = useContext(usercontext);\n//     const [commentid , Setcommentid] = useState()\n//     const [item , Setitem] = useState([])\n//     const [checkedittext , Setcheckedittext] = useState(false)\n//     // const [edittextcomment , Setedittextcomment] = useState()\n//     const [textcomment , Settextcomment] = useState()\n//     const deleted = async (commentid) => {\n//         const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\n//         // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n//         // console.log( getcomment.data.item);\n//         // Setallcomment( getcomment.data.item);\n//         window.location.reload(false);\n//     };\n//     const edit = async () =>{\n//       Setcheckedittext(true)\n//     }\n//     const handleedit = async (commentid) =>{\n//     const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\n//     }\n//     return (\n//         <div>\n//                <div className=\"row mypostcommentrow\">\n//          <div className=\"column1 mypostcommentrow1\">\n//         <div class=\"vl\"></div>\n//         <div className=\"mypost-comment-img1\">\n//           <img className=\"img-circle1\" src=\"/img/profile.png\" />\n//           <div className=\"mypost-comment-name1\">\n//            {commentid ? \"@\" : null}{commentid.username}\n//             <span className=\"mypost-comment-time1\"> {commentid.datetime} </span>\n//           </div>\n//           <br />\n//          {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(commentid.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\n//             <div className=\"mypostcomment1\">{commentid.textcomment}</div> \n//           </div>  \n//          } \n//         </div> \n//        </div> \n//        {user && commentid.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\n//         <div className=\"menu-containermypostcommentsetting\">\n//           <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\n//             <img \n//               className=\"mypostcommentimg-setting\"\n//               src=\"/img/setting.png\"\n//               alt=\"avatar\"\n//             ></img> \n//        </div>\n//           <div\n//             className={`mypostcommentmenusetting ${\n//               isActive ? \"active\" : \"inactive\"\n//             }`}\n//           >\n//             <ul className=\"ul-mypostcommentmenusetting\">\n//            <li className=\"li-mypostcommentmenusetting\">\n//                 <a className=\"a-mypostcommentmenusetting\"\n//                 onClick={() => edit(commentid.commentid)}\n//                 >\n//                     แก้ไขคอมเมนต์\n//                 </a>\n//               </li> \n//               <li className=\"li-mypostcommentmenusetting\">\n//                 <a\n//                   className=\"a-mypostcommentmenusetting\"\n//                   onClick={() => deleted(commentid.commentid)}\n//                 >\n//                   {\" \"}\n//                   ลบคอมเมนต์{\" \"}\n//                 </a>\n//               </li> \n//             </ul>\n//           </div>\n//         </div>\n//       </div> : null }\n//           </div>\n//         </div>\n//     )\n// }\n// export default Listcomment","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/listcomment.js"],"names":[],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\n// import React, { useEffect, useState, useContext } from \"react\";\r\n// import { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Axios from \"axios\";\r\n// import \"./commentitem.css\";\r\n// import usercontext from \"../context/usercontext\";\r\n\r\n// const  Listcomment = ( {commentid }) => {\r\n//     const [isActive, setIsActive] = useState(false);\r\n//     const onClick = () => setIsActive(!isActive);\r\n//     let { user, setUser } = useContext(usercontext);\r\n//     const [commentid , Setcommentid] = useState()\r\n//     const [item , Setitem] = useState([])\r\n//     const [checkedittext , Setcheckedittext] = useState(false)\r\n//     // const [edittextcomment , Setedittextcomment] = useState()\r\n//     const [textcomment , Settextcomment] = useState()\r\n  \r\n      \r\n  \r\n//     const deleted = async (commentid) => {\r\n//         const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\r\n//         // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n//         // console.log( getcomment.data.item);\r\n//         // Setallcomment( getcomment.data.item);\r\n//         window.location.reload(false);\r\n//     };\r\n//     const edit = async () =>{\r\n//       Setcheckedittext(true)\r\n//     }\r\n//     const handleedit = async (commentid) =>{\r\n    \r\n//     const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n    \r\n//     }\r\n  \r\n\r\n//     return (\r\n//         <div>\r\n//                <div className=\"row mypostcommentrow\">\r\n//          <div className=\"column1 mypostcommentrow1\">\r\n//         <div class=\"vl\"></div>\r\n//         <div className=\"mypost-comment-img1\">\r\n//           <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n//           <div className=\"mypost-comment-name1\">\r\n//            {commentid ? \"@\" : null}{commentid.username}\r\n//             <span className=\"mypost-comment-time1\"> {commentid.datetime} </span>\r\n//           </div>\r\n//           <br />\r\n//          {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(commentid.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n//             <div className=\"mypostcomment1\">{commentid.textcomment}</div> \r\n//           </div>  \r\n//          } \r\n//         </div> \r\n//        </div> \r\n//        {user && commentid.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n//         <div className=\"menu-containermypostcommentsetting\">\r\n//           <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n//             <img \r\n//               className=\"mypostcommentimg-setting\"\r\n//               src=\"/img/setting.png\"\r\n//               alt=\"avatar\"\r\n//             ></img> \r\n//        </div>\r\n\r\n//           <div\r\n//             className={`mypostcommentmenusetting ${\r\n//               isActive ? \"active\" : \"inactive\"\r\n//             }`}\r\n//           >\r\n//             <ul className=\"ul-mypostcommentmenusetting\">\r\n//            <li className=\"li-mypostcommentmenusetting\">\r\n//                 <a className=\"a-mypostcommentmenusetting\"\r\n//                 onClick={() => edit(commentid.commentid)}\r\n//                 >\r\n//                     แก้ไขคอมเมนต์\r\n//                 </a>\r\n//               </li> \r\n//               <li className=\"li-mypostcommentmenusetting\">\r\n//                 <a\r\n//                   className=\"a-mypostcommentmenusetting\"\r\n//                   onClick={() => deleted(commentid.commentid)}\r\n//                 >\r\n//                   {\" \"}\r\n//                   ลบคอมเมนต์{\" \"}\r\n//                 </a>\r\n//               </li> \r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       </div> : null }\r\n//           </div>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default Listcomment"]},"metadata":{},"sourceType":"module"}