{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\n\n\nvar crypto = require(\"crypto\");\n\nvar querystring = require(\"querystring\");\n\nvar urlParse = require(\"url\").parse; // Functions used internally\n\n\nvar compact = require(\"lodash/compact\");\n\nvar first = require(\"lodash/first\");\n\nvar isFunction = require(\"lodash/isFunction\");\n\nvar isPlainObject = require(\"lodash/isPlainObject\");\n\nvar last = require(\"lodash/last\");\n\nvar map = require(\"lodash/map\");\n\nvar take = require(\"lodash/take\");\n\nvar at = require(\"lodash/at\"); // Exposed by the module\n\n\nvar clone = require(\"lodash/clone\");\n\nvar extend = require(\"lodash/extend\");\n\nvar filter = require(\"lodash/filter\");\n\nvar includes = require(\"lodash/includes\");\n\nvar isArray = require(\"lodash/isArray\");\n\nvar isEmpty = require(\"lodash/isEmpty\");\n\nvar isNumber = require(\"lodash/isNumber\");\n\nvar isObject = require(\"lodash/isObject\");\n\nvar isString = require(\"lodash/isString\");\n\nvar isUndefined = require(\"lodash/isUndefined\");\n\nvar smart_escape = require(\"./encoding/smart_escape\");\n\nvar consumeOption = require('./parsing/consumeOption');\n\nvar toArray = require('./parsing/toArray');\n\nvar _require = require('./encoding/base64EncodeURL'),\n    base64EncodeURL = _require.base64EncodeURL;\n\nvar encodeDoubleArray = require('./encoding/encodeDoubleArray');\n\nvar config = require(\"../config\");\n\nvar generate_token = require(\"../auth_token\");\n\nvar utf8_encode = require('./utf8_encode');\n\nvar crc32 = require('./crc32');\n\nvar ensurePresenceOf = require('./ensurePresenceOf');\n\nvar ensureOption = require('./ensureOption').defaults(config());\n\nvar entries = require('./entries');\n\nvar isRemoteUrl = require('./isRemoteUrl');\n\nvar getSDKVersions = require('./encoding/sdkAnalytics/getSDKVersions');\n\nvar _require$Util = require('cloudinary-core').Util,\n    getAnalyticsOptions = _require$Util.getAnalyticsOptions,\n    getSDKAnalyticsSignature = _require$Util.getSDKAnalyticsSignature;\n\nexports = module.exports;\nvar utils = module.exports;\n\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\n\nfunction generate_auth_token(options) {\n  var token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\n\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION}`; // Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\n\nexports.userPlatform = \"\";\n\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\n\nvar _require2 = require('./consts'),\n    DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION = _require2.DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n    DEFAULT_POSTER_OPTIONS = _require2.DEFAULT_POSTER_OPTIONS,\n    DEFAULT_VIDEO_SOURCE_TYPES = _require2.DEFAULT_VIDEO_SOURCE_TYPES,\n    CONDITIONAL_OPERATORS = _require2.CONDITIONAL_OPERATORS,\n    PREDEFINED_VARS = _require2.PREDEFINED_VARS,\n    LAYER_KEYWORD_PARAMS = _require2.LAYER_KEYWORD_PARAMS,\n    TRANSFORMATION_PARAMS = _require2.TRANSFORMATION_PARAMS,\n    SIMPLE_PARAMS = _require2.SIMPLE_PARAMS,\n    UPLOAD_PREFIX = _require2.UPLOAD_PREFIX;\n\nfunction textStyle(layer) {\n  var keywords = [];\n  var style = \"\";\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach(function (attr) {\n    var default_value = LAYER_KEYWORD_PARAMS[attr];\n    var attr_value = layer[attr] || default_value;\n\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n  Object.keys(layer).forEach(function (attr) {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw `Must supply font_size for text in overlay/underlay`;\n    if (!layer.font_family) throw `Must supply font_family for text in overlay/underlay`;\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n\n  return style;\n}\n/**\n * Normalize an offset value\n * @param {String} expression a decimal value which may have a 'p' or '%' postfix. E.g. '35%', '0.4p'\n * @return {Object|String} a normalized String of the input value if possible otherwise the value itself\n */\n\n\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n\n  var operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\^|\\\\+|\\\\*\";\n  var operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n  var operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n  expression = expression.replace(operatorsReplaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match];\n  });\n  var predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\n  var predefinedVarsReplaceRE = new RegExp(predefinedVarsPattern, \"g\");\n  expression = expression.replace(predefinedVarsReplaceRE, function (match, p1, offset) {\n    return expression[offset - 1] === '$' ? match : PREDEFINED_VARS[match];\n  });\n  return expression.replace(/[ _]+/g, '_');\n}\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\n\n\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n\n  if (customFunction.function_type === \"remote\") {\n    return [customFunction.function_type, base64EncodeURL(customFunction.source)].join(\":\");\n  }\n\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\n\n\nfunction process_custom_pre_function(customPreFunction) {\n  var result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\n\n\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\n\n\nfunction process_layer(layer) {\n  var result = '';\n\n  if (isPlainObject(layer)) {\n    if (layer.resource_type === \"fetch\" || layer.url != null) {\n      result = `fetch:${base64EncodeURL(layer.url)}`;\n    } else {\n      var public_id = layer.public_id;\n      var format = layer.format;\n      var resource_type = layer.resource_type || \"image\";\n      var type = layer.type || \"upload\";\n      var text = layer.text;\n      var style = null;\n      var components = [];\n      var noPublicId = isEmpty(public_id);\n\n      if (!noPublicId) {\n        public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\n\n        if (format != null) {\n          public_id = `${public_id}.${format}`;\n        }\n      }\n\n      if (isEmpty(text) && resource_type !== \"text\") {\n        if (noPublicId) {\n          throw \"Must supply public_id for resource_type layer_parameter\";\n        }\n\n        if (resource_type === \"subtitles\") {\n          style = textStyle(layer);\n        }\n      } else {\n        resource_type = \"text\";\n        type = null; // type is ignored for text layers\n\n        style = textStyle(layer);\n\n        if (!isEmpty(text)) {\n          var noStyle = isEmpty(style);\n\n          if (!(noPublicId || noStyle) || noPublicId && noStyle) {\n            throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\n          }\n\n          var re = /\\$\\([a-zA-Z]\\w*\\)/g;\n          var start = 0;\n          var textSource = smart_escape(decodeURIComponent(text), /[,\\/]/g);\n          text = \"\";\n\n          for (var res = re.exec(textSource); res; res = re.exec(textSource)) {\n            text += smart_escape(textSource.slice(start, res.index));\n            text += res[0];\n            start = res.index + res[0].length;\n          }\n\n          text += encodeURIComponent(textSource.slice(start));\n        }\n      }\n\n      if (resource_type !== \"image\") {\n        components.push(resource_type);\n      }\n\n      if (type !== \"upload\") {\n        components.push(type);\n      }\n\n      components.push(style);\n      components.push(public_id);\n      components.push(text);\n      result = compact(components).join(\":\");\n    }\n  } else if (/^fetch:.+/.test(layer)) {\n    result = `fetch:${base64EncodeURL(layer.substr(6))}`;\n  } else {\n    result = layer;\n  }\n\n  return result;\n}\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\n\n\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n\n  if (radius.findIndex(function (x) {\n    return x === null;\n  }) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n\n  return radius.map(normalize_expression).join(':');\n}\n\nfunction build_upload_params(options) {\n  var params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    cinemagraph_analysis: utils.as_safe_bool(options.cinemagraph_analysis),\n    colors: utils.as_safe_bool(options.colors),\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    eval: options.eval,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    quality_override: options.quality_override\n  };\n  return utils.updateable_resource_params(options, params);\n}\n\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n\n  return entries(arg).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return `${k}=${v}`;\n  }).join('|');\n}\n/**\n * @description Escape = and | with two backslashes \\\\\n * @param {string|number} value\n * @return {string}\n */\n\n\nfunction escapeMetadataValue(value) {\n  return value.toString().replace(/([=|])/g, '\\\\$&');\n}\n/**\n *\n * @description Encode metadata fields based on incoming value.\n *              If array, escape as color_id=[\\\"green\\\",\\\"red\\\"]\n *              If string/number, escape as in_stock_id=50\n *\n *              Joins resulting values with a pipe:\n *              in_stock_id=50|color_id=[\\\"green\\\",\\\"red\\\"]\n *\n *              = and | and escaped by default (this can't be turned off)\n *\n * @param metadataObj\n * @return {string}\n */\n\n\nfunction encode_context(metadataObj) {\n  if (!isObject(metadataObj)) {\n    return metadataObj;\n  }\n\n  return entries(metadataObj).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1]; // if string, simply parse the value and move on\n\n\n    if (isString(value)) {\n      return `${key}=${escapeMetadataValue(value)}`; // If array, parse each item individually\n    } else if (isArray(value)) {\n      var values = value.map(function (innerVal) {\n        return `\\\"${escapeMetadataValue(innerVal)}\\\"`;\n      }).join(',');\n      return `${key}=[${values}]`; // if unknown, return the value as string\n    } else {\n      return value.toString();\n    }\n  }).join('|');\n}\n\nfunction build_eager(transformations) {\n  return toArray(transformations).map(function (transformation) {\n    var transformationString = utils.generate_transformation_string(clone(transformation));\n    var format = transformation.format;\n    return format == null ? transformationString : `${transformationString}/${format}`;\n  }).join('|');\n}\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\n\n\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n\n    case isArray(headers):\n      return headers.join(\"\\n\");\n\n    case isObject(headers):\n      return entries(headers).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            k = _ref6[0],\n            v = _ref6[1];\n\n        return `${k}:${v}`;\n      }).join(\"\\n\");\n\n    default:\n      return headers;\n  }\n}\n\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n\n  if (isArray(options)) {\n    return options.map(function (t) {\n      return utils.generate_transformation_string(clone(t));\n    }).filter(utils.present).join('/');\n  }\n\n  var responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  var width = options.width;\n  var height = options.height;\n  var size = consumeOption(options, \"size\");\n\n  if (size) {\n    var _size$split = size.split(\"x\");\n\n    var _size$split2 = _slicedToArray(_size$split, 2);\n\n    width = _size$split2[0];\n    height = _size$split2[1];\n    var _ref7 = [width, height];\n    options.width = _ref7[0];\n    options.height = _ref7[1];\n  }\n\n  var has_layer = options.overlay || options.underlay;\n  var crop = consumeOption(options, \"crop\");\n  var angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  var no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n\n  var background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  var color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  var base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  var named_transformation = [];\n\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(function (tr) {\n      return utils.generate_transformation_string(isObject(tr) ? clone(tr) : {\n        transformation: tr\n      });\n    });\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n\n  var effect = consumeOption(options, \"effect\");\n\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          key = _ref9[0],\n          value = _ref9[1];\n\n      return `${key}:${value}`;\n    });\n  }\n\n  var border = consumeOption(options, \"border\");\n\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) {\n    // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n\n  var flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  var dpr = consumeOption(options, \"dpr\", config().dpr);\n\n  if (options.offset != null) {\n    var _split_range = split_range(consumeOption(options, \"offset\"));\n\n    var _split_range2 = _slicedToArray(_split_range, 2);\n\n    options.start_offset = _split_range2[0];\n    options.end_offset = _split_range2[1];\n  }\n\n  var overlay = process_layer(consumeOption(options, \"overlay\"));\n  var radius = process_radius(consumeOption(options, \"radius\"));\n  var underlay = process_layer(consumeOption(options, \"underlay\"));\n  var ifValue = process_if(consumeOption(options, \"if\"));\n  var custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  var custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  var fps = consumeOption(options, 'fps');\n\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n\n  var params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\"))\n  };\n  SIMPLE_PARAMS.forEach(function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        name = _ref11[0],\n        short = _ref11[1];\n\n    var value = consumeOption(options, name);\n\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n\n  [\"so\", \"eo\", \"du\"].forEach(function (short) {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n  var variablesParam = consumeOption(options, \"variables\", []);\n  var variables = entries(options).filter(function (_ref12) {\n    var _ref13 = _slicedToArray(_ref12, 2),\n        key = _ref13[0],\n        value = _ref13[1];\n\n    return key.startsWith('$');\n  }).map(function (_ref14) {\n    var _ref15 = _slicedToArray(_ref14, 2),\n        key = _ref15[0],\n        value = _ref15[1];\n\n    delete options[key];\n    return `${key}_${normalize_expression(value)}`;\n  }).sort().concat(variablesParam.map(function (_ref16) {\n    var _ref17 = _slicedToArray(_ref16, 2),\n        name = _ref17[0],\n        value = _ref17[1];\n\n    return `${name}_${normalize_expression(value)}`;\n  })).join(',');\n  var transformations = entries(params).filter(function (_ref18) {\n    var _ref19 = _slicedToArray(_ref18, 2),\n        key = _ref19[0],\n        value = _ref19[1];\n\n    return utils.present(value);\n  }).map(function (_ref20) {\n    var _ref21 = _slicedToArray(_ref20, 2),\n        key = _ref21[0],\n        value = _ref21[1];\n\n    return key + '_' + value;\n  }).sort().join(',');\n  var raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n\n  if (responsive_width) {\n    var responsive_width_transformation = config().responsive_width_transformation || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n\n  return filter(transformations, utils.present).join(\"/\");\n}\n\nfunction updateable_resource_params(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n\n  return params;\n}\n/**\n * A list of keys used by the url() function.\n * @private\n */\n\n\nvar URL_KEYS = ['api_secret', 'auth_token', 'cdn_subdomain', 'cloud_name', 'cname', 'format', 'long_url_signature', 'private_cdn', 'resource_type', 'secure', 'secure_cdn_subdomain', 'secure_distribution', 'shorten', 'sign_url', 'ssl_detected', 'type', 'url_suffix', 'use_root_path', 'version'];\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(URL_KEYS));\n}\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\n\nfunction extractTransformationParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(_toConsumableArray(TRANSFORMATION_PARAMS)));\n}\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\n\nfunction patchFetchFormat() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\n\nfunction url(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var signature = void 0,\n      source_to_sign = void 0;\n  utils.patchFetchFormat(options);\n  var type = consumeOption(options, \"type\", null);\n  var transformation = utils.generate_transformation_string(options);\n  var resource_type = consumeOption(options, \"resource_type\", \"image\");\n  var version = consumeOption(options, \"version\");\n  var force_version = consumeOption(options, \"force_version\", config().force_version);\n\n  if (force_version == null) {\n    force_version = true;\n  }\n\n  var long_url_signature = !!consumeOption(options, \"long_url_signature\", config().long_url_signature);\n  var format = consumeOption(options, \"format\");\n  var cloud_name = consumeOption(options, \"cloud_name\", config().cloud_name);\n\n  if (!cloud_name) {\n    throw \"Unknown cloud_name\";\n  }\n\n  var private_cdn = consumeOption(options, \"private_cdn\", config().private_cdn);\n  var secure_distribution = consumeOption(options, \"secure_distribution\", config().secure_distribution);\n  var secure = consumeOption(options, \"secure\", null);\n  var ssl_detected = consumeOption(options, \"ssl_detected\", config().ssl_detected);\n\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n\n  var cdn_subdomain = consumeOption(options, \"cdn_subdomain\", config().cdn_subdomain);\n  var secure_cdn_subdomain = consumeOption(options, \"secure_cdn_subdomain\", config().secure_cdn_subdomain);\n  var cname = consumeOption(options, \"cname\", config().cname);\n  var shorten = consumeOption(options, \"shorten\", config().shorten);\n  var sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  var api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  var url_suffix = consumeOption(options, \"url_suffix\");\n  var use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  var auth_token = consumeOption(options, \"auth_token\");\n\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n\n  var preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n\n  var original_source = public_id;\n\n  if (public_id == null) {\n    return original_source;\n  }\n\n  public_id = public_id.toString();\n\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n\n  var _finalize_resource_ty = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n\n  var _finalize_resource_ty2 = _slicedToArray(_finalize_resource_ty, 2);\n\n  resource_type = _finalize_resource_ty2[0];\n  type = _finalize_resource_ty2[1];\n\n  var _finalize_source = finalize_source(public_id, format, url_suffix);\n\n  var _finalize_source2 = _slicedToArray(_finalize_source, 2);\n\n  public_id = _finalize_source2[0];\n  source_to_sign = _finalize_source2[1];\n\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n\n  if (sign_url && isEmpty(auth_token)) {\n    var to_sign = [transformation, source_to_sign].filter(function (part) {\n      return part != null && part !== '';\n    }).join('/');\n\n    try {\n      for (var i = 0; to_sign !== decodeURIComponent(to_sign) && i < 10; i++) {\n        to_sign = decodeURIComponent(to_sign);\n      } // eslint-disable-next-line no-empty\n\n    } catch (error) {}\n\n    var shasum = crypto.createHash(long_url_signature ? 'sha256' : 'sha1');\n    shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n    signature = shasum.digest('base64').replace(/\\//g, '_').replace(/\\+/g, '-').substring(0, long_url_signature ? 32 : 8);\n    signature = `s--${signature}--`;\n  }\n\n  var prefix = unsigned_url_prefix(public_id, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\n  var resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return part != null && part !== '';\n  }).join('/').replace(' ', '%20');\n\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    var token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n\n  var urlAnalytics = ensureOption(options, 'urlAnalytics', false);\n\n  if (urlAnalytics === true) {\n    var sdkVersions = getSDKVersions();\n    var analyticsOptions = getAnalyticsOptions(Object.assign({}, options, sdkVersions));\n    var sdkAnalyticsSignature = getSDKAnalyticsSignature(analyticsOptions); // url might already have a '?' query param\n\n    var appender = '?';\n\n    if (resultUrl.indexOf('?') >= 0) {\n      appender = '&';\n    }\n\n    resultUrl = `${resultUrl}${appender}_s=${sdkAnalyticsSignature}`;\n  }\n\n  return resultUrl;\n}\n\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video'\n  }, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_source(source, format, url_suffix) {\n  var source_to_sign = void 0;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n\n      source = source + '/' + url_suffix;\n    }\n\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n\n  return [source, source_to_sign];\n}\n\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n\n  if (use_root_path) {\n    if (resource_type === 'image' && type === 'upload' || resource_type === 'images' && type == null) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n\n  return [resource_type, type];\n} // cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\n\nfunction unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  var prefix = void 0;\n\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n\n  var shared_domain = !private_cdn;\n\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n\n    if (secure_cdn_subdomain == null && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + (crc32(source) % 5 + 1 + '.cloudinary.com'));\n    }\n\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    var subdomain = cdn_subdomain ? 'a' + (crc32(source) % 5 + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    var cdn_part = private_cdn ? cloud_name + '-' : '';\n    var subdomain_part = cdn_subdomain ? '-' + (crc32(source) % 5 + 1) : '';\n    var host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n\n  return prefix;\n}\n\nfunction base_api_url() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var cloudinary = ensureOption(options, \"upload_prefix\", UPLOAD_PREFIX);\n  var cloud_name = ensureOption(options, \"cloud_name\");\n  return [cloudinary, \"v1_1\", cloud_name].concat(path).join(\"/\");\n}\n\nfunction api_url() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'upload';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource_type = options.resource_type || \"image\";\n  return base_api_url([resource_type, action], options);\n}\n\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\n\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\n\nfunction api_sign_request(params_to_sign, api_secret) {\n  var to_sign = entries(params_to_sign).filter(function (_ref22) {\n    var _ref23 = _slicedToArray(_ref22, 2),\n        k = _ref23[0],\n        v = _ref23[1];\n\n    return utils.present(v);\n  }).map(function (_ref24) {\n    var _ref25 = _slicedToArray(_ref24, 2),\n        k = _ref25[0],\n        v = _ref25[1];\n\n    return `${k}=${toArray(v).join(\",\")}`;\n  }).sort().join(\"&\");\n  var shasum = crypto.createHash('sha1');\n  shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n  return shasum.digest('hex');\n}\n\nfunction clear_blank(hash) {\n  var filtered_hash = {};\n  entries(hash).filter(function (_ref26) {\n    var _ref27 = _slicedToArray(_ref26, 2),\n        k = _ref27[0],\n        v = _ref27[1];\n\n    return utils.present(v);\n  }).forEach(function (_ref28) {\n    var _ref29 = _slicedToArray(_ref28, 2),\n        k = _ref29[0],\n        v = _ref29[1];\n\n    filtered_hash[k] = v;\n  });\n  return filtered_hash;\n}\n\nfunction merge(hash1, hash2) {\n  return _extends({}, hash1, hash2);\n}\n\nfunction sign_request(params) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var apiKey = ensureOption(options, 'api_key');\n  var apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\n\nfunction webhook_signature(data, timestamp) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  ensurePresenceOf({\n    data,\n    timestamp\n  });\n  var api_secret = ensureOption(options, 'api_secret');\n  var shasum = crypto.createHash('sha1');\n  shasum.update(data + timestamp + api_secret, 'binary');\n  return shasum.digest('hex');\n}\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\n\n\nfunction verifyNotificationSignature(body, timestamp, signature) {\n  var valid_for = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7200; // verify that signature is valid for the given timestamp\n\n  if (timestamp < Date.now() - valid_for) {\n    return false;\n  }\n\n  var payload_hash = utils.webhook_signature(body, timestamp, {\n    api_secret: config().api_secret\n  });\n  return signature === payload_hash;\n}\n\nfunction process_request_params(params, options) {\n  if (options.unsigned != null && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n\n  return params;\n}\n\nfunction private_download_url(public_id, format) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\n\nfunction zip_download_url(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options)\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n/**\n * The returned url should allow downloading the backedup asset based on the\n * version and asset id\n * asset and version id are returned with resource(<PUBLIC_ID1>, { versions: true })\n * @param asset_id\n * @param version_id\n * @param options\n * @returns {string }\n */\n\n\nfunction download_backedup_asset(asset_id, version_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    asset_id: asset_id,\n    version_id: version_id\n  }, options);\n  return exports.base_api_url(['download_backup'], options) + \"?\" + hashToQuery(params);\n}\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\n\n\nfunction download_archive_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\n\nfunction download_zip_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\"\n  }));\n}\n/**\n * Creates and returns a URL that when invoked creates an archive of a folder\n * @param {string} folder_path Full path (from the root) of the folder to download\n * @param {object} options Additional options\n * @returns {string} Url for downloading an archive of a folder\n */\n\n\nfunction download_folder(folder_path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.resource_type = options.resource_type || \"all\";\n  options.prefixes = folder_path;\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\n\n\nfunction join_pair(key, value) {\n  if (!value) {\n    return void 0;\n  }\n\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\n\n\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace('\"', '&#34;').replace(\"'\", '&#39;') : value;\n}\n/**\n *\n * @param attrs\n * @return {*}\n */\n\n\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\n\nvar CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\n\nfunction cloudinary_js_config() {\n  var params = pickOnlyExistingValues.apply(undefined, [config()].concat(CLOUDINARY_JS_CONFIG_PARAMS));\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\n\nfunction v1_result_adapter(callback) {\n  if (callback == null) {\n    return undefined;\n  }\n\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n\n    return callback(void 0, result);\n  };\n}\n\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var pass_args = take(args, num_pass_args);\n    var options = args[num_pass_args];\n    var callback = args[num_pass_args + 1];\n\n    if (callback == null && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\n\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map(function (name) {\n    var num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\n\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n\n  return value;\n}\n\nvar NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\nvar OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nvar RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nvar OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`); // Split a range into the start and end values\n\nfunction split_range(range) {\n  // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n\n      return range.split(\"..\");\n\n    case Array:\n      return [first(range), last(range)];\n\n    default:\n      return [null, null];\n  }\n}\n\nfunction norm_range_value(value) {\n  // :nodoc:\n  var offset = String(value).match(RANGE_VALUE_RE);\n\n  if (offset) {\n    var modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n\n  return value;\n}\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\n\n\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object:\n      {\n        var video = \"\";\n\n        if ('codec' in param) {\n          video = param.codec;\n\n          if ('profile' in param) {\n            video += \":\" + param.profile;\n\n            if ('level' in param) {\n              video += \":\" + param.level;\n            }\n          }\n        }\n\n        return video;\n      }\n\n    case String:\n      return param;\n\n    default:\n      return null;\n  }\n}\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\n\nfunction archive_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename),\n    folder_path: options.folder_path\n  };\n}\n\nexports.create_source_tag = function create_source_tag(src, source_type) {\n  var codecs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  var mime_type = `video/${video_type}`;\n\n  if (!isEmpty(codecs)) {\n    var codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n\n  return `<source ${utils.html_attrs({\n    src,\n    type: mime_type\n  })}>`;\n};\n\nfunction build_explicit_api_params(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return [exports.build_upload_params(extend({}, {\n    public_id\n  }, options))];\n}\n\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n\n  breakpoints = clone(breakpoints);\n\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n\n  for (var j = 0; j < breakpoints.length; j++) {\n    var breakpoint_settings = breakpoints[j];\n\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(clone(breakpoint_settings.transformation));\n      }\n    }\n  }\n\n  return JSON.stringify(breakpoints);\n}\n\nfunction build_streaming_profiles_param() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = pickOnlyExistingValues(options, \"display_name\", \"representations\");\n\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(function (r) {\n      return {\n        transformation: utils.generate_transformation_string(r.transformation)\n      };\n    }));\n  }\n\n  return params;\n}\n\nfunction hashToParameters(hash) {\n  return entries(hash).reduce(function (parameters, _ref30) {\n    var _ref31 = _slicedToArray(_ref30, 2),\n        key = _ref31[0],\n        value = _ref31[1];\n\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      var items = value.map(function (v) {\n        return [key, v];\n      });\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n\n    return parameters;\n  }, []);\n}\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\n\n\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(function (_ref32) {\n    var _ref33 = _slicedToArray(_ref32, 2),\n        key = _ref33[0],\n        value = _ref33[1];\n\n    return `${querystring.escape(key)}=${querystring.escape(value)}`;\n  }).join('&');\n}\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\n\nfunction pickOnlyExistingValues(source) {\n  var result = {};\n\n  if (source) {\n    for (var _len2 = arguments.length, keys = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      keys[_key2 - 1] = arguments[_key2];\n    }\n\n    keys.forEach(function (key) {\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    });\n  }\n\n  return result;\n}\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n\n  if (!isArray(data)) {\n    data = [data];\n  }\n\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n\n  return JSON.stringify(data);\n}\n/**\n * Empty function - do nothing\n *\n */\n\n\nexports.NOP = function () {};\n\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\n\nexports.timestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\n\nexports.option_consume = consumeOption; // for backwards compatibility\n\nexports.build_array = toArray; // for backwards compatibility\n\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = pickOnlyExistingValues; // for backwards compatibility\n\nexports.pickOnlyExistingValues = pickOnlyExistingValues;\nexports.jsonArrayParam = jsonArrayParam;\nexports.download_folder = download_folder;\nexports.base_api_url = base_api_url;\nexports.download_backedup_asset = download_backedup_asset; // was exported before, so kept for backwards compatibility\n\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\nObject.assign(module.exports, {\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: function keys(source) {\n    return Object.keys(source);\n  },\n  ensurePresenceOf\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/cloudinary/lib-es5/utils/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","err","Array","isArray","TypeError","_toConsumableArray","arr2","from","crypto","require","querystring","urlParse","parse","compact","first","isFunction","isPlainObject","last","map","take","at","clone","extend","filter","includes","isEmpty","isNumber","isObject","isString","isUndefined","smart_escape","consumeOption","toArray","_require","base64EncodeURL","encodeDoubleArray","config","generate_token","utf8_encode","crc32","ensurePresenceOf","ensureOption","defaults","entries","isRemoteUrl","getSDKVersions","_require$Util","Util","getAnalyticsOptions","getSDKAnalyticsSignature","exports","module","utils","VERSION","version","error","generate_auth_token","options","token_options","auth_token","CF_SHARED_CDN","OLD_AKAMAI_SHARED_CDN","AKAMAI_SHARED_CDN","SHARED_CDN","USER_AGENT","userPlatform","getUserAgent","_require2","DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION","DEFAULT_POSTER_OPTIONS","DEFAULT_VIDEO_SOURCE_TYPES","CONDITIONAL_OPERATORS","PREDEFINED_VARS","LAYER_KEYWORD_PARAMS","TRANSFORMATION_PARAMS","SIMPLE_PARAMS","UPLOAD_PREFIX","textStyle","layer","keywords","style","keys","forEach","attr","default_value","attr_value","split","pop","font_size","font_family","unshift","join","normalize_expression","expression","match","operators","operatorsPattern","operatorsReplaceRE","RegExp","replace","predefinedVarsPattern","predefinedVarsReplaceRE","p1","offset","process_custom_function","customFunction","function_type","process_custom_pre_function","customPreFunction","result","process_if","ifValue","process_layer","resource_type","url","public_id","format","type","text","components","noPublicId","noStyle","re","start","textSource","decodeURIComponent","res","exec","slice","index","encodeURIComponent","test","substr","process_radius","radius","Error","findIndex","x","build_upload_params","params","access_mode","allowed_formats","async","as_safe_bool","backup","callback","cinemagraph_analysis","colors","discard_original_filename","eager","build_eager","eager_async","eager_notification_url","eval","exif","faces","folder","image_metadata","invalidate","moderation","notification_url","overwrite","phash","proxy","quality_analysis","responsive_breakpoints","generate_responsive_breakpoints_string","return_delete_token","timestamp","transformation","generate_transformation_string","unique_filename","upload_preset","use_filename","quality_override","updateable_resource_params","encode_key_value","arg","_ref","_ref2","k","v","escapeMetadataValue","toString","encode_context","metadataObj","_ref3","_ref4","values","innerVal","transformations","transformationString","build_custom_headers","headers","_ref5","_ref6","t","present","responsive_width","width","height","size","_size$split","_size$split2","_ref7","has_layer","overlay","underlay","crop","angle","no_html_sizes","indexOf","parseFloat","background","color","base_transformations","named_transformation","some","tr","effect","_ref8","_ref9","border","flags","dpr","_split_range","split_range","_split_range2","start_offset","end_offset","custom_function","custom_pre_function","fps","a","ar","b","bo","c","co","e","fl","fn","h","ki","l","o","q","r","u","w","y","z","_ref10","_ref11","name","short","vc","process_video_params","norm_range_value","variablesParam","variables","_ref12","_ref13","startsWith","_ref14","_ref15","sort","concat","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","raw_transformation","responsive_width_transformation","String","responsive","hidpi","access_control","jsonArrayParam","auto_tagging","background_removal","categorization","context","metadata","custom_coordinates","detection","face_coordinates","ocr","raw_convert","similarity_search","tags","URL_KEYS","extractUrlParams","pickOnlyExistingValues","apply","extractTransformationParams","patchFetchFormat","fetch_format","signature","source_to_sign","force_version","long_url_signature","cloud_name","private_cdn","secure_distribution","secure","ssl_detected","cdn_subdomain","secure_cdn_subdomain","cname","shorten","sign_url","api_secret","url_suffix","use_root_path","merge","preloaded","original_source","_finalize_resource_ty","finalize_resource_type","_finalize_resource_ty2","_finalize_source","finalize_source","_finalize_source2","to_sign","part","shasum","createHash","update","digest","substring","prefix","unsigned_url_prefix","resultUrl","path","token","urlAnalytics","sdkVersions","analyticsOptions","sdkAnalyticsSignature","appender","video_url","video_thumbnail_url","shared_domain","subdomain","cdn_part","subdomain_part","host","base_api_url","cloudinary","api_url","action","random_public_id","randomBytes","signed_preloaded_image","api_sign_request","params_to_sign","_ref22","_ref23","_ref24","_ref25","clear_blank","hash","filtered_hash","_ref26","_ref27","_ref28","_ref29","hash1","hash2","sign_request","apiKey","apiSecret","api_key","webhook_signature","data","verifyNotificationSignature","body","valid_for","Date","now","payload_hash","process_request_params","unsigned","private_download_url","attachment","expires_at","stringify","zip_download_url","tag","hashToQuery","download_backedup_asset","asset_id","version_id","download_archive_url","cloudinary_params","archive_params","mode","download_zip_url","target_format","download_folder","folder_path","prefixes","join_pair","escapeQuotes","html_attrs","attrs","CLOUDINARY_JS_CONFIG_PARAMS","cloudinary_js_config","JSON","v1_result_adapter","v1_adapter","num_pass_args","v1","_len","args","_key","pass_args","v1_adapters","mapping","NUMBER_PATTERN","OFFSET_ANY_PATTERN","RANGE_VALUE_RE","OFFSET_ANY_PATTERN_RE","range","constructor","modifier","param","video","codec","profile","level","allow_missing","flatten_folders","flatten_transformations","keep_derived","fully_qualified_public_ids","public_ids","skip_transformation_name","target_public_id","target_tags","use_original_filename","create_source_tag","src","source_type","codecs","video_type","mime_type","codecs_str","build_explicit_api_params","breakpoints","j","breakpoint_settings","build_streaming_profiles_param","representations","hashToParameters","reduce","parameters","_ref30","_ref31","endsWith","items","_ref32","_ref33","escape","_len2","_key2","NOP","Math","floor","getTime","option_consume","build_array","encode_double_array","only"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\n\nvar crypto = require(\"crypto\");\nvar querystring = require(\"querystring\");\nvar urlParse = require(\"url\").parse;\n\n// Functions used internally\nvar compact = require(\"lodash/compact\");\nvar first = require(\"lodash/first\");\nvar isFunction = require(\"lodash/isFunction\");\nvar isPlainObject = require(\"lodash/isPlainObject\");\nvar last = require(\"lodash/last\");\nvar map = require(\"lodash/map\");\nvar take = require(\"lodash/take\");\nvar at = require(\"lodash/at\");\n\n// Exposed by the module\nvar clone = require(\"lodash/clone\");\nvar extend = require(\"lodash/extend\");\nvar filter = require(\"lodash/filter\");\nvar includes = require(\"lodash/includes\");\nvar isArray = require(\"lodash/isArray\");\nvar isEmpty = require(\"lodash/isEmpty\");\nvar isNumber = require(\"lodash/isNumber\");\nvar isObject = require(\"lodash/isObject\");\nvar isString = require(\"lodash/isString\");\nvar isUndefined = require(\"lodash/isUndefined\");\n\nvar smart_escape = require(\"./encoding/smart_escape\");\nvar consumeOption = require('./parsing/consumeOption');\nvar toArray = require('./parsing/toArray');\n\nvar _require = require('./encoding/base64EncodeURL'),\n    base64EncodeURL = _require.base64EncodeURL;\n\nvar encodeDoubleArray = require('./encoding/encodeDoubleArray');\n\nvar config = require(\"../config\");\nvar generate_token = require(\"../auth_token\");\nvar utf8_encode = require('./utf8_encode');\nvar crc32 = require('./crc32');\nvar ensurePresenceOf = require('./ensurePresenceOf');\nvar ensureOption = require('./ensureOption').defaults(config());\nvar entries = require('./entries');\nvar isRemoteUrl = require('./isRemoteUrl');\nvar getSDKVersions = require('./encoding/sdkAnalytics/getSDKVersions');\n\nvar _require$Util = require('cloudinary-core').Util,\n    getAnalyticsOptions = _require$Util.getAnalyticsOptions,\n    getSDKAnalyticsSignature = _require$Util.getSDKAnalyticsSignature;\n\nexports = module.exports;\nvar utils = module.exports;\n\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\n\nfunction generate_auth_token(options) {\n  var token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\n\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION}`;\n\n// Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\nexports.userPlatform = \"\";\n\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\n\nvar _require2 = require('./consts'),\n    DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION = _require2.DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n    DEFAULT_POSTER_OPTIONS = _require2.DEFAULT_POSTER_OPTIONS,\n    DEFAULT_VIDEO_SOURCE_TYPES = _require2.DEFAULT_VIDEO_SOURCE_TYPES,\n    CONDITIONAL_OPERATORS = _require2.CONDITIONAL_OPERATORS,\n    PREDEFINED_VARS = _require2.PREDEFINED_VARS,\n    LAYER_KEYWORD_PARAMS = _require2.LAYER_KEYWORD_PARAMS,\n    TRANSFORMATION_PARAMS = _require2.TRANSFORMATION_PARAMS,\n    SIMPLE_PARAMS = _require2.SIMPLE_PARAMS,\n    UPLOAD_PREFIX = _require2.UPLOAD_PREFIX;\n\nfunction textStyle(layer) {\n  var keywords = [];\n  var style = \"\";\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach(function (attr) {\n    var default_value = LAYER_KEYWORD_PARAMS[attr];\n    var attr_value = layer[attr] || default_value;\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n\n  Object.keys(layer).forEach(function (attr) {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw `Must supply font_size for text in overlay/underlay`;\n    if (!layer.font_family) throw `Must supply font_family for text in overlay/underlay`;\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n  return style;\n}\n\n/**\n * Normalize an offset value\n * @param {String} expression a decimal value which may have a 'p' or '%' postfix. E.g. '35%', '0.4p'\n * @return {Object|String} a normalized String of the input value if possible otherwise the value itself\n */\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n\n  var operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\^|\\\\+|\\\\*\";\n  var operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n  var operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n  expression = expression.replace(operatorsReplaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match];\n  });\n\n  var predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\n  var predefinedVarsReplaceRE = new RegExp(predefinedVarsPattern, \"g\");\n  expression = expression.replace(predefinedVarsReplaceRE, function (match, p1, offset) {\n    return expression[offset - 1] === '$' ? match : PREDEFINED_VARS[match];\n  });\n\n  return expression.replace(/[ _]+/g, '_');\n}\n\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n  if (customFunction.function_type === \"remote\") {\n    return [customFunction.function_type, base64EncodeURL(customFunction.source)].join(\":\");\n  }\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\nfunction process_custom_pre_function(customPreFunction) {\n  var result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\nfunction process_layer(layer) {\n  var result = '';\n  if (isPlainObject(layer)) {\n    if (layer.resource_type === \"fetch\" || layer.url != null) {\n      result = `fetch:${base64EncodeURL(layer.url)}`;\n    } else {\n      var public_id = layer.public_id;\n      var format = layer.format;\n      var resource_type = layer.resource_type || \"image\";\n      var type = layer.type || \"upload\";\n      var text = layer.text;\n      var style = null;\n      var components = [];\n      var noPublicId = isEmpty(public_id);\n      if (!noPublicId) {\n        public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\n        if (format != null) {\n          public_id = `${public_id}.${format}`;\n        }\n      }\n      if (isEmpty(text) && resource_type !== \"text\") {\n        if (noPublicId) {\n          throw \"Must supply public_id for resource_type layer_parameter\";\n        }\n        if (resource_type === \"subtitles\") {\n          style = textStyle(layer);\n        }\n      } else {\n        resource_type = \"text\";\n        type = null;\n        // type is ignored for text layers\n        style = textStyle(layer);\n        if (!isEmpty(text)) {\n          var noStyle = isEmpty(style);\n          if (!(noPublicId || noStyle) || noPublicId && noStyle) {\n            throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\n          }\n          var re = /\\$\\([a-zA-Z]\\w*\\)/g;\n          var start = 0;\n          var textSource = smart_escape(decodeURIComponent(text), /[,\\/]/g);\n          text = \"\";\n          for (var res = re.exec(textSource); res; res = re.exec(textSource)) {\n            text += smart_escape(textSource.slice(start, res.index));\n            text += res[0];\n            start = res.index + res[0].length;\n          }\n          text += encodeURIComponent(textSource.slice(start));\n        }\n      }\n      if (resource_type !== \"image\") {\n        components.push(resource_type);\n      }\n      if (type !== \"upload\") {\n        components.push(type);\n      }\n      components.push(style);\n      components.push(public_id);\n      components.push(text);\n      result = compact(components).join(\":\");\n    }\n  } else if (/^fetch:.+/.test(layer)) {\n    result = `fetch:${base64EncodeURL(layer.substr(6))}`;\n  } else {\n    result = layer;\n  }\n  return result;\n}\n\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n  if (radius.findIndex(function (x) {\n    return x === null;\n  }) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n  return radius.map(normalize_expression).join(':');\n}\n\nfunction build_upload_params(options) {\n  var params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    cinemagraph_analysis: utils.as_safe_bool(options.cinemagraph_analysis),\n    colors: utils.as_safe_bool(options.colors),\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    eval: options.eval,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    quality_override: options.quality_override\n  };\n  return utils.updateable_resource_params(options, params);\n}\n\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n  return entries(arg).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return `${k}=${v}`;\n  }).join('|');\n}\n\n/**\n * @description Escape = and | with two backslashes \\\\\n * @param {string|number} value\n * @return {string}\n */\nfunction escapeMetadataValue(value) {\n  return value.toString().replace(/([=|])/g, '\\\\$&');\n}\n\n/**\n *\n * @description Encode metadata fields based on incoming value.\n *              If array, escape as color_id=[\\\"green\\\",\\\"red\\\"]\n *              If string/number, escape as in_stock_id=50\n *\n *              Joins resulting values with a pipe:\n *              in_stock_id=50|color_id=[\\\"green\\\",\\\"red\\\"]\n *\n *              = and | and escaped by default (this can't be turned off)\n *\n * @param metadataObj\n * @return {string}\n */\nfunction encode_context(metadataObj) {\n  if (!isObject(metadataObj)) {\n    return metadataObj;\n  }\n\n  return entries(metadataObj).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    // if string, simply parse the value and move on\n    if (isString(value)) {\n      return `${key}=${escapeMetadataValue(value)}`;\n\n      // If array, parse each item individually\n    } else if (isArray(value)) {\n      var values = value.map(function (innerVal) {\n        return `\\\"${escapeMetadataValue(innerVal)}\\\"`;\n      }).join(',');\n      return `${key}=[${values}]`;\n      // if unknown, return the value as string\n    } else {\n      return value.toString();\n    }\n  }).join('|');\n}\n\nfunction build_eager(transformations) {\n  return toArray(transformations).map(function (transformation) {\n    var transformationString = utils.generate_transformation_string(clone(transformation));\n    var format = transformation.format;\n    return format == null ? transformationString : `${transformationString}/${format}`;\n  }).join('|');\n}\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n    case isArray(headers):\n      return headers.join(\"\\n\");\n    case isObject(headers):\n      return entries(headers).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            k = _ref6[0],\n            v = _ref6[1];\n\n        return `${k}:${v}`;\n      }).join(\"\\n\");\n    default:\n      return headers;\n  }\n}\n\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n  if (isArray(options)) {\n    return options.map(function (t) {\n      return utils.generate_transformation_string(clone(t));\n    }).filter(utils.present).join('/');\n  }\n\n  var responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  var width = options.width;\n  var height = options.height;\n  var size = consumeOption(options, \"size\");\n  if (size) {\n    var _size$split = size.split(\"x\");\n\n    var _size$split2 = _slicedToArray(_size$split, 2);\n\n    width = _size$split2[0];\n    height = _size$split2[1];\n    var _ref7 = [width, height];\n    options.width = _ref7[0];\n    options.height = _ref7[1];\n  }\n  var has_layer = options.overlay || options.underlay;\n  var crop = consumeOption(options, \"crop\");\n  var angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  var no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n  var background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  var color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  var base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  var named_transformation = [];\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(function (tr) {\n      return utils.generate_transformation_string(isObject(tr) ? clone(tr) : { transformation: tr });\n    });\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n  var effect = consumeOption(options, \"effect\");\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          key = _ref9[0],\n          value = _ref9[1];\n\n      return `${key}:${value}`;\n    });\n  }\n  var border = consumeOption(options, \"border\");\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) {\n    // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n  var flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  var dpr = consumeOption(options, \"dpr\", config().dpr);\n  if (options.offset != null) {\n    var _split_range = split_range(consumeOption(options, \"offset\"));\n\n    var _split_range2 = _slicedToArray(_split_range, 2);\n\n    options.start_offset = _split_range2[0];\n    options.end_offset = _split_range2[1];\n  }\n  var overlay = process_layer(consumeOption(options, \"overlay\"));\n  var radius = process_radius(consumeOption(options, \"radius\"));\n  var underlay = process_layer(consumeOption(options, \"underlay\"));\n  var ifValue = process_if(consumeOption(options, \"if\"));\n  var custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  var custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  var fps = consumeOption(options, 'fps');\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n  var params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\"))\n  };\n\n  SIMPLE_PARAMS.forEach(function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        name = _ref11[0],\n        short = _ref11[1];\n\n    var value = consumeOption(options, name);\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n  [\"so\", \"eo\", \"du\"].forEach(function (short) {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n\n  var variablesParam = consumeOption(options, \"variables\", []);\n  var variables = entries(options).filter(function (_ref12) {\n    var _ref13 = _slicedToArray(_ref12, 2),\n        key = _ref13[0],\n        value = _ref13[1];\n\n    return key.startsWith('$');\n  }).map(function (_ref14) {\n    var _ref15 = _slicedToArray(_ref14, 2),\n        key = _ref15[0],\n        value = _ref15[1];\n\n    delete options[key];\n    return `${key}_${normalize_expression(value)}`;\n  }).sort().concat(variablesParam.map(function (_ref16) {\n    var _ref17 = _slicedToArray(_ref16, 2),\n        name = _ref17[0],\n        value = _ref17[1];\n\n    return `${name}_${normalize_expression(value)}`;\n  })).join(',');\n\n  var transformations = entries(params).filter(function (_ref18) {\n    var _ref19 = _slicedToArray(_ref18, 2),\n        key = _ref19[0],\n        value = _ref19[1];\n\n    return utils.present(value);\n  }).map(function (_ref20) {\n    var _ref21 = _slicedToArray(_ref20, 2),\n        key = _ref21[0],\n        value = _ref21[1];\n\n    return key + '_' + value;\n  }).sort().join(',');\n\n  var raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n  if (responsive_width) {\n    var responsive_width_transformation = config().responsive_width_transformation || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n  return filter(transformations, utils.present).join(\"/\");\n}\n\nfunction updateable_resource_params(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n  return params;\n}\n\n/**\n * A list of keys used by the url() function.\n * @private\n */\nvar URL_KEYS = ['api_secret', 'auth_token', 'cdn_subdomain', 'cloud_name', 'cname', 'format', 'long_url_signature', 'private_cdn', 'resource_type', 'secure', 'secure_cdn_subdomain', 'secure_distribution', 'shorten', 'sign_url', 'ssl_detected', 'type', 'url_suffix', 'use_root_path', 'version'];\n\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(URL_KEYS));\n}\n\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\nfunction extractTransformationParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(_toConsumableArray(TRANSFORMATION_PARAMS)));\n}\n\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\nfunction patchFetchFormat() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\n\nfunction url(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var signature = void 0,\n      source_to_sign = void 0;\n  utils.patchFetchFormat(options);\n  var type = consumeOption(options, \"type\", null);\n  var transformation = utils.generate_transformation_string(options);\n\n  var resource_type = consumeOption(options, \"resource_type\", \"image\");\n  var version = consumeOption(options, \"version\");\n  var force_version = consumeOption(options, \"force_version\", config().force_version);\n  if (force_version == null) {\n    force_version = true;\n  }\n  var long_url_signature = !!consumeOption(options, \"long_url_signature\", config().long_url_signature);\n  var format = consumeOption(options, \"format\");\n  var cloud_name = consumeOption(options, \"cloud_name\", config().cloud_name);\n  if (!cloud_name) {\n    throw \"Unknown cloud_name\";\n  }\n  var private_cdn = consumeOption(options, \"private_cdn\", config().private_cdn);\n  var secure_distribution = consumeOption(options, \"secure_distribution\", config().secure_distribution);\n  var secure = consumeOption(options, \"secure\", null);\n  var ssl_detected = consumeOption(options, \"ssl_detected\", config().ssl_detected);\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n  var cdn_subdomain = consumeOption(options, \"cdn_subdomain\", config().cdn_subdomain);\n  var secure_cdn_subdomain = consumeOption(options, \"secure_cdn_subdomain\", config().secure_cdn_subdomain);\n  var cname = consumeOption(options, \"cname\", config().cname);\n  var shorten = consumeOption(options, \"shorten\", config().shorten);\n  var sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  var api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  var url_suffix = consumeOption(options, \"url_suffix\");\n  var use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  var auth_token = consumeOption(options, \"auth_token\");\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n  var preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n  var original_source = public_id;\n  if (public_id == null) {\n    return original_source;\n  }\n  public_id = public_id.toString();\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n\n  var _finalize_resource_ty = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n\n  var _finalize_resource_ty2 = _slicedToArray(_finalize_resource_ty, 2);\n\n  resource_type = _finalize_resource_ty2[0];\n  type = _finalize_resource_ty2[1];\n\n  var _finalize_source = finalize_source(public_id, format, url_suffix);\n\n  var _finalize_source2 = _slicedToArray(_finalize_source, 2);\n\n  public_id = _finalize_source2[0];\n  source_to_sign = _finalize_source2[1];\n\n\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n  if (sign_url && isEmpty(auth_token)) {\n    var to_sign = [transformation, source_to_sign].filter(function (part) {\n      return part != null && part !== '';\n    }).join('/');\n    try {\n      for (var i = 0; to_sign !== decodeURIComponent(to_sign) && i < 10; i++) {\n        to_sign = decodeURIComponent(to_sign);\n      }\n      // eslint-disable-next-line no-empty\n    } catch (error) {}\n    var shasum = crypto.createHash(long_url_signature ? 'sha256' : 'sha1');\n    shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n    signature = shasum.digest('base64').replace(/\\//g, '_').replace(/\\+/g, '-').substring(0, long_url_signature ? 32 : 8);\n    signature = `s--${signature}--`;\n  }\n  var prefix = unsigned_url_prefix(public_id, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\n  var resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return part != null && part !== '';\n  }).join('/').replace(' ', '%20');\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    var token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n\n  var urlAnalytics = ensureOption(options, 'urlAnalytics', false);\n\n  if (urlAnalytics === true) {\n    var sdkVersions = getSDKVersions();\n    var analyticsOptions = getAnalyticsOptions(Object.assign({}, options, sdkVersions));\n\n    var sdkAnalyticsSignature = getSDKAnalyticsSignature(analyticsOptions);\n\n    // url might already have a '?' query param\n    var appender = '?';\n    if (resultUrl.indexOf('?') >= 0) {\n      appender = '&';\n    }\n    resultUrl = `${resultUrl}${appender}_s=${sdkAnalyticsSignature}`;\n  }\n\n  return resultUrl;\n}\n\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video'\n  }, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_source(source, format, url_suffix) {\n  var source_to_sign = void 0;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n      source = source + '/' + url_suffix;\n    }\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n  return [source, source_to_sign];\n}\n\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n  if (use_root_path) {\n    if (resource_type === 'image' && type === 'upload' || resource_type === 'images' && type == null) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n  return [resource_type, type];\n}\n// cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\nfunction unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  var prefix = void 0;\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n  var shared_domain = !private_cdn;\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n    if (secure_cdn_subdomain == null && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + (crc32(source) % 5 + 1 + '.cloudinary.com'));\n    }\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    var subdomain = cdn_subdomain ? 'a' + (crc32(source) % 5 + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    var cdn_part = private_cdn ? cloud_name + '-' : '';\n    var subdomain_part = cdn_subdomain ? '-' + (crc32(source) % 5 + 1) : '';\n    var host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n  return prefix;\n}\n\nfunction base_api_url() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var cloudinary = ensureOption(options, \"upload_prefix\", UPLOAD_PREFIX);\n  var cloud_name = ensureOption(options, \"cloud_name\");\n  return [cloudinary, \"v1_1\", cloud_name].concat(path).join(\"/\");\n}\n\nfunction api_url() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'upload';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var resource_type = options.resource_type || \"image\";\n  return base_api_url([resource_type, action], options);\n}\n\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\n\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\n\nfunction api_sign_request(params_to_sign, api_secret) {\n  var to_sign = entries(params_to_sign).filter(function (_ref22) {\n    var _ref23 = _slicedToArray(_ref22, 2),\n        k = _ref23[0],\n        v = _ref23[1];\n\n    return utils.present(v);\n  }).map(function (_ref24) {\n    var _ref25 = _slicedToArray(_ref24, 2),\n        k = _ref25[0],\n        v = _ref25[1];\n\n    return `${k}=${toArray(v).join(\",\")}`;\n  }).sort().join(\"&\");\n  var shasum = crypto.createHash('sha1');\n  shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n  return shasum.digest('hex');\n}\n\nfunction clear_blank(hash) {\n  var filtered_hash = {};\n  entries(hash).filter(function (_ref26) {\n    var _ref27 = _slicedToArray(_ref26, 2),\n        k = _ref27[0],\n        v = _ref27[1];\n\n    return utils.present(v);\n  }).forEach(function (_ref28) {\n    var _ref29 = _slicedToArray(_ref28, 2),\n        k = _ref29[0],\n        v = _ref29[1];\n\n    filtered_hash[k] = v;\n  });\n  return filtered_hash;\n}\n\nfunction merge(hash1, hash2) {\n  return _extends({}, hash1, hash2);\n}\n\nfunction sign_request(params) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var apiKey = ensureOption(options, 'api_key');\n  var apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\n\nfunction webhook_signature(data, timestamp) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  ensurePresenceOf({ data, timestamp });\n\n  var api_secret = ensureOption(options, 'api_secret');\n  var shasum = crypto.createHash('sha1');\n  shasum.update(data + timestamp + api_secret, 'binary');\n  return shasum.digest('hex');\n}\n\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\nfunction verifyNotificationSignature(body, timestamp, signature) {\n  var valid_for = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7200;\n\n  // verify that signature is valid for the given timestamp\n  if (timestamp < Date.now() - valid_for) {\n    return false;\n  }\n  var payload_hash = utils.webhook_signature(body, timestamp, { api_secret: config().api_secret });\n  return signature === payload_hash;\n}\n\nfunction process_request_params(params, options) {\n  if (options.unsigned != null && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n  return params;\n}\n\nfunction private_download_url(public_id, format) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\nfunction zip_download_url(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options)\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * The returned url should allow downloading the backedup asset based on the\n * version and asset id\n * asset and version id are returned with resource(<PUBLIC_ID1>, { versions: true })\n * @param asset_id\n * @param version_id\n * @param options\n * @returns {string }\n */\nfunction download_backedup_asset(asset_id, version_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    asset_id: asset_id,\n    version_id: version_id\n  }, options);\n  return exports.base_api_url(['download_backup'], options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\nfunction download_archive_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\nfunction download_zip_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\"\n  }));\n}\n\n/**\n * Creates and returns a URL that when invoked creates an archive of a folder\n * @param {string} folder_path Full path (from the root) of the folder to download\n * @param {object} options Additional options\n * @returns {string} Url for downloading an archive of a folder\n */\nfunction download_folder(folder_path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  options.resource_type = options.resource_type || \"all\";\n  options.prefixes = folder_path;\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\nfunction join_pair(key, value) {\n  if (!value) {\n    return void 0;\n  }\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace('\"', '&#34;').replace(\"'\", '&#39;') : value;\n}\n\n/**\n *\n * @param attrs\n * @return {*}\n */\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\n\nvar CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\n\nfunction cloudinary_js_config() {\n  var params = pickOnlyExistingValues.apply(undefined, [config()].concat(CLOUDINARY_JS_CONFIG_PARAMS));\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\n\nfunction v1_result_adapter(callback) {\n  if (callback == null) {\n    return undefined;\n  }\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n    return callback(void 0, result);\n  };\n}\n\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var pass_args = take(args, num_pass_args);\n    var options = args[num_pass_args];\n    var callback = args[num_pass_args + 1];\n    if (callback == null && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\n\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map(function (name) {\n    var num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\n\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n  return value;\n}\n\nvar NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\n\nvar OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nvar RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nvar OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\n\n// Split a range into the start and end values\nfunction split_range(range) {\n  // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n      return range.split(\"..\");\n    case Array:\n      return [first(range), last(range)];\n    default:\n      return [null, null];\n  }\n}\n\nfunction norm_range_value(value) {\n  // :nodoc:\n  var offset = String(value).match(RANGE_VALUE_RE);\n  if (offset) {\n    var modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n  return value;\n}\n\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object:\n      {\n        var video = \"\";\n        if ('codec' in param) {\n          video = param.codec;\n          if ('profile' in param) {\n            video += \":\" + param.profile;\n            if ('level' in param) {\n              video += \":\" + param.level;\n            }\n          }\n        }\n        return video;\n      }\n    case String:\n      return param;\n    default:\n      return null;\n  }\n}\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\nfunction archive_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename),\n    folder_path: options.folder_path\n  };\n}\n\nexports.create_source_tag = function create_source_tag(src, source_type) {\n  var codecs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  var mime_type = `video/${video_type}`;\n  if (!isEmpty(codecs)) {\n    var codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n  return `<source ${utils.html_attrs({ src, type: mime_type })}>`;\n};\n\nfunction build_explicit_api_params(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return [exports.build_upload_params(extend({}, { public_id }, options))];\n}\n\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n  breakpoints = clone(breakpoints);\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n  for (var j = 0; j < breakpoints.length; j++) {\n    var breakpoint_settings = breakpoints[j];\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(clone(breakpoint_settings.transformation));\n      }\n    }\n  }\n  return JSON.stringify(breakpoints);\n}\n\nfunction build_streaming_profiles_param() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var params = pickOnlyExistingValues(options, \"display_name\", \"representations\");\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(function (r) {\n      return {\n        transformation: utils.generate_transformation_string(r.transformation)\n      };\n    }));\n  }\n  return params;\n}\n\nfunction hashToParameters(hash) {\n  return entries(hash).reduce(function (parameters, _ref30) {\n    var _ref31 = _slicedToArray(_ref30, 2),\n        key = _ref31[0],\n        value = _ref31[1];\n\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      var items = value.map(function (v) {\n        return [key, v];\n      });\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n    return parameters;\n  }, []);\n}\n\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(function (_ref32) {\n    var _ref33 = _slicedToArray(_ref32, 2),\n        key = _ref33[0],\n        value = _ref33[1];\n\n    return `${querystring.escape(key)}=${querystring.escape(value)}`;\n  }).join('&');\n}\n\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\nfunction pickOnlyExistingValues(source) {\n  var result = {};\n  if (source) {\n    for (var _len2 = arguments.length, keys = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      keys[_key2 - 1] = arguments[_key2];\n    }\n\n    keys.forEach(function (key) {\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n  if (!isArray(data)) {\n    data = [data];\n  }\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n  return JSON.stringify(data);\n}\n\n/**\n * Empty function - do nothing\n *\n */\nexports.NOP = function () {};\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\nexports.timestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\nexports.option_consume = consumeOption; // for backwards compatibility\nexports.build_array = toArray; // for backwards compatibility\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = pickOnlyExistingValues; // for backwards compatibility\nexports.pickOnlyExistingValues = pickOnlyExistingValues;\nexports.jsonArrayParam = jsonArrayParam;\nexports.download_folder = download_folder;\nexports.base_api_url = base_api_url;\nexports.download_backedup_asset = download_backedup_asset;\n\n// was exported before, so kept for backwards compatibility\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\n\nObject.assign(module.exports, {\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: function keys(source) {\n    return Object.keys(source);\n  },\n  ensurePresenceOf\n});"]},"metadata":{},"sourceType":"script"}