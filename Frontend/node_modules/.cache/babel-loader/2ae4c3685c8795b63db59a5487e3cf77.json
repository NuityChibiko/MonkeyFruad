{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\commentitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./commentitem.css\";\nimport usercontext from \"../context/usercontext\";\n\nconst Commentitem = ({\n  commentid\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [comment, Setcomment] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n  console.log(commentid);\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n    // console.log( getcomment.data.item);\n    // Setallcomment( getcomment.data.item);\n\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      textcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      Settextcomment(commentid.textcomment);\n      Setcomment(commentid);\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mypostcommentrow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column1 mypostcommentrow1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"vl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mypost-comment-img1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-circle1\",\n          src: \"/img/profile.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mypost-comment-name1\",\n          children: [data ? \"@\" : null, commentid.username, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mypost-comment-time1\",\n            children: [\" \", commentid.datetime, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: textcomment,\n            onChange: e => {\n              Settextcomment(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleedit(commentid.commentid),\n            children: \"\\u0E15\\u0E01\\u0E25\\u0E07\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 118\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mypost-comment-comments1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypostcomment1\",\n            children: textcomment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 196\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), user && commentid.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column2 mypostcommentrow2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-containermypostcommentsetting\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: onClick,\n          className: \"mypostcommentbuttonsetting\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"mypostcommentimg-setting\",\n            src: \"/img/setting.png\",\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"ul-mypostcommentmenusetting\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"li-mypostcommentmenusetting\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"a-mypostcommentmenusetting\",\n                onClick: () => edit(data.commentid),\n                children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"li-mypostcommentmenusetting\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"a-mypostcommentmenusetting\",\n                onClick: () => deleted(data.commentid),\n                children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 48\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this) //     <div>\n  //       {comment ? comment.map(doc =>{\n  //         return (<div>\n  //            <div className=\"row mypostcommentrow\">\n  // <div className=\"column1 mypostcommentrow1\">\n  //   <div class=\"vl\"></div>\n  //   <div className=\"mypost-comment-img1\">\n  //     <img className=\"img-circle1\" src=\"/img/profile.png\" />\n  //     <div className=\"mypost-comment-name1\">\n  //      {doc ? \"@\" : null}{doc.username}\n  //       <span className=\"mypost-comment-time1\"> {doc.datetime} </span>\n  //     </div>\n  //     <br />\n  //    {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(doc.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\n  //       <div className=\"mypostcomment1\">{doc.textcomment}</div> \n  //     </div>  \n  //    } \n  //   </div> \n  //  </div> \n  //  {user && doc.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\n  //   <div className=\"menu-containermypostcommentsetting\">\n  //     <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\n  //       <img \n  //         className=\"mypostcommentimg-setting\"\n  //         src=\"/img/setting.png\"\n  //         alt=\"avatar\"\n  //       ></img> \n  //  </div>\n  //     <div\n  //       className={`mypostcommentmenusetting ${\n  //         isActive ? \"active\" : \"inactive\"\n  //       }`}\n  //     >\n  //       <ul className=\"ul-mypostcommentmenusetting\">\n  //      <li className=\"li-mypostcommentmenusetting\">\n  //           <a className=\"a-mypostcommentmenusetting\"\n  //           onClick={() => edit(doc.commentid)}\n  //           >\n  //               แก้ไขคอมเมนต์\n  //           </a>\n  //         </li> \n  //         <li className=\"li-mypostcommentmenusetting\">\n  //           <a\n  //             className=\"a-mypostcommentmenusetting\"\n  //             onClick={() => deleted(doc.commentid)}\n  //           >\n  //             {\" \"}\n  //             ลบคอมเมนต์{\" \"}\n  //           </a>\n  //         </li> \n  //       </ul>\n  //     </div>\n  //   </div>\n  // </div> : null }\n  // </div> \n  //         </div>)\n  //       }): null}\n  // </div>\n  ;\n};\n\n_s(Commentitem, \"mMFaFW7tv1avKRby2GviR8HGsnA=\");\n\n_c = Commentitem;\nexport default Commentitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentitem\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/commentitem.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Commentitem","commentid","isActive","setIsActive","onClick","user","setUser","comment","Setcomment","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","console","log","deleted","postdelete","post","window","location","reload","edit","handleedit","editcomment","gg","err","data","username","datetime","e","target","value","userid","uid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./commentitem.css\";\r\nimport usercontext from \"../context/usercontext\";\r\n\r\n\r\n\r\nconst Commentitem = ({ commentid }) => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  let { user, setUser } = useContext(usercontext);\r\n  const [comment , Setcomment] = useState()\r\n  const [item , Setitem] = useState([])\r\n  const [checkedittext , Setcheckedittext] = useState(false)\r\n  // const [edittextcomment , Setedittextcomment] = useState()\r\n  const [textcomment , Settextcomment] = useState()\r\n\r\n    \r\n      console.log(commentid)\r\n  const deleted = async (commentid) => {\r\n      const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // console.log( getcomment.data.item);\r\n      // Setallcomment( getcomment.data.item);\r\n      window.location.reload(false);\r\n  };\r\n  const edit = async () =>{\r\n    Setcheckedittext(true)\r\n  }\r\n  const handleedit = async (commentid) =>{\r\n  const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n  \r\n  }\r\n\r\n  const gg = async () => {\r\n    try {\r\n      Settextcomment(commentid.textcomment)\r\n      Setcomment(commentid)\r\n    } catch (err) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, []);\r\n \r\n  \r\n  return (\r\n    <div className=\"row mypostcommentrow\">\r\n      <div className=\"column1 mypostcommentrow1\">\r\n        <div class=\"vl\"></div>\r\n        <div className=\"mypost-comment-img1\">\r\n          <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n          <div className=\"mypost-comment-name1\">\r\n           {data ? \"@\" : null}{commentid.username}\r\n            <span className=\"mypost-comment-time1\"> {commentid.datetime} </span>\r\n          </div>\r\n          <br />\r\n         {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(commentid.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n            <div className=\"mypostcomment1\">{textcomment}</div> \r\n          </div>  \r\n         } \r\n        </div> \r\n       </div> \r\n       {user && commentid.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n        <div className=\"menu-containermypostcommentsetting\">\r\n          <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n            <img \r\n              className=\"mypostcommentimg-setting\"\r\n              src=\"/img/setting.png\"\r\n              alt=\"avatar\"\r\n            ></img> \r\n       </div>\r\n\r\n          <div\r\n            className={`mypostcommentmenusetting ${\r\n              isActive ? \"active\" : \"inactive\"\r\n            }`}\r\n          >\r\n            <ul className=\"ul-mypostcommentmenusetting\">\r\n           <li className=\"li-mypostcommentmenusetting\">\r\n                <a className=\"a-mypostcommentmenusetting\"\r\n                onClick={() => edit(data.commentid)}\r\n                >\r\n                    แก้ไขคอมเมนต์\r\n                </a>\r\n              </li> \r\n              <li className=\"li-mypostcommentmenusetting\">\r\n                <a\r\n                  className=\"a-mypostcommentmenusetting\"\r\n                  onClick={() => deleted(data.commentid)}\r\n                >\r\n                  {\" \"}\r\n                  ลบคอมเมนต์{\" \"}\r\n                </a>\r\n              </li> \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div> : null }\r\n    </div> \r\n\r\n\r\n//     <div>\r\n//       {comment ? comment.map(doc =>{\r\n//         return (<div>\r\n//            <div className=\"row mypostcommentrow\">\r\n\r\n// <div className=\"column1 mypostcommentrow1\">\r\n//   <div class=\"vl\"></div>\r\n//   <div className=\"mypost-comment-img1\">\r\n//     <img className=\"img-circle1\" src=\"/img/profile.png\" />\r\n//     <div className=\"mypost-comment-name1\">\r\n//      {doc ? \"@\" : null}{doc.username}\r\n//       <span className=\"mypost-comment-time1\"> {doc.datetime} </span>\r\n//     </div>\r\n//     <br />\r\n//    {checkedittext ? <div><input value={textcomment} onChange={(e) =>{Settextcomment(e.target.value)}}></input> <button onClick={() => handleedit(doc.commentid)}>ตกลง</button> </div>: <div className=\"mypost-comment-comments1\">\r\n//       <div className=\"mypostcomment1\">{doc.textcomment}</div> \r\n//     </div>  \r\n//    } \r\n//   </div> \r\n//  </div> \r\n//  {user && doc.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n//   <div className=\"menu-containermypostcommentsetting\">\r\n//     <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n//       <img \r\n//         className=\"mypostcommentimg-setting\"\r\n//         src=\"/img/setting.png\"\r\n//         alt=\"avatar\"\r\n//       ></img> \r\n//  </div>\r\n\r\n//     <div\r\n//       className={`mypostcommentmenusetting ${\r\n//         isActive ? \"active\" : \"inactive\"\r\n//       }`}\r\n//     >\r\n//       <ul className=\"ul-mypostcommentmenusetting\">\r\n//      <li className=\"li-mypostcommentmenusetting\">\r\n//           <a className=\"a-mypostcommentmenusetting\"\r\n//           onClick={() => edit(doc.commentid)}\r\n//           >\r\n//               แก้ไขคอมเมนต์\r\n//           </a>\r\n//         </li> \r\n//         <li className=\"li-mypostcommentmenusetting\">\r\n//           <a\r\n//             className=\"a-mypostcommentmenusetting\"\r\n//             onClick={() => deleted(doc.commentid)}\r\n//           >\r\n//             {\" \"}\r\n//             ลบคอมเมนต์{\" \"}\r\n//           </a>\r\n//         </li> \r\n//       </ul>\r\n//     </div>\r\n//   </div>\r\n// </div> : null }\r\n// </div> \r\n//         </div>)\r\n//       }): null}\r\n   \r\n  // </div>\r\n  );\r\n};\r\n\r\nexport default Commentitem;\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}