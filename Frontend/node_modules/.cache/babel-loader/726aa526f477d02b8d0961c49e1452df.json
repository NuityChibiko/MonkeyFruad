{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar iterate = require('../internals/iterate');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\n$({\n  target: 'Iterator',\n  proto: true,\n  real: true\n}, {\n  reduce: function reduce(reducer\n  /* , initialValue */\n  ) {\n    anObject(this);\n    aFunction(reducer);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    iterate(this, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = reducer(accumulator, value);\n      }\n    }, undefined, false, true);\n    if (noInitial) throw TypeError('Reduce of empty iterator with no initial value');\n    return accumulator;\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/esnext.iterator.reduce.js"],"names":["$","require","iterate","aFunction","anObject","target","proto","real","reduce","reducer","noInitial","arguments","length","accumulator","undefined","value","TypeError"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AAEAD,CAAC,CAAC;AAAEK,EAAAA,MAAM,EAAE,UAAV;AAAsBC,EAAAA,KAAK,EAAE,IAA7B;AAAmCC,EAAAA,IAAI,EAAE;AAAzC,CAAD,EAAkD;AACjDC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC;AAAQ;AAAxB,IAA8C;AACpDL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAD,IAAAA,SAAS,CAACM,OAAD,CAAT;AACA,QAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnC;AACA,QAAIC,WAAW,GAAGH,SAAS,GAAGI,SAAH,GAAeH,SAAS,CAAC,CAAD,CAAnD;AACAT,IAAAA,OAAO,CAAC,IAAD,EAAO,UAAUa,KAAV,EAAiB;AAC7B,UAAIL,SAAJ,EAAe;AACbA,QAAAA,SAAS,GAAG,KAAZ;AACAG,QAAAA,WAAW,GAAGE,KAAd;AACD,OAHD,MAGO;AACLF,QAAAA,WAAW,GAAGJ,OAAO,CAACI,WAAD,EAAcE,KAAd,CAArB;AACD;AACF,KAPM,EAOJD,SAPI,EAOO,KAPP,EAOc,IAPd,CAAP;AAQA,QAAIJ,SAAJ,EAAe,MAAMM,SAAS,CAAC,gDAAD,CAAf;AACf,WAAOH,WAAP;AACD;AAhBgD,CAAlD,CAAD","sourcesContent":["'use strict';\r\n// https://github.com/tc39/proposal-iterator-helpers\r\nvar $ = require('../internals/export');\r\nvar iterate = require('../internals/iterate');\r\nvar aFunction = require('../internals/a-function');\r\nvar anObject = require('../internals/an-object');\r\n\r\n$({ target: 'Iterator', proto: true, real: true }, {\r\n  reduce: function reduce(reducer /* , initialValue */) {\r\n    anObject(this);\r\n    aFunction(reducer);\r\n    var noInitial = arguments.length < 2;\r\n    var accumulator = noInitial ? undefined : arguments[1];\r\n    iterate(this, function (value) {\r\n      if (noInitial) {\r\n        noInitial = false;\r\n        accumulator = value;\r\n      } else {\r\n        accumulator = reducer(accumulator, value);\r\n      }\r\n    }, undefined, false, true);\r\n    if (noInitial) throw TypeError('Reduce of empty iterator with no initial value');\r\n    return accumulator;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}