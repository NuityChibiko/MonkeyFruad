{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar fails = require('../internals/fails');\n\nvar createProperty = require('../internals/create-property');\n\nvar ISNT_GENERIC = fails(function () {\n  function F() {\n    /* empty */\n  }\n\n  return !(Array.of.call(F) instanceof F);\n}); // `Array.of` method\n// https://tc39.github.io/ecma262/#sec-array.of\n// WebKit Array.of isn't generic\n\n$({\n  target: 'Array',\n  stat: true,\n  forced: ISNT_GENERIC\n}, {\n  of: function of()\n  /* ...args */\n  {\n    var index = 0;\n    var argumentsLength = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(argumentsLength);\n\n    while (argumentsLength > index) createProperty(result, index, arguments[index++]);\n\n    result.length = argumentsLength;\n    return result;\n  }\n});","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/core-js/modules/es.array.of.js"],"names":["$","require","fails","createProperty","ISNT_GENERIC","F","Array","of","call","target","stat","forced","index","argumentsLength","arguments","length","result"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,8BAAD,CAA5B;;AAEA,IAAIG,YAAY,GAAGF,KAAK,CAAC,YAAY;AACnC,WAASG,CAAT,GAAa;AAAE;AAAa;;AAC5B,SAAO,EAAEC,KAAK,CAACC,EAAN,CAASC,IAAT,CAAcH,CAAd,aAA4BA,CAA9B,CAAP;AACD,CAHuB,CAAxB,C,CAKA;AACA;AACA;;AACAL,CAAC,CAAC;AAAES,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,IAAI,EAAE,IAAzB;AAA+BC,EAAAA,MAAM,EAAEP;AAAvC,CAAD,EAAwD;AACvDG,EAAAA,EAAE,EAAE,SAASA,EAAT;AAAY;AAAe;AAC7B,QAAIK,KAAK,GAAG,CAAZ;AACA,QAAIC,eAAe,GAAGC,SAAS,CAACC,MAAhC;AACA,QAAIC,MAAM,GAAG,KAAK,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmCV,KAAxC,EAA+CO,eAA/C,CAAb;;AACA,WAAOA,eAAe,GAAGD,KAAzB,EAAgCT,cAAc,CAACa,MAAD,EAASJ,KAAT,EAAgBE,SAAS,CAACF,KAAK,EAAN,CAAzB,CAAd;;AAChCI,IAAAA,MAAM,CAACD,MAAP,GAAgBF,eAAhB;AACA,WAAOG,MAAP;AACD;AARsD,CAAxD,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar fails = require('../internals/fails');\r\nvar createProperty = require('../internals/create-property');\r\n\r\nvar ISNT_GENERIC = fails(function () {\r\n  function F() { /* empty */ }\r\n  return !(Array.of.call(F) instanceof F);\r\n});\r\n\r\n// `Array.of` method\r\n// https://tc39.github.io/ecma262/#sec-array.of\r\n// WebKit Array.of isn't generic\r\n$({ target: 'Array', stat: true, forced: ISNT_GENERIC }, {\r\n  of: function of(/* ...args */) {\r\n    var index = 0;\r\n    var argumentsLength = arguments.length;\r\n    var result = new (typeof this == 'function' ? this : Array)(argumentsLength);\r\n    while (argumentsLength > index) createProperty(result, index, arguments[index++]);\r\n    result.length = argumentsLength;\r\n    return result;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}