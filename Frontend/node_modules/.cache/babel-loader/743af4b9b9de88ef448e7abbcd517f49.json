{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSemVer;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _multilineRegex = _interopRequireDefault(require(\"./util/multilineRegex\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Regular Expression to match\r\n * semantic versioning (SemVer)\r\n * built from multi-line, multi-parts regexp\r\n * Reference: https://semver.org/\r\n */\n\n\nvar semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\n\nfunction isSemVer(str) {\n  (0, _assertString.default)(str);\n  return semanticVersioningRegex.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/validator/lib/isSemVer.js"],"names":["Object","defineProperty","exports","value","default","isSemVer","_assertString","_interopRequireDefault","require","_multilineRegex","obj","__esModule","semanticVersioningRegex","str","test","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,IAAIC,eAAe,GAAGF,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA5C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,uBAAuB,GAAG,CAAC,GAAGH,eAAe,CAACL,OAApB,EAA6B,CAAC,gDAAD,EAAmD,yFAAnD,EAA8I,0CAA9I,CAA7B,EAAwN,GAAxN,CAA9B;;AAEA,SAASC,QAAT,CAAkBQ,GAAlB,EAAuB;AACrB,GAAC,GAAGP,aAAa,CAACF,OAAlB,EAA2BS,GAA3B;AACA,SAAOD,uBAAuB,CAACE,IAAxB,CAA6BD,GAA7B,CAAP;AACD;;AAEDE,MAAM,CAACb,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAW,MAAM,CAACb,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isSemVer;\r\n\r\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\r\n\r\nvar _multilineRegex = _interopRequireDefault(require(\"./util/multilineRegex\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * Regular Expression to match\r\n * semantic versioning (SemVer)\r\n * built from multi-line, multi-parts regexp\r\n * Reference: https://semver.org/\r\n */\r\nvar semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\r\n\r\nfunction isSemVer(str) {\r\n  (0, _assertString.default)(str);\r\n  return semanticVersioningRegex.test(str);\r\n}\r\n\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}