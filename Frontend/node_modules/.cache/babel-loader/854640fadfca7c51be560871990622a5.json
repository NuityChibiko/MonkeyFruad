{"ast":null,"code":"'use strict';\n\nvar isArray = require('lodash/isArray');\n\nvar toArray = require('../parsing/toArray');\n/**\r\n * Serialize an array of arrays into a string\r\n * @param {[]|[[]]} array - An array of arrays.\r\n *                          If the first element is not an array the argument is wrapped in an array.\r\n * @returns {string} A string representation of the arrays.\r\n */\n\n\nfunction encodeDoubleArray(array) {\n  array = toArray(array);\n\n  if (!isArray(array[0])) {\n    array = [array];\n  }\n\n  return array.map(function (e) {\n    return toArray(e).join(\",\");\n  }).join(\"|\");\n}\n\nmodule.exports = encodeDoubleArray;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/cloudinary/lib-es5/utils/encoding/encodeDoubleArray.js"],"names":["isArray","require","toArray","encodeDoubleArray","array","map","e","join","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,EAAAA,KAAK,GAAGF,OAAO,CAACE,KAAD,CAAf;;AACA,MAAI,CAACJ,OAAO,CAACI,KAAK,CAAC,CAAD,CAAN,CAAZ,EAAwB;AACtBA,IAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACD;;AACD,SAAOA,KAAK,CAACC,GAAN,CAAU,UAAUC,CAAV,EAAa;AAC5B,WAAOJ,OAAO,CAACI,CAAD,CAAP,CAAWC,IAAX,CAAgB,GAAhB,CAAP;AACD,GAFM,EAEJA,IAFI,CAEC,GAFD,CAAP;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiBN,iBAAjB","sourcesContent":["'use strict';\r\n\r\nvar isArray = require('lodash/isArray');\r\nvar toArray = require('../parsing/toArray');\r\n\r\n/**\r\n * Serialize an array of arrays into a string\r\n * @param {[]|[[]]} array - An array of arrays.\r\n *                          If the first element is not an array the argument is wrapped in an array.\r\n * @returns {string} A string representation of the arrays.\r\n */\r\nfunction encodeDoubleArray(array) {\r\n  array = toArray(array);\r\n  if (!isArray(array[0])) {\r\n    array = [array];\r\n  }\r\n  return array.map(function (e) {\r\n    return toArray(e).join(\",\");\r\n  }).join(\"|\");\r\n}\r\n\r\nmodule.exports = encodeDoubleArray;"]},"metadata":{},"sourceType":"script"}