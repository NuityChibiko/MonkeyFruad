{"ast":null,"code":"/**\r\n * Module dependencies.\r\n */\nvar initialize = require('../middleware/initialize'),\n    authenticate = require('../middleware/authenticate');\n/**\r\n * Framework support for Connect/Express.\r\n *\r\n * This module provides support for using Passport with Express.  It exposes\r\n * middleware that conform to the `fn(req, res, next)` signature and extends\r\n * Node's built-in HTTP request object with useful authentication-related\r\n * functions.\r\n *\r\n * @return {Object}\r\n * @api protected\r\n */\n\n\nexports = module.exports = function () {\n  // HTTP extensions.\n  exports.__monkeypatchNode();\n\n  return {\n    initialize: initialize,\n    authenticate: authenticate\n  };\n};\n\nexports.__monkeypatchNode = function () {\n  var http = require('http');\n\n  var IncomingMessageExt = require('../http/request');\n\n  http.IncomingMessage.prototype.login = http.IncomingMessage.prototype.logIn = IncomingMessageExt.logIn;\n  http.IncomingMessage.prototype.logout = http.IncomingMessage.prototype.logOut = IncomingMessageExt.logOut;\n  http.IncomingMessage.prototype.isAuthenticated = IncomingMessageExt.isAuthenticated;\n  http.IncomingMessage.prototype.isUnauthenticated = IncomingMessageExt.isUnauthenticated;\n};","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/passport/lib/framework/connect.js"],"names":["initialize","require","authenticate","exports","module","__monkeypatchNode","http","IncomingMessageExt","IncomingMessage","prototype","login","logIn","logout","logOut","isAuthenticated","isUnauthenticated"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAAxB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAAC,4BAAD,CAD1B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiB,YAAW;AAEpC;AACAA,EAAAA,OAAO,CAACE,iBAAR;;AAEA,SAAO;AACLL,IAAAA,UAAU,EAAEA,UADP;AAELE,IAAAA,YAAY,EAAEA;AAFT,GAAP;AAID,CATD;;AAWAC,OAAO,CAACE,iBAAR,GAA4B,YAAW;AACrC,MAAIC,IAAI,GAAGL,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAIM,kBAAkB,GAAGN,OAAO,CAAC,iBAAD,CAAhC;;AAEAK,EAAAA,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BC,KAA/B,GACAJ,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BE,KAA/B,GAAuCJ,kBAAkB,CAACI,KAD1D;AAEAL,EAAAA,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BG,MAA/B,GACAN,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BI,MAA/B,GAAwCN,kBAAkB,CAACM,MAD3D;AAEAP,EAAAA,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BK,eAA/B,GAAiDP,kBAAkB,CAACO,eAApE;AACAR,EAAAA,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BM,iBAA/B,GAAmDR,kBAAkB,CAACQ,iBAAtE;AACD,CAVD","sourcesContent":["/**\r\n * Module dependencies.\r\n */\r\nvar initialize = require('../middleware/initialize')\r\n  , authenticate = require('../middleware/authenticate');\r\n  \r\n/**\r\n * Framework support for Connect/Express.\r\n *\r\n * This module provides support for using Passport with Express.  It exposes\r\n * middleware that conform to the `fn(req, res, next)` signature and extends\r\n * Node's built-in HTTP request object with useful authentication-related\r\n * functions.\r\n *\r\n * @return {Object}\r\n * @api protected\r\n */\r\nexports = module.exports = function() {\r\n  \r\n  // HTTP extensions.\r\n  exports.__monkeypatchNode();\r\n  \r\n  return {\r\n    initialize: initialize,\r\n    authenticate: authenticate\r\n  };\r\n};\r\n\r\nexports.__monkeypatchNode = function() {\r\n  var http = require('http');\r\n  var IncomingMessageExt = require('../http/request');\r\n  \r\n  http.IncomingMessage.prototype.login =\r\n  http.IncomingMessage.prototype.logIn = IncomingMessageExt.logIn;\r\n  http.IncomingMessage.prototype.logout =\r\n  http.IncomingMessage.prototype.logOut = IncomingMessageExt.logOut;\r\n  http.IncomingMessage.prototype.isAuthenticated = IncomingMessageExt.isAuthenticated;\r\n  http.IncomingMessage.prototype.isUnauthenticated = IncomingMessageExt.isUnauthenticated;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}