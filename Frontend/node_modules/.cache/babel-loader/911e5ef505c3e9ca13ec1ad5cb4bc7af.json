{"ast":null,"code":"// eslint-disable-next-line import/order\nconst config = require(\"../config\");\n\nconst https = /^http:/.test(config().upload_prefix) ? require('http') : require('https');\n\nconst querystring = require(\"querystring\");\n\nconst Q = require('q');\n\nconst url = require('url');\n\nconst utils = require(\"../utils\");\n\nconst ensureOption = require('../utils/ensureOption').defaults(config());\n\nconst {\n  extend,\n  includes\n} = utils;\n\nfunction execute_request(method, params, auth, api_url, callback, options = {}) {\n  method = method.toUpperCase();\n  const deferred = Q.defer();\n  let query_params, handle_response; // declare to user later\n\n  let key = auth.key;\n  let secret = auth.secret;\n  let content_type = 'application/x-www-form-urlencoded';\n\n  if (options.content_type === 'json') {\n    query_params = JSON.stringify(params);\n    content_type = 'application/json';\n  } else {\n    query_params = querystring.stringify(params);\n  }\n\n  if (method === \"GET\") {\n    api_url += \"?\" + query_params;\n  }\n\n  let request_options = url.parse(api_url);\n  request_options = extend(request_options, {\n    method: method,\n    headers: {\n      'Content-Type': content_type,\n      'User-Agent': utils.getUserAgent()\n    },\n    auth: key + \":\" + secret\n  });\n\n  if (options.agent != null) {\n    request_options.agent = options.agent;\n  }\n\n  if (method !== \"GET\") {\n    request_options.headers['Content-Length'] = Buffer.byteLength(query_params);\n  }\n\n  handle_response = function (res) {\n    if (includes([200, 400, 401, 403, 404, 409, 420, 500], res.statusCode)) {\n      let buffer = \"\";\n      let error = false;\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        let result;\n\n        if (error) {\n          return;\n        }\n\n        try {\n          result = JSON.parse(buffer);\n        } catch (e) {\n          result = {\n            error: {\n              message: \"Server return invalid JSON response. Status Code \" + res.statusCode\n            }\n          };\n        }\n\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n        } else {\n          result.rate_limit_allowed = parseInt(res.headers[\"x-featureratelimit-limit\"]);\n          result.rate_limit_reset_at = new Date(res.headers[\"x-featureratelimit-reset\"]);\n          result.rate_limit_remaining = parseInt(res.headers[\"x-featureratelimit-remaining\"]);\n        }\n\n        if (result.error) {\n          deferred.reject(Object.assign({\n            request_options,\n            query_params\n          }, result));\n        } else {\n          deferred.resolve(result);\n        }\n\n        if (typeof callback === \"function\") {\n          callback(result);\n        }\n      });\n      res.on(\"error\", function (e) {\n        error = true;\n        let err_obj = {\n          error: {\n            message: e,\n            http_code: res.statusCode,\n            request_options,\n            query_params\n          }\n        };\n        deferred.reject(err_obj.error);\n\n        if (typeof callback === \"function\") {\n          callback(err_obj);\n        }\n      });\n    } else {\n      let err_obj = {\n        error: {\n          message: \"Server returned unexpected status code - \" + res.statusCode,\n          http_code: res.statusCode,\n          request_options,\n          query_params\n        }\n      };\n      deferred.reject(err_obj.error);\n\n      if (typeof callback === \"function\") {\n        callback(err_obj);\n      }\n    }\n  };\n\n  const request = https.request(request_options, handle_response);\n  request.on(\"error\", function (e) {\n    deferred.reject(e);\n    return typeof callback === \"function\" ? callback({\n      error: e\n    }) : void 0;\n  });\n  request.setTimeout(ensureOption(options, \"timeout\", 60000));\n\n  if (method !== \"GET\") {\n    request.write(query_params);\n  }\n\n  request.end();\n  return deferred.promise;\n}\n\nmodule.exports = execute_request;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/cloudinary/lib/api_client/execute_request.js"],"names":["config","require","https","test","upload_prefix","querystring","Q","url","utils","ensureOption","defaults","extend","includes","execute_request","method","params","auth","api_url","callback","options","toUpperCase","deferred","defer","query_params","handle_response","key","secret","content_type","JSON","stringify","request_options","parse","headers","getUserAgent","agent","Buffer","byteLength","res","statusCode","buffer","error","on","d","result","e","message","http_code","rate_limit_allowed","parseInt","rate_limit_reset_at","Date","rate_limit_remaining","reject","Object","assign","resolve","err_obj","request","setTimeout","write","end","promise","module","exports"],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/order\r\nconst config = require(\"../config\");\r\nconst https = /^http:/.test(config().upload_prefix) ? require('http') : require('https');\r\nconst querystring = require(\"querystring\");\r\nconst Q = require('q');\r\nconst url = require('url');\r\nconst utils = require(\"../utils\");\r\nconst ensureOption = require('../utils/ensureOption').defaults(config());\r\n\r\nconst { extend, includes } = utils;\r\n\r\nfunction execute_request(method, params, auth, api_url, callback, options = {}) {\r\n  method = method.toUpperCase();\r\n  const deferred = Q.defer();\r\n\r\n  let query_params, handle_response; // declare to user later\r\n  let key = auth.key;\r\n  let secret = auth.secret;\r\n  let content_type = 'application/x-www-form-urlencoded';\r\n\r\n  if (options.content_type === 'json') {\r\n    query_params = JSON.stringify(params);\r\n    content_type = 'application/json';\r\n  } else {\r\n    query_params = querystring.stringify(params);\r\n  }\r\n\r\n  if (method === \"GET\") {\r\n    api_url += \"?\" + query_params;\r\n  }\r\n\r\n  let request_options = url.parse(api_url);\r\n\r\n  request_options = extend(request_options, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': content_type,\r\n      'User-Agent': utils.getUserAgent()\r\n    },\r\n    auth: key + \":\" + secret\r\n  });\r\n  if (options.agent != null) {\r\n    request_options.agent = options.agent;\r\n  }\r\n  if (method !== \"GET\") {\r\n    request_options.headers['Content-Length'] = Buffer.byteLength(query_params);\r\n  }\r\n  handle_response = function (res) {\r\n    if (includes([200, 400, 401, 403, 404, 409, 420, 500], res.statusCode)) {\r\n      let buffer = \"\";\r\n      let error = false;\r\n      res.on(\"data\", function (d) {\r\n        buffer += d;\r\n        return buffer;\r\n      });\r\n      res.on(\"end\", function () {\r\n        let result;\r\n        if (error) {\r\n          return;\r\n        }\r\n        try {\r\n          result = JSON.parse(buffer);\r\n        } catch (e) {\r\n          result = {\r\n            error: {\r\n              message: \"Server return invalid JSON response. Status Code \" + res.statusCode\r\n            }\r\n          };\r\n        }\r\n\r\n        if (result.error) {\r\n          result.error.http_code = res.statusCode;\r\n        } else {\r\n          result.rate_limit_allowed = parseInt(res.headers[\"x-featureratelimit-limit\"]);\r\n          result.rate_limit_reset_at = new Date(res.headers[\"x-featureratelimit-reset\"]);\r\n          result.rate_limit_remaining = parseInt(res.headers[\"x-featureratelimit-remaining\"]);\r\n        }\r\n\r\n        if (result.error) {\r\n          deferred.reject(Object.assign({\r\n            request_options,\r\n            query_params\r\n          }, result));\r\n        } else {\r\n          deferred.resolve(result);\r\n        }\r\n        if (typeof callback === \"function\") {\r\n          callback(result);\r\n        }\r\n      });\r\n      res.on(\"error\", function (e) {\r\n        error = true;\r\n        let err_obj = {\r\n          error: {\r\n            message: e,\r\n            http_code: res.statusCode,\r\n            request_options,\r\n            query_params\r\n          }\r\n        };\r\n        deferred.reject(err_obj.error);\r\n        if (typeof callback === \"function\") {\r\n          callback(err_obj);\r\n        }\r\n      });\r\n    } else {\r\n      let err_obj = {\r\n        error: {\r\n          message: \"Server returned unexpected status code - \" + res.statusCode,\r\n          http_code: res.statusCode,\r\n          request_options,\r\n          query_params\r\n        }\r\n      };\r\n      deferred.reject(err_obj.error);\r\n      if (typeof callback === \"function\") {\r\n        callback(err_obj);\r\n      }\r\n    }\r\n  };\r\n\r\n  const request = https.request(request_options, handle_response);\r\n  request.on(\"error\", function (e) {\r\n    deferred.reject(e);\r\n    return typeof callback === \"function\" ? callback({ error: e }) : void 0;\r\n  });\r\n  request.setTimeout(ensureOption(options, \"timeout\", 60000));\r\n  if (method !== \"GET\") {\r\n    request.write(query_params);\r\n  }\r\n  request.end();\r\n  return deferred.promise;\r\n}\r\n\r\nmodule.exports = execute_request;\r\n"]},"metadata":{},"sourceType":"script"}