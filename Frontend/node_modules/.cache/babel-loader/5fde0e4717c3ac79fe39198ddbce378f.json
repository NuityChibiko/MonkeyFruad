{"ast":null,"code":"const isArray = require('lodash/isArray');\n\nconst toArray = require('../parsing/toArray');\n/**\n * Serialize an array of arrays into a string\n * @param {[]|[[]]} array - An array of arrays.\n *                          If the first element is not an array the argument is wrapped in an array.\n * @returns {string} A string representation of the arrays.\n */\n\n\nfunction encodeDoubleArray(array) {\n  array = toArray(array);\n\n  if (!isArray(array[0])) {\n    array = [array];\n  }\n\n  return array.map(e => toArray(e).join(\",\")).join(\"|\");\n}\n\nmodule.exports = encodeDoubleArray;","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/node_modules/cloudinary/lib/utils/encoding/encodeDoubleArray.js"],"names":["isArray","require","toArray","encodeDoubleArray","array","map","e","join","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,EAAAA,KAAK,GAAGF,OAAO,CAACE,KAAD,CAAf;;AACA,MAAI,CAACJ,OAAO,CAACI,KAAK,CAAC,CAAD,CAAN,CAAZ,EAAwB;AACtBA,IAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACD;;AACD,SAAOA,KAAK,CAACC,GAAN,CAAUC,CAAC,IAAIJ,OAAO,CAACI,CAAD,CAAP,CAAWC,IAAX,CAAgB,GAAhB,CAAf,EAAqCA,IAArC,CAA0C,GAA1C,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBN,iBAAjB","sourcesContent":["const isArray = require('lodash/isArray');\nconst toArray = require('../parsing/toArray');\n\n/**\n * Serialize an array of arrays into a string\n * @param {[]|[[]]} array - An array of arrays.\n *                          If the first element is not an array the argument is wrapped in an array.\n * @returns {string} A string representation of the arrays.\n */\nfunction encodeDoubleArray(array) {\n  array = toArray(array);\n  if (!isArray(array[0])) {\n    array = [array];\n  }\n  return array.map(e => toArray(e).join(\",\")).join(\"|\");\n}\n\nmodule.exports = encodeDoubleArray;\n"]},"metadata":{},"sourceType":"script"}