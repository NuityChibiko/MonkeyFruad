{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Result = exports.validationResult = void 0;\n\nconst _ = require(\"lodash\");\n\nconst base_1 = require(\"./base\");\n\nconst utils_1 = require(\"./utils\"); // Assign to a variable so that TS doesn't use its catch all overload, which returns any\n\n\nconst withWithDefaults = {\n  withDefaults\n};\nexports.validationResult = Object.assign(withDefaults(), withWithDefaults);\n\nclass Result {\n  constructor(formatter, errors) {\n    this.formatter = formatter;\n    this.errors = errors;\n  }\n\n  array(options) {\n    return options && options.onlyFirstError ? Object.values(this.mapped()) : this.errors.map(this.formatter);\n  }\n\n  mapped() {\n    return this.errors.reduce((mapping, error) => {\n      if (!mapping[error.param]) {\n        mapping[error.param] = this.formatter(error);\n      }\n\n      return mapping;\n    }, {});\n  }\n\n  formatWith(formatter) {\n    return new Result(formatter, this.errors);\n  }\n\n  isEmpty() {\n    return this.errors.length === 0;\n  }\n\n  throw() {\n    if (!this.isEmpty()) {\n      throw Object.assign(new Error(), utils_1.bindAll(this));\n    }\n  }\n\n}\n\nexports.Result = Result;\n\nfunction withDefaults(options = {}) {\n  const defaults = {\n    formatter: error => error\n  };\n\n  const actualOptions = _.defaults(options, defaults);\n\n  return req => {\n    const contexts = req[base_1.contextsKey] || [];\n\n    const errors = _.flatMap(contexts, 'errors');\n\n    return new Result(actualOptions.formatter, errors);\n  };\n}","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Backend/node_modules/express-validator/src/validation-result.js"],"names":["Object","defineProperty","exports","value","Result","validationResult","_","require","base_1","utils_1","withWithDefaults","withDefaults","assign","constructor","formatter","errors","array","options","onlyFirstError","values","mapped","map","reduce","mapping","error","param","formatWith","isEmpty","length","throw","Error","bindAll","defaults","actualOptions","req","contexts","contextsKey","flatMap"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,gBAAR,GAA2B,KAAK,CAAjD;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB,C,CACA;;;AACA,MAAMG,gBAAgB,GAAG;AAAEC,EAAAA;AAAF,CAAzB;AACAT,OAAO,CAACG,gBAAR,GAA2BL,MAAM,CAACY,MAAP,CAAcD,YAAY,EAA1B,EAA8BD,gBAA9B,CAA3B;;AACA,MAAMN,MAAN,CAAa;AACTS,EAAAA,WAAW,CAACC,SAAD,EAAYC,MAAZ,EAAoB;AAC3B,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACX,WAAOA,OAAO,IAAIA,OAAO,CAACC,cAAnB,GACDlB,MAAM,CAACmB,MAAP,CAAc,KAAKC,MAAL,EAAd,CADC,GAED,KAAKL,MAAL,CAAYM,GAAZ,CAAgB,KAAKP,SAArB,CAFN;AAGH;;AACDM,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKL,MAAL,CAAYO,MAAZ,CAAmB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1C,UAAI,CAACD,OAAO,CAACC,KAAK,CAACC,KAAP,CAAZ,EAA2B;AACvBF,QAAAA,OAAO,CAACC,KAAK,CAACC,KAAP,CAAP,GAAuB,KAAKX,SAAL,CAAeU,KAAf,CAAvB;AACH;;AACD,aAAOD,OAAP;AACH,KALM,EAKJ,EALI,CAAP;AAMH;;AACDG,EAAAA,UAAU,CAACZ,SAAD,EAAY;AAClB,WAAO,IAAIV,MAAJ,CAAWU,SAAX,EAAsB,KAAKC,MAA3B,CAAP;AACH;;AACDY,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKZ,MAAL,CAAYa,MAAZ,KAAuB,CAA9B;AACH;;AACDC,EAAAA,KAAK,GAAG;AACJ,QAAI,CAAC,KAAKF,OAAL,EAAL,EAAqB;AACjB,YAAM3B,MAAM,CAACY,MAAP,CAAc,IAAIkB,KAAJ,EAAd,EAA2BrB,OAAO,CAACsB,OAAR,CAAgB,IAAhB,CAA3B,CAAN;AACH;AACJ;;AA5BQ;;AA8Bb7B,OAAO,CAACE,MAAR,GAAiBA,MAAjB;;AACA,SAASO,YAAT,CAAsBM,OAAO,GAAG,EAAhC,EAAoC;AAChC,QAAMe,QAAQ,GAAG;AACblB,IAAAA,SAAS,EAAEU,KAAK,IAAIA;AADP,GAAjB;;AAGA,QAAMS,aAAa,GAAG3B,CAAC,CAAC0B,QAAF,CAAWf,OAAX,EAAoBe,QAApB,CAAtB;;AACA,SAAQE,GAAD,IAAS;AACZ,UAAMC,QAAQ,GAAGD,GAAG,CAAC1B,MAAM,CAAC4B,WAAR,CAAH,IAA2B,EAA5C;;AACA,UAAMrB,MAAM,GAAGT,CAAC,CAAC+B,OAAF,CAAUF,QAAV,EAAoB,QAApB,CAAf;;AACA,WAAO,IAAI/B,MAAJ,CAAW6B,aAAa,CAACnB,SAAzB,EAAoCC,MAApC,CAAP;AACH,GAJD;AAKH","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Result = exports.validationResult = void 0;\r\nconst _ = require(\"lodash\");\r\nconst base_1 = require(\"./base\");\r\nconst utils_1 = require(\"./utils\");\r\n// Assign to a variable so that TS doesn't use its catch all overload, which returns any\r\nconst withWithDefaults = { withDefaults };\r\nexports.validationResult = Object.assign(withDefaults(), withWithDefaults);\r\nclass Result {\r\n    constructor(formatter, errors) {\r\n        this.formatter = formatter;\r\n        this.errors = errors;\r\n    }\r\n    array(options) {\r\n        return options && options.onlyFirstError\r\n            ? Object.values(this.mapped())\r\n            : this.errors.map(this.formatter);\r\n    }\r\n    mapped() {\r\n        return this.errors.reduce((mapping, error) => {\r\n            if (!mapping[error.param]) {\r\n                mapping[error.param] = this.formatter(error);\r\n            }\r\n            return mapping;\r\n        }, {});\r\n    }\r\n    formatWith(formatter) {\r\n        return new Result(formatter, this.errors);\r\n    }\r\n    isEmpty() {\r\n        return this.errors.length === 0;\r\n    }\r\n    throw() {\r\n        if (!this.isEmpty()) {\r\n            throw Object.assign(new Error(), utils_1.bindAll(this));\r\n        }\r\n    }\r\n}\r\nexports.Result = Result;\r\nfunction withDefaults(options = {}) {\r\n    const defaults = {\r\n        formatter: error => error,\r\n    };\r\n    const actualOptions = _.defaults(options, defaults);\r\n    return (req) => {\r\n        const contexts = req[base_1.contextsKey] || [];\r\n        const errors = _.flatMap(contexts, 'errors');\r\n        return new Result(actualOptions.formatter, errors);\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"script"}